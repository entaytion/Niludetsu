import discord
from discord import app_commands
from discord.ext import commands
import wavelink
from utils import create_embed
from .Core import Core

class Volume(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.core = None
        
    async def cog_load(self):
        self.core = self.bot.get_cog('Core')

    @app_commands.command(name="volume", description="–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å –º—É–∑—ã–∫–∏ (0-150%)")
    @app_commands.describe(volume="–£—Ä–æ–≤–µ–Ω—å –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –æ—Ç 0 –¥–æ 150")
    async def volume(self, interaction: discord.Interaction, volume: int):
        await interaction.response.defer()
        
        try:
            player = await self.core.get_player(interaction)
            if not player or not player.is_playing():
                await interaction.followup.send(
                    embed=create_embed(
                        description="–°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç!"
                    )
                )
                return

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω –≥—Ä–æ–º–∫–æ—Å—Ç–∏
            if not 0 <= volume <= 150:
                await interaction.followup.send(
                    embed=create_embed(
                        description="–ì—Ä–æ–º–∫–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 0 –¥–æ 150%!"
                    )
                )
                return

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é –≥—Ä–æ–º–∫–æ—Å—Ç—å
            await player.set_volume(volume)
            
            # –°–æ–∑–¥–∞–µ–º —ç–º–±–µ–¥ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
            embed = create_embed(
                title="üîä –ì—Ä–æ–º–∫–æ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∞",
                description=f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≥—Ä–æ–º–∫–æ—Å—Ç—å: **{volume}%**"
            )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –≥—Ä–æ–º–∫–æ—Å—Ç–∏
            if volume == 0:
                indicator = "üîá"
            elif volume < 30:
                indicator = "üîà"
            elif volume < 70:
                indicator = "üîâ"
            else:
                indicator = "üîä"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—É—é —à–∫–∞–ª—É –≥—Ä–æ–º–∫–æ—Å—Ç–∏
            bars = int((volume / 150) * 10)
            volume_bar = "‚ñ∞" * bars + "‚ñ±" * (10 - bars)
            embed.add_field(
                name=f"{indicator} –£—Ä–æ–≤–µ–Ω—å –≥—Ä–æ–º–∫–æ—Å—Ç–∏:",
                value=f"```{volume_bar}```",
                inline=False
            )

            await interaction.followup.send(embed=embed)

        except Exception as e:
            print(f"Error in volume command: {e}")
            await interaction.followup.send(
                embed=create_embed(
                    description="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!"
                )
            )

async def setup(bot):
    await bot.add_cog(Volume(bot)) 