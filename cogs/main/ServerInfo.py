import discord
from discord.ext import commands
from discord import app_commands
from utils import create_embed, EMOJIS
from datetime import datetime
from typing import Optional

def get_server_level(verification_level):
    levels = {
        discord.VerificationLevel.none: "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç",
        discord.VerificationLevel.low: "–ù–∏–∑–∫–∏–π",
        discord.VerificationLevel.medium: "–°—Ä–µ–¥–Ω–∏–π",
        discord.VerificationLevel.high: "–í—ã—Å–æ–∫–∏–π",
        discord.VerificationLevel.highest: "–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π"
    }
    return levels.get(verification_level, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")

class ServerInfo(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    def count_channels(self, guild):
        """–ü–æ–¥—Å—á–µ—Ç –∫–∞–Ω–∞–ª–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"""
        text_channels = len(guild.text_channels)
        voice_channels = len(guild.voice_channels)
        categories = len(guild.categories)
        stage_channels = len(guild.stage_channels)
        forum_channels = len([c for c in guild.channels if isinstance(c, discord.ForumChannel)])
        announcement_channels = len([c for c in guild.text_channels if c.is_news()])
        
        return {
            "text": text_channels,
            "voice": voice_channels,
            "categories": categories,
            "stage": stage_channels,
            "forum": forum_channels,
            "news": announcement_channels,
            "total": text_channels + voice_channels + stage_channels + forum_channels
        }

    def get_member_status(self, guild):
        """–ü–æ–¥—Å—á–µ—Ç —Å—Ç–∞—Ç—É—Å–æ–≤ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"""
        online = len([m for m in guild.members if m.status == discord.Status.online])
        idle = len([m for m in guild.members if m.status == discord.Status.idle])
        dnd = len([m for m in guild.members if m.status == discord.Status.dnd])
        offline = len([m for m in guild.members if m.status == discord.Status.offline])
        
        return {
            "online": online,
            "idle": idle,
            "dnd": dnd,
            "offline": offline
        }

    @app_commands.command(name="serverinfo", description="–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ")
    async def serverinfo(self, interaction: discord.Interaction):
        try:
            await interaction.response.defer()
            guild = interaction.guild
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–∞—Ö –∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö
            channels = self.count_channels(guild)
            member_status = self.get_member_status(guild)
            
            # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —ç–º–±–µ–¥
            embed = create_embed(
                title=f"‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ {guild.name}",
                description=f"{guild.description if guild.description else '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}"
            )

            # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            embed.add_field(
                name="üìä –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
                value=f"""
{EMOJIS['DOT']} **ID —Å–µ—Ä–≤–µ—Ä–∞**: `{guild.id}`
{EMOJIS['DOT']} **–í–ª–∞–¥–µ–ª–µ—Ü**: {guild.owner.mention} (`{guild.owner.id}`)
{EMOJIS['DOT']} **–°–æ–∑–¥–∞–Ω**: <t:{int(guild.created_at.timestamp())}:F>
{EMOJIS['DOT']} **–£—Ä–æ–≤–µ–Ω—å –±—É—Å—Ç–∞**: `{guild.premium_tier} —É—Ä–æ–≤–µ–Ω—å`
{EMOJIS['DOT']} **–ë—É—Å—Ç–æ–≤**: `{guild.premium_subscription_count}`
{EMOJIS['DOT']} **–£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–≤–µ—Ä–∫–∏**: `{get_server_level(guild.verification_level)}`
{EMOJIS['DOT']} **–†–µ–≥–∏–æ–Ω**: `{str(guild.preferred_locale)}`
                """,
                inline=False
            )

            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
            bots = len([m for m in guild.members if m.bot])
            humans = guild.member_count - bots
            
            embed.add_field(
                name="üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏",
                value=f"""
{EMOJIS['DOT']} **–í—Å–µ–≥–æ**: `{guild.member_count}`
{EMOJIS['DOT']} **–õ—é–¥–µ–π**: `{humans}`
{EMOJIS['DOT']} **–ë–æ—Ç–æ–≤**: `{bots}`
{EMOJIS['DOT']} **–û–Ω–ª–∞–π–Ω**: `{member_status['online']}`
{EMOJIS['DOT']} **–ù–µ –∞–∫—Ç–∏–≤–Ω—ã**: `{member_status['idle']}`
{EMOJIS['DOT']} **–ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å**: `{member_status['dnd']}`
{EMOJIS['DOT']} **–û—Ñ—Ñ–ª–∞–π–Ω**: `{member_status['offline']}`
                """,
                inline=True
            )

            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–Ω–∞–ª–æ–≤
            embed.add_field(
                name="üìù –ö–∞–Ω–∞–ª—ã",
                value=f"""
{EMOJIS['DOT']} **–í—Å–µ–≥–æ**: `{channels['total']}`
{EMOJIS['DOT']} **–¢–µ–∫—Å—Ç–æ–≤—ã—Ö**: `{channels['text']}`
{EMOJIS['DOT']} **–ì–æ–ª–æ—Å–æ–≤—ã—Ö**: `{channels['voice']}`
{EMOJIS['DOT']} **–ö–∞—Ç–µ–≥–æ—Ä–∏–π**: `{channels['categories']}`
{EMOJIS['DOT']} **–¢—Ä–∏–±—É–Ω**: `{channels['stage']}`
{EMOJIS['DOT']} **–§–æ—Ä—É–º–æ–≤**: `{channels['forum']}`
{EMOJIS['DOT']} **–ù–æ–≤–æ—Å—Ç–Ω—ã—Ö**: `{channels['news']}`
                """,
                inline=True
            )

            # –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –º–æ–¥–µ—Ä–∞—Ü–∏—è
            features = [f"`{feature.replace('_', ' ').title()}`" for feature in guild.features]
            embed.add_field(
                name="üõ°Ô∏è –§—É–Ω–∫—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞",
                value=f"{', '.join(features) if features else '`–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç`'}",
                inline=False
            )

            # –≠–º–æ–¥–∑–∏ –∏ —Å—Ç–∏–∫–µ—Ä—ã
            emoji_stats = f"{EMOJIS['DOT']} **–û–±—ã—á–Ω—ã–µ**: `{len([e for e in guild.emojis if not e.animated])}/{guild.emoji_limit}`\n"
            emoji_stats += f"{EMOJIS['DOT']} **–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ**: `{len([e for e in guild.emojis if e.animated])}/{guild.emoji_limit}`\n"
            emoji_stats += f"{EMOJIS['DOT']} **–°—Ç–∏–∫–µ—Ä—ã**: `{len(guild.stickers)}/{guild.sticker_limit}`"
            
            embed.add_field(
                name="üòÄ –≠–º–æ–¥–∑–∏ –∏ —Å—Ç–∏–∫–µ—Ä—ã",
                value=emoji_stats,
                inline=False
            )

            # –†–æ–ª–∏
            roles = [role for role in guild.roles if not role.is_default()]
            roles.reverse()  # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–æ–ª–∏ –ø–æ –∏–µ—Ä–∞—Ä—Ö–∏–∏
            role_count = len(roles)
            
            if role_count > 0:
                roles_str = " ".join([role.mention for role in roles[:20]])  # –ü–µ—Ä–≤—ã–µ 20 —Ä–æ–ª–µ–π
                if role_count > 20:
                    roles_str += f"\n*–∏ –µ—â–µ {role_count - 20} —Ä–æ–ª–µ–π...*"
            else:
                roles_str = "`–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç`"

            embed.add_field(
                name=f"üëë –†–æ–ª–∏ [{role_count}]",
                value=roles_str,
                inline=False
            )

            # –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É —Å–µ—Ä–≤–µ—Ä–∞
            if guild.icon:
                embed.set_thumbnail(url=guild.icon.url)

            # –î–æ–±–∞–≤–ª—è–µ–º –±–∞–Ω–Ω–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞
            if guild.banner:
                embed.set_image(url=guild.banner.url)

            await interaction.followup.send(embed=embed)

        except Exception as e:
            await interaction.followup.send(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

async def setup(bot):
    await bot.add_cog(ServerInfo(bot)) 