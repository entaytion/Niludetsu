import discord
from discord import app_commands
from discord.ext import commands
from datetime import datetime, timedelta, timezone
from typing import Optional, Dict, List, Tuple
from Niludetsu.utils.embed import Embed
from Niludetsu.utils.constants import Emojis
from Niludetsu.database.db import Database

class AccountType:
    NORMAL = "–û–±—ã—á–Ω—ã–π"
    NEW = "–ù–æ–≤—ã–π"
    SUSPICIOUS = "–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π"

class InviteSource:
    UNKNOWN = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
    DISCORD = "Discord"
    SERVER = "–°–µ—Ä–≤–µ—Ä"
    VANITY = "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞"
    INTEGRATION = "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è"
    TWITTER = "Twitter"
    FACEBOOK = "Facebook"
    INSTAGRAM = "Instagram"
    REDDIT = "Reddit"
    YOUTUBE = "YouTube"
    TWITCH = "Twitch"
    STEAM = "Steam"
    XBOX = "Xbox"
    PLAYSTATION = "PlayStation"
    MOBILE = "–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    DESKTOP = "–ö–æ–º–ø—å—é—Ç–µ—Ä"
    WEB = "–í–µ–±-–±—Ä–∞—É–∑–µ—Ä"

    @staticmethod
    def get_platform_emoji(source: str) -> str:
        emoji_map = {
            "TWITTER": "üê¶",
            "FACEBOOK": "üë•",
            "INSTAGRAM": "üì∏",
            "REDDIT": "ü§ñ",
            "YOUTUBE": "üé•",
            "TWITCH": "üì∫",
            "STEAM": "üéÆ",
            "XBOX": "üü©",
            "PLAYSTATION": "üéØ",
            "MOBILE": "üì±",
            "DESKTOP": "üíª",
            "WEB": "üåê",
            "UNKNOWN": "‚ùì"
        }
        return emoji_map.get(source, "‚ùì")

    @staticmethod
    def from_invite_source(source: Optional[str]) -> Tuple[str, str]:
        """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ —á–∏—Ç–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç"""
        if not source:
            return "UNKNOWN", f"‚ùì –ò—Å—Ç–æ—á–Ω–∏–∫ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"
            
        source = source.upper()
        platform = source.split('_')[0] if '_' in source else source
        
        if platform in ["TWITTER", "FACEBOOK", "INSTAGRAM", "REDDIT", "YOUTUBE", "TWITCH"]:
            emoji = InviteSource.get_platform_emoji(platform)
            return platform, f"{emoji} {platform.capitalize()}"
        elif platform in ["DESKTOP", "MOBILE", "WEB"]:
            emoji = InviteSource.get_platform_emoji(platform)
            return platform, f"{emoji} {platform.capitalize()}"
        elif platform in ["XBOX", "PLAYSTATION", "STEAM"]:
            emoji = InviteSource.get_platform_emoji(platform)
            return platform, f"{emoji} {platform}"
        else:
            return "UNKNOWN", f"‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ({source})"

class InviteTracker:
    """–ö–ª–∞—Å—Å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—Ö–æ–¥–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä"""
    def __init__(self, bot):
        self.bot = bot
        self.db = Database()
        self.guild_invites = {}
        
    async def load_invite_cache(self, guild_id: str):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–µ—à–∞ –∏–Ω–≤–∞–π—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        try:
            results = await self.db.fetch_all(
                """
                SELECT invite_code, uses, inviter_id
                FROM invite_cache
                WHERE guild_id = ?
                """,
                guild_id
            )
            
            self.guild_invites[guild_id] = {
                row['invite_code']: row['uses'] for row in results
            }
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–µ—à–∞ –∏–Ω–≤–∞–π—Ç–æ–≤: {e}")
            
    async def save_invite_cache(self, guild_id: str, invites: dict):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–µ—à–∞ –∏–Ω–≤–∞–π—Ç–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
        try:
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏
            await self.db.execute(
                "DELETE FROM invite_cache WHERE guild_id = ?",
                guild_id
            )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏
            for invite_code, uses in invites.items():
                await self.db.execute(
                    """
                    INSERT INTO invite_cache (guild_id, invite_code, uses)
                    VALUES (?, ?, ?)
                    """,
                    guild_id, invite_code, uses
                )
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–µ—à–∞ –∏–Ω–≤–∞–π—Ç–æ–≤: {e}")
            
    async def cache_invites(self, guild: discord.Guild):
        """–ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π —Å–µ—Ä–≤–µ—Ä–∞"""
        try:
            invites = await guild.invites()
            current_invites = {invite.code: invite.uses for invite in invites}
            
            # –î–æ–±–∞–≤–ª—è–µ–º vanity url –µ—Å–ª–∏ –µ—Å—Ç—å
            if guild.vanity_url:
                try:
                    vanity = await guild.vanity_invite()
                    if vanity:
                        current_invites[vanity.code] = vanity.uses
                except:
                    pass
                    
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–∞–º—è—Ç—å –∏ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            self.guild_invites[guild.id] = current_invites
            await self.save_invite_cache(str(guild.id), current_invites)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–Ω–≤–∞–π—Ç–æ–≤: {e}")
            
    async def get_used_invite(self, guild: discord.Guild) -> Tuple[str, discord.Member]:
        """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
            current_invites = await guild.invites()
            current_uses = {invite.code: invite.uses for invite in current_invites}
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º vanity url
            if guild.vanity_url:
                try:
                    vanity = await guild.vanity_invite()
                    if vanity:
                        current_uses[vanity.code] = vanity.uses
                except:
                    pass
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            await self.load_invite_cache(str(guild.id))
            
            # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏
            if guild.id in self.guild_invites:
                old_uses = self.guild_invites[guild.id]
                
                # –ò—â–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º —Å—á–µ—Ç—á–∏–∫–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π
                for invite in current_invites:
                    old_count = old_uses.get(invite.code, 0)
                    new_count = current_uses.get(invite.code, 0)
                    
                    if new_count > old_count:
                        return invite.code, invite.inviter
                        
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º vanity url
                if guild.vanity_url:
                    vanity_code = guild.vanity_url.code
                    old_count = old_uses.get(vanity_code, 0)
                    new_count = current_uses.get(vanity_code, 0)
                    
                    if new_count > old_count:
                        return vanity_code, None
                        
            # –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à
            await self.cache_invites(guild)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è: {e}")
            
        return None, None
            
    async def get_invite_source(self, member: discord.Member) -> Tuple[str, str]:
        """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫ –≤—Ö–æ–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
        if member.bot:
            return InviteSource.INTEGRATION, "ü§ñ –ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ OAuth2"
            
        invite_code, inviter = await self.get_used_invite(member.guild)
        
        if invite_code:
            if member.guild.vanity_url and invite_code == member.guild.vanity_url.code:
                return InviteSource.VANITY, f"üåü –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ ({invite_code})"
            elif inviter:
                if inviter.id == self.bot.user.id:
                    return InviteSource.SERVER, f"ü§ñ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞ ({invite_code})"
                else:
                    return InviteSource.SERVER, f"üë§ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç {inviter.mention} ({invite_code})"
                    
        return InviteSource.UNKNOWN, "üîç –ò—Å—Ç–æ—á–Ω–∏–∫ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"
            
    async def format_join_message(self, member: discord.Member) -> discord.Embed:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—Ö–æ–¥–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
        embed = Embed(
            title=f"üëã –ù–æ–≤—ã–π {'–±–æ—Ç' if member.bot else '—É—á–∞—Å—Ç–Ω–∏–∫'} #{len(member.guild.members)}",
            color=0x2ecc71 if not member.bot else 0x3498db,
            timestamp=datetime.now(timezone.utc)
        )
        
        embed.set_thumbnail(url=member.display_avatar.url)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∞–∫–∫–∞—É–Ω—Ç–∞
        account_type, account_info = self.get_account_type(member)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –≤—Ö–æ–¥–∞
        invite_source, source_info = await self.get_invite_source(member)
        
        # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—á–∞—Å—Ç–Ω–∏–∫–µ
        embed.add_field(
            name=f"{'ü§ñ' if member.bot else 'üë§'} {'–ë–æ—Ç' if member.bot else '–£—á–∞—Å—Ç–Ω–∏–∫'}",
            value=f"{member.mention}\n`{member.name}`\nID: `{member.id}`",
            inline=False
        )
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ
        created_timestamp = int(member.created_at.timestamp())
        embed.add_field(
            name="üìÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ",
            value=f"–°–æ–∑–¥–∞–Ω: <t:{created_timestamp}:D> (<t:{created_timestamp}:R>)\n{account_info if not member.bot else 'ü§ñ –ë–æ—Ç'}",
            inline=False
        )
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏—Å—Ç–æ—á–Ω–∏–∫–µ
        embed.add_field(
            name="üì® –ò—Å—Ç–æ—á–Ω–∏–∫ –≤—Ö–æ–¥–∞",
            value=source_info,
            inline=False
        )
            
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
        if not member.bot:
            if account_type == AccountType.SUSPICIOUS:
                embed.description = "‚ö†Ô∏è **–í–Ω–∏–º–∞–Ω–∏–µ!** –≠—Ç–æ—Ç –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω —Å–æ–≤—Å–µ–º –Ω–µ–¥–∞–≤–Ω–æ –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–º!"
                embed.color = 0xe74c3c
            elif account_type == AccountType.NEW:
                embed.description = "‚ÑπÔ∏è –≠—Ç–æ –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç Discord"
                embed.color = 0xf1c40f
        
        return embed
        
    async def format_leave_message(self, member: discord.Member) -> discord.Embed:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã—Ö–æ–¥–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
        embed = Embed(
            title=f"üëã {'–ë–æ—Ç' if member.bot else '–£—á–∞—Å—Ç–Ω–∏–∫'} –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä",
            color=0xe74c3c,
            timestamp=datetime.now(timezone.utc)
        )
        
        embed.set_thumbnail(url=member.display_avatar.url)
        
        # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—á–∞—Å—Ç–Ω–∏–∫–µ
        embed.add_field(
            name=f"{'ü§ñ' if member.bot else 'üë§'} {'–ë–æ—Ç' if member.bot else '–£—á–∞—Å—Ç–Ω–∏–∫'}",
            value=f"`{member.name}`\nID: `{member.id}`",
            inline=False
        )
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–ª—è—Ö
        if member.roles[1:]:  # –ò—Å–∫–ª—é—á–∞–µ–º @everyone
            roles = [role.mention for role in reversed(member.roles[1:])]
            roles_str = " ".join(roles[:10])
            if len(member.roles) > 11:
                roles_str += f"\n*...–∏ –µ—â–µ {len(member.roles) - 11} —Ä–æ–ª–µ–π*"
            embed.add_field(
                name=f"üëë –†–æ–ª–∏ ({len(member.roles) - 1})",
                value=roles_str,
                inline=False
            )
            
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        joined_at = member.joined_at
        if joined_at:
            joined_timestamp = int(joined_at.timestamp())
            time_on_server = datetime.now(timezone.utc) - joined_at
            days = time_on_server.days
            hours = time_on_server.seconds // 3600
            minutes = (time_on_server.seconds % 3600) // 60
            
            time_parts = []
            if days > 0:
                time_parts.append(f"{days} {'–¥–Ω–µ–π' if days % 10 != 1 or days == 11 else '–¥–µ–Ω—å'}")
            if hours > 0:
                time_parts.append(f"{hours} {'—á–∞—Å–æ–≤' if hours % 10 != 1 or hours == 11 else '—á–∞—Å'}")
            if minutes > 0:
                time_parts.append(f"{minutes} {'–º–∏–Ω—É—Ç' if minutes % 10 != 1 or minutes == 11 else '–º–∏–Ω—É—Ç—É'}")
                
            time_str = ", ".join(time_parts) if time_parts else "–º–µ–Ω–µ–µ –º–∏–Ω—É—Ç—ã"
            
            embed.add_field(
                name="‚è±Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–±—ã–≤–∞–Ω–∏–∏",
                value=f"–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è: <t:{joined_timestamp}:D> (<t:{joined_timestamp}:R>)\n–ü—Ä–æ–±—ã–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: {time_str}",
                inline=False
            )
            
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ
        created_timestamp = int(member.created_at.timestamp())
        account_age = datetime.now(timezone.utc) - member.created_at
        account_age_days = account_age.days
        
        embed.add_field(
            name="üìÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ",
            value=f"–°–æ–∑–¥–∞–Ω: <t:{created_timestamp}:D> (<t:{created_timestamp}:R>)\n–í–æ–∑—Ä–∞—Å—Ç –∞–∫–∫–∞—É–Ω—Ç–∞: {account_age_days} {'–¥–Ω–µ–π' if account_age_days % 10 != 1 or account_age_days == 11 else '–¥–µ–Ω—å'}",
            inline=False
        )
        
        return embed
        
    async def on_member_join(self, member: discord.Member):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
        try:
            channel_id = await self.get_log_channel(member.guild.id)
            if not channel_id:
                return
                
            channel = member.guild.get_channel(channel_id)
            if channel:
                embed = await self.format_join_message(member)
                await channel.send(embed=embed)
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤—Ö–æ–¥–∞: {e}")
            
    async def on_member_remove(self, member: discord.Member):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã—Ö–æ–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
        try:
            channel_id = await self.get_log_channel(member.guild.id)
            if not channel_id:
                return
                
            channel = member.guild.get_channel(channel_id)
            if channel:
                embed = await self.format_leave_message(member)
                await channel.send(embed=embed)
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤—ã—Ö–æ–¥–∞: {e}")

class InvitesCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.tracker = InviteTracker(bot)
        self._last_member = None
        
    async def cog_load(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–≥–∞"""
        for guild in self.bot.guilds:
            await self.tracker.cache_invites(guild)
        
    @commands.Cog.listener()
    async def on_member_join(self, member: discord.Member):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª –ª–∏ —ç—Ç–æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω
        if self._last_member and self._last_member.id == member.id:
            return
        self._last_member = member
        await self.tracker.on_member_join(member)
        
    @commands.Cog.listener()
    async def on_member_remove(self, member: discord.Member):
        await self.tracker.on_member_remove(member)
        
    @commands.Cog.listener()
    async def on_guild_join(self, guild: discord.Guild):
        """–ü—Ä–∏ –≤—Ö–æ–¥–µ –Ω–∞ –Ω–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä"""
        await self.tracker.cache_invites(guild)
        
    @commands.Cog.listener()
    async def on_invite_create(self, invite: discord.Invite):
        """–ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è"""
        await self.tracker.cache_invites(invite.guild)
        
    @commands.Cog.listener()
    async def on_invite_delete(self, invite: discord.Invite):
        """–ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è"""
        await self.tracker.cache_invites(invite.guild)

async def setup(bot):
    await bot.add_cog(InvitesCog(bot)) 