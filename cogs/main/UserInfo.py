import discord
from discord.ext import commands
from discord import app_commands
from utils import create_embed
from datetime import datetime
import humanize
import pytz

def format_date(date):
    if date is None:
        return "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è
    moscow_tz = pytz.timezone('Europe/Moscow')
    date = date.astimezone(moscow_tz)
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
    return f"<t:{int(date.timestamp())}:F> (<t:{int(date.timestamp())}:R>)"

def get_member_status(member):
    if member is None:
        return "üî¥ –ù–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
    if member.status == discord.Status.online:
        return "üü¢ –í —Å–µ—Ç–∏"
    elif member.status == discord.Status.idle:
        return "üü° –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"
    elif member.status == discord.Status.dnd:
        return "üî¥ –ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å"
    elif member.status == discord.Status.offline:
        return "‚ö´ –ù–µ –≤ —Å–µ—Ç–∏"
    return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

def get_user_badges(user):
    badges = []
    flags = user.public_flags
    
    if user.bot:
        badges.append("ü§ñ –ë–æ—Ç")
    if flags.staff:
        badges.append("üë®‚Äçüíº –°–æ—Ç—Ä—É–¥–Ω–∏–∫ Discord")
    if flags.partner:
        badges.append("ü§ù –ü–∞—Ä—Ç–Ω–µ—Ä")
    if flags.hypesquad:
        badges.append("üí† HypeSquad Events")
    if flags.bug_hunter:
        badges.append("üêõ –û—Ö–æ—Ç–Ω–∏–∫ –∑–∞ –±–∞–≥–∞–º–∏")
    if flags.bug_hunter_level_2:
        badges.append("üêõ –û—Ö–æ—Ç–Ω–∏–∫ –∑–∞ –±–∞–≥–∞–º–∏ 2 —É—Ä–æ–≤–Ω—è")
    if flags.hypesquad_bravery:
        badges.append("<:discord_bravery:1332429970668257311> Bravery")  # –ó–∞–º–µ–Ω–∏—Ç–µ ID –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π
    if flags.hypesquad_brilliance:
        badges.append("<:discord_brillance:1332429912782540852> Brilliance")  # –ó–∞–º–µ–Ω–∏—Ç–µ ID –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π
    if flags.hypesquad_balance:
        badges.append("<:discord_balance:1332429979622965248> Balance")  # –ó–∞–º–µ–Ω–∏—Ç–µ ID –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π
    if flags.early_supporter:
        badges.append("üëë –†–∞–Ω–Ω–∏–π –ø–æ–¥–¥–µ—Ä–∂–∞–≤—à–∏–π")
    if flags.verified_bot_developer:
        badges.append("üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –±–æ—Ç–æ–≤")
    if flags.active_developer:
        badges.append("üë®‚Äçüíª –ê–∫—Ç–∏–≤–Ω—ã–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫")
    if flags.system:
        badges.append("‚öôÔ∏è –°–∏—Å—Ç–µ–º–∞ Discord")
    if flags.team_user:
        badges.append("üë• –£—á–∞—Å—Ç–Ω–∏–∫ –∫–æ–º–∞–Ω–¥—ã")
    if flags.verified_bot:
        badges.append("‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –±–æ—Ç")
    
    return badges if badges else ["–ù–µ—Ç –∑–Ω–∞—á–∫–æ–≤"]

def get_member_activities(member):
    if not member or not member.activities:
        return None
    
    activities = []
    for activity in member.activities:
        if activity.type == discord.ActivityType.playing:
            details = getattr(activity, 'details', None)
            state = getattr(activity, 'state', None)
            activity_info = f"üéÆ –ò–≥—Ä–∞–µ—Ç –≤ {activity.name}"
            if details:
                activity_info += f"\n‚îî {details}"
            if state:
                activity_info += f"\n‚îî {state}"
            activities.append(activity_info)
        elif activity.type == discord.ActivityType.streaming:
            activities.append(f"üì∫ –°—Ç—Ä–∏–º–∏—Ç {activity.name}\n‚îî {activity.url}")
        elif activity.type == discord.ActivityType.listening and isinstance(activity, discord.Spotify):
            activities.append(f"üéµ –°–ª—É—à–∞–µ—Ç Spotify\n‚îî {activity.title} - {activity.artist}\n‚îî –ê–ª—å–±–æ–º: {activity.album}")
        elif activity.type == discord.ActivityType.watching:
            activities.append(f"üëÄ –°–º–æ—Ç—Ä–∏—Ç {activity.name}")
        elif activity.type == discord.ActivityType.competing:
            activities.append(f"üèÜ –°–æ—Ä–µ–≤–Ω—É–µ—Ç—Å—è –≤ {activity.name}")
        elif activity.type == discord.ActivityType.custom:
            if activity.emoji:
                activities.append(f"{activity.emoji} {activity.name}")
            else:
                activities.append(activity.name)
    
    return activities

class UserInfo(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="userinfo", description="–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ")
    @app_commands.describe(
        user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –æ –∫–æ—Ç–æ—Ä–æ–º –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"
    )
    async def userinfo(
        self,
        interaction: discord.Interaction,
        user: discord.User = None
    ):
        try:
            await interaction.response.defer()
            
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ –∫–æ–º–∞–Ω–¥—ã
            target_user = user or interaction.user
            target_member = interaction.guild.get_member(target_user.id)

            # –°–æ–∑–¥–∞–µ–º —ç–º–±–µ–¥
            embed = create_embed(
                title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {target_user.name}",
                thumbnail_url=target_user.display_avatar.url
            )

            # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            embed.add_field(
                name="üìã –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
                value=(
                    f"**–ò–º—è:** {target_user.name}\n"
                    f"**–¢–µ–≥:** {target_user}\n"
                    f"**ID:** {target_user.id}\n"
                    f"**–°—Ç–∞—Ç—É—Å:** {get_member_status(target_member)}\n"
                    f"**–ë–æ—Ç:** {'–î–∞' if target_user.bot else '–ù–µ—Ç'}\n"
                    f"**–°–æ–∑–¥–∞–Ω:** {format_date(target_user.created_at)}\n"
                    f"**–ë–∞–Ω–Ω–µ—Ä:** {'–ï—Å—Ç—å' if target_user.banner else '–ù–µ—Ç'}"
                ),
                inline=False
            )

            # –ó–Ω–∞—á–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            badges = get_user_badges(target_user)
            embed.add_field(
                name="üèÖ –ó–Ω–∞—á–∫–∏",
                value="\n".join(badges),
                inline=False
            )

            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
            if target_member:
                roles = [role.mention for role in target_member.roles[1:]]  # –ò—Å–∫–ª—é—á–∞–µ–º @everyone
                
                member_info = (
                    f"**–ù–∏–∫–Ω–µ–π–º:** {target_member.nick or '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}\n"
                    f"**–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è:** {format_date(target_member.joined_at)}\n"
                    f"**–í—ã—Å—à–∞—è —Ä–æ–ª—å:** {target_member.top_role.mention if len(roles) > 0 else '–ù–µ—Ç —Ä–æ–ª–µ–π'}\n"
                    f"**–†–æ–ª–∏ [{len(roles)}]:** {' '.join(roles) if roles else '–ù–µ—Ç —Ä–æ–ª–µ–π'}\n"
                    f"**–ë—É—Å—Ç —Å–µ—Ä–≤–µ—Ä–∞:** {'–î–∞' if target_member.premium_since else '–ù–µ—Ç'}"
                )
                
                embed.add_field(
                    name="üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ",
                    value=member_info,
                    inline=False
                )

                # –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                key_permissions = []
                permissions = target_member.guild_permissions
                if permissions.administrator:
                    key_permissions.append("üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
                if permissions.manage_guild:
                    key_permissions.append("‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–º")
                if permissions.ban_members:
                    key_permissions.append("üî® –ë–∞–Ω —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
                if permissions.kick_members:
                    key_permissions.append("üë¢ –ö–∏–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
                if permissions.manage_channels:
                    key_permissions.append("üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞–º–∏")
                if permissions.manage_roles:
                    key_permissions.append("üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏")
                
                if key_permissions:
                    embed.add_field(
                        name="üîë –ö–ª—é—á–µ–≤—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è",
                        value="\n".join(key_permissions),
                        inline=False
                    )

                # –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                activities = get_member_activities(target_member)
                if activities:
                    embed.add_field(
                        name="üéØ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏",
                        value="\n".join(activities),
                        inline=False
                    )

                # –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∏–¥–∏—Ç
                platforms = []
                if target_member.desktop_status != discord.Status.offline:
                    platforms.append("üíª –ö–æ–º–ø—å—é—Ç–µ—Ä")
                if target_member.mobile_status != discord.Status.offline:
                    platforms.append("üì± –¢–µ–ª–µ—Ñ–æ–Ω")
                if target_member.web_status != discord.Status.offline:
                    platforms.append("üåê –ë—Ä–∞—É–∑–µ—Ä")
                
                if platforms:
                    embed.add_field(
                        name="üì± –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞",
                        value="\n".join(platforms),
                        inline=False
                    )

            # –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É—Ç–µ—Ä —Å –≤—Ä–µ–º–µ–Ω–µ–º –∑–∞–ø—Ä–æ—Å–∞
            embed.set_footer(text=f"–ó–∞–ø—Ä–æ—à–µ–Ω–æ {interaction.user.name}")
            embed.timestamp = datetime.now()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await interaction.followup.send(embed=embed)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ userinfo: {str(e)}")
            await interaction.followup.send("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.", ephemeral=True)

async def setup(bot):
    await bot.add_cog(UserInfo(bot))