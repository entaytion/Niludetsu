import discord
from discord.ext import commands
from discord import app_commands
from utils import create_embed
from Niludetsu.game.akinator import Akinator
import asyncio

class AkinatorButtons(discord.ui.View):
    def __init__(self, game_instance):
        super().__init__(timeout=180)
        self.game = game_instance

    @discord.ui.button(label="–î–∞", style=discord.ButtonStyle.green, emoji="üëç")
    async def yes_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await self.handle_answer(interaction, "y")

    @discord.ui.button(label="–ù–µ—Ç", style=discord.ButtonStyle.red, emoji="üëé")
    async def no_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await self.handle_answer(interaction, "n")

    @discord.ui.button(label="–ù–µ –∑–Ω–∞—é", style=discord.ButtonStyle.gray, emoji="‚ùì")
    async def idk_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await self.handle_answer(interaction, "idk")

    @discord.ui.button(label="–í–æ–∑–º–æ–∂–Ω–æ", style=discord.ButtonStyle.blurple, emoji="üìù")
    async def probably_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await self.handle_answer(interaction, "p")

    @discord.ui.button(label="–í–µ—Ä–æ—è—Ç–Ω–æ –Ω–µ—Ç", style=discord.ButtonStyle.gray, emoji="‚ùå")
    async def probably_not_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await self.handle_answer(interaction, "pn")

    @discord.ui.button(label="–ù–∞–∑–∞–¥", style=discord.ButtonStyle.gray, emoji="‚¨ÖÔ∏è", row=1)
    async def back_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user.id not in self.game.games:
            await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã!", ephemeral=True)
            return

        try:
            aki = self.game.games[interaction.user.id]["aki"]
            await asyncio.get_event_loop().run_in_executor(None, aki.go_back)
            
            embed = create_embed(
                title="üßû‚Äç‚ôÇÔ∏è –ê–∫–∏–Ω–∞—Ç–æ—Ä",
                description=f"**–í–æ–ø—Ä–æ—Å #{aki.step}**\n{aki.question}"
            )
            await interaction.response.edit_message(embed=embed, view=self)
        except Exception as e:
            await interaction.response.send_message(f"–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥: {str(e)}", ephemeral=True)

    @discord.ui.button(label="–ó–∞–∫–æ–Ω—á–∏—Ç—å", style=discord.ButtonStyle.red, emoji="üèÅ", row=1)
    async def stop_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        embed = create_embed(
            title="üßû‚Äç‚ôÇÔ∏è –ê–∫–∏–Ω–∞—Ç–æ—Ä",
            description="–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
        )
        await interaction.response.edit_message(embed=embed, view=None)
        if interaction.user.id in self.game.games:
            del self.game.games[interaction.user.id]

    async def handle_answer(self, interaction: discord.Interaction, answer: str):
        if interaction.user.id not in self.game.games:
            await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã!", ephemeral=True)
            return

        try:
            aki = self.game.games[interaction.user.id]["aki"]
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
            await asyncio.get_event_loop().run_in_executor(None, 
                lambda: aki.post_answer(answer))

            if aki.answer_id:
                embed = create_embed(
                    title="üßû‚Äç‚ôÇÔ∏è –ê–∫–∏–Ω–∞—Ç–æ—Ä",
                    description=f"–Ø –¥—É–º–∞—é, —ç—Ç–æ **{aki.name}**!\n"
                               f"({aki.description})\n\n"
                               f"–Ø —É–≥–∞–¥–∞–ª?"
                )
                if aki.photo:
                    embed.set_thumbnail(url=aki.photo)

                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
                final_view = discord.ui.View(timeout=60)
                yes_button = discord.ui.Button(label="–î–∞", style=discord.ButtonStyle.green, custom_id="yes")
                no_button = discord.ui.Button(label="–ù–µ—Ç", style=discord.ButtonStyle.red, custom_id="no")
                
                async def yes_callback(inter: discord.Interaction):
                    await inter.response.edit_message(content="–Ø —Ä–∞–¥, —á—Ç–æ —Å–º–æ–≥ —É–≥–∞–¥–∞—Ç—å! üéâ", embed=None, view=None)
                    if interaction.user.id in self.game.games:
                        del self.game.games[interaction.user.id]

                async def no_callback(inter: discord.Interaction):
                    await inter.response.edit_message(content="–ñ–∞–ª—å, —á—Ç–æ –Ω–µ —É–≥–∞–¥–∞–ª! –ú–æ–∂–µ—Ç, –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑? üòä", embed=None, view=None)
                    if interaction.user.id in self.game.games:
                        del self.game.games[interaction.user.id]

                yes_button.callback = yes_callback
                no_button.callback = no_callback
                final_view.add_item(yes_button)
                final_view.add_item(no_button)
                
                await interaction.response.edit_message(embed=embed, view=final_view)
                return

            # –û–±–Ω–æ–≤–ª—è–µ–º —ç–º–±–µ–¥ —Å –Ω–æ–≤—ã–º –≤–æ–ø—Ä–æ—Å–æ–º
            embed = create_embed(
                title="üßû‚Äç‚ôÇÔ∏è –ê–∫–∏–Ω–∞—Ç–æ—Ä",
                description=f"**–í–æ–ø—Ä–æ—Å #{aki.step}**\n{aki.question}"
            )
            await interaction.response.edit_message(embed=embed, view=self)

        except Exception as e:
            embed = create_embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description=f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}"
            )
            await interaction.response.edit_message(embed=embed, view=None)
            if interaction.user.id in self.game.games:
                del self.game.games[interaction.user.id]

class AkinatorCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.games = {}

    @app_commands.command(name="akinator", description="–ò–≥—Ä–∞—Ç—å –≤ –ê–∫–∏–Ω–∞—Ç–æ—Ä–∞")
    async def akinator_game(self, interaction: discord.Interaction):
        """–ù–∞—á–∞—Ç—å –∏–≥—Ä—É –≤ –ê–∫–∏–Ω–∞—Ç–æ—Ä–∞"""
        if interaction.user.id in self.games:
            await interaction.response.send_message("–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞!", ephemeral=True)
            return

        await interaction.response.defer()

        try:
            # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∞–∫–∏–Ω–∞—Ç–æ—Ä–∞
            aki = Akinator()
            aki.language = "ru"
            
            # –ù–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É
            await asyncio.get_event_loop().run_in_executor(None, aki.start_game)

            # –°–æ–∑–¥–∞–µ–º —ç–º–±–µ–¥ —Å –ø–µ—Ä–≤—ã–º –≤–æ–ø—Ä–æ—Å–æ–º
            embed = create_embed(
                title="üßû‚Äç‚ôÇÔ∏è –ê–∫–∏–Ω–∞—Ç–æ—Ä",
                description=f"**–í–æ–ø—Ä–æ—Å #{aki.step}**\n{aki.question}"
            )

            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            view = AkinatorButtons(self)
            message = await interaction.followup.send(embed=embed, view=view)
            self.games[interaction.user.id] = {
                "aki": aki,
                "message_id": message.id
            }
                
        except Exception as e:
            await interaction.followup.send(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏–≥—Ä—ã: {str(e)}", ephemeral=True)
            if interaction.user.id in self.games:
                del self.games[interaction.user.id]

async def setup(bot):
    await bot.add_cog(AkinatorCog(bot))