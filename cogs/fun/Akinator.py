import discord
from discord.ext import commands
from Niludetsu.utils.embed import create_embed
from Niludetsu.game.akinator import Akinator as AkinatorGame

class Akinator(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.games = {}

    @discord.app_commands.command(name="akinator", description="–ò–≥—Ä–∞—Ç—å –≤ –ê–∫–∏–Ω–∞—Ç–æ—Ä–∞")
    async def akinator(self, interaction: discord.Interaction):
        if interaction.user.id in self.games:
            await interaction.response.send_message(
                embed=create_embed(
                    description="–í—ã —É–∂–µ –∏–≥—Ä–∞–µ—Ç–µ! –ó–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â—É—é –∏–≥—Ä—É.",
                    color="RED"
                ),
                ephemeral=True
            )
            return

        try:
            aki = AkinatorGame()
            q = aki.start_game()

            embed = create_embed(
                title="üßû‚Äç‚ôÇÔ∏è –ê–∫–∏–Ω–∞—Ç–æ—Ä",
                description=f"**–í–æ–ø—Ä–æ—Å #{aki.step + 1}**\n{q}\n\n"
                          "–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤:\n"
                          "‚úÖ - –î–∞\n"
                          "‚ùå - –ù–µ—Ç\n"
                          "‚ùì - –ù–µ –∑–Ω–∞—é\n"
                          "üëç - –í–µ—Ä–æ—è—Ç–Ω–æ –¥–∞\n"
                          "üëé - –í–µ—Ä–æ—è—Ç–Ω–æ –Ω–µ—Ç\n"
                          "‚Ü©Ô∏è - –ù–∞–∑–∞–¥\n"
                          "üèÅ - –ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É",
                color="BLUE"
            )

            self.games[interaction.user.id] = {
                'aki': aki,
                'question': q,
                'answers': {
                    '‚úÖ': 'y',
                    '‚ùå': 'n',
                    '‚ùì': 'idk',
                    'üëç': 'p',
                    'üëé': 'pn'
                }
            }

            message = await interaction.response.send_message(embed=embed)
            msg = await message.original_response()
            
            for emoji in ['‚úÖ', '‚ùå', '‚ùì', 'üëç', 'üëé', '‚Ü©Ô∏è', 'üèÅ']:
                await msg.add_reaction(emoji)
                
        except Exception as e:
            await interaction.response.send_message(
                embed=create_embed(
                    description=f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏–≥—Ä—ã: {str(e)}",
                    color="RED"
                ),
                ephemeral=True
            )

    @commands.Cog.listener()
    async def on_reaction_add(self, reaction, user):
        if user.bot or user.id not in self.games:
            return

        game = self.games[user.id]
        aki = game['aki']

        if str(reaction.emoji) == 'üèÅ':
            if aki.progression >= 80:
                embed = create_embed(
                    title="üßû‚Äç‚ôÇÔ∏è –Ø –¥—É–º–∞—é, —ç—Ç–æ...",
                    description=f"**{aki.name}**\n{aki.description}\n\n"
                              f"–Ø —É–≤–µ—Ä–µ–Ω –Ω–∞ {round(aki.progression)}%",
                    image=aki.photo,
                    color="GREEN"
                )
            else:
                embed = create_embed(
                    description="–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –Ø –Ω–µ —Å–º–æ–≥ —É–≥–∞–¥–∞—Ç—å üò¢",
                    color="RED"
                )
            
            del self.games[user.id]
            await reaction.message.edit(embed=embed)
            await reaction.message.clear_reactions()
            return

        if str(reaction.emoji) == '‚Ü©Ô∏è':
            try:
                result = aki.go_back()
                embed = create_embed(
                    title="üßû‚Äç‚ôÇÔ∏è –ê–∫–∏–Ω–∞—Ç–æ—Ä",
                    description=f"**–í–æ–ø—Ä–æ—Å #{aki.step + 1}**\n{aki.question}",
                    color="BLUE"
                )
                await reaction.message.edit(embed=embed)
            except Exception as e:
                pass
            await reaction.remove(user)
            return

        if str(reaction.emoji) in game['answers']:
            answer = game['answers'][str(reaction.emoji)]
            try:
                result = aki.post_answer(answer)
                
                if aki.name:  # –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç —Å –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º
                    embed = create_embed(
                        title="üßû‚Äç‚ôÇÔ∏è –Ø –¥—É–º–∞—é, —ç—Ç–æ...",
                        description=f"**{aki.name}**\n{aki.description}\n\n"
                                  f"–Ø —É–≤–µ—Ä–µ–Ω –Ω–∞ {round(aki.progression)}%",
                        image=aki.photo,
                        color="GREEN"
                    )
                    
                    del self.games[user.id]
                    await reaction.message.edit(embed=embed)
                    await reaction.message.clear_reactions()
                else:
                    embed = create_embed(
                        title="üßû‚Äç‚ôÇÔ∏è –ê–∫–∏–Ω–∞—Ç–æ—Ä",
                        description=f"**–í–æ–ø—Ä–æ—Å #{aki.step + 1}**\n{aki.question}",
                        color="BLUE"
                    )
                    await reaction.message.edit(embed=embed)
                    await reaction.remove(user)
                    
            except Exception as e:
                embed = create_embed(
                    description=f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –∏–≥—Ä–µ: {str(e)}",
                    color="RED"
                )
                del self.games[user.id]
                await reaction.message.edit(embed=embed)
                await reaction.message.clear_reactions()

async def setup(bot):
    await bot.add_cog(Akinator(bot))