import discord
from discord.ext import commands
from Niludetsu.utils.embed import Embed
from mcstatus import JavaServer
import datetime
import asyncio

class MCServer(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    def format_motd(self, motd):
        if hasattr(motd, 'to_plain'):
            return motd.to_plain()
        return str(motd)

    def format_time(self, seconds):
        hours = seconds // 3600
        minutes = (seconds % 3600) // 60
        return f"{hours}—á {minutes}–º"

    @discord.app_commands.command(name="mcserver", description="–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ Minecraft")
    @discord.app_commands.describe(ip="IP-–∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞")
    async def mcserver(self, interaction: discord.Interaction, ip: str):
        await interaction.response.defer()
        
        server = JavaServer.lookup(ip)
        status = await server.async_status()
        
        # –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ
        online = status.players.online
        max_players = status.players.max
        version = status.version.name
        latency = round(status.latency, 2)
        protocol = status.version.protocol
        
        # –ü–æ–ª—É—á–∞–µ–º MOTD
        motd = self.format_motd(status.description)
        
        # –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏
        player_percentage = (online / max_players) * 100 if max_players > 0 else 0
        progress_bar = "‚ñà" * int(player_percentage / 10) + "‚ñë" * (10 - int(player_percentage / 10))
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞
        if online == 0:
            server_status = "üî¥ –ü—É—Å—Ç–æ"
        elif online >= max_players:
            server_status = "üü° –ó–∞–ø–æ–ª–Ω–µ–Ω"
        else:
            server_status = "üü¢ –ê–∫—Ç–∏–≤–µ–Ω"

        # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —á–µ—Ä–µ–∑ query
        try:
            query = await asyncio.wait_for(server.async_query(), timeout=2.0)
            has_query = True
            software = query.software
            plugins = query.plugins
            game_type = query.game_type
            map_name = query.map
        except:
            has_query = False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–æ–¥–æ–≤
        has_forge = False
        mod_info = ""
        if hasattr(status, 'forge_data'):
            has_forge = True
            if hasattr(status.forge_data, 'mods'):
                mods = status.forge_data.mods
                mod_info = f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–¥–æ–≤: {len(mods)}\n"
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 –º–æ–¥–æ–≤
                if mods:
                    mod_list = [f"‚Ä¢ {mod.name} ({mod.version})" for mod in mods[:5]]
                    mod_info += "–û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—ã:\n" + "\n".join(mod_list)
                    if len(mods) > 5:
                        mod_info += f"\n...–∏ –µ—â–µ {len(mods) - 5} –º–æ–¥–æ–≤"
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—è –¥–ª—è —ç–º–±–µ–¥–∞
        fields = [
            ("üìä –°—Ç–∞—Ç—É—Å", server_status, True),
            ("üë• –ò–≥—Ä–æ–∫–∏", f"{online}/{max_players} ({player_percentage:.1f}%)", True),
            ("üèì –ü–∏–Ω–≥", f"{latency}–º—Å", True),
            ("üîß –í–µ—Ä—Å–∏—è", f"{version} (Protocol: {protocol})", True),
            ("‚ö° –ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å", f"`{progress_bar}`", False),
        ]
        
        if has_query:
            fields.extend([
                ("üñ•Ô∏è –ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ", software, True),
                ("üó∫Ô∏è –ö–∞—Ä—Ç–∞", map_name, True),
                ("üéÆ –¢–∏–ø –∏–≥—Ä—ã", game_type, True)
            ])
            
            if plugins:
                plugins_str = "\n".join([f"‚Ä¢ {plugin}" for plugin in plugins[:5]])
                if len(plugins) > 5:
                    plugins_str += f"\n...–∏ –µ—â–µ {len(plugins) - 5} –ø–ª–∞–≥–∏–Ω–æ–≤"
                fields.append(("üîå –ü–ª–∞–≥–∏–Ω—ã", f"```{plugins_str}```", False))
        
        if has_forge and mod_info:
            fields.append(("üõ†Ô∏è –ú–æ–¥—ã", f"```{mod_info}```", False))
        
        if motd:
            fields.append(("üìù MOTD", f"```{motd}```", False))
        
        # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —ç–º–±–µ–¥
        embed=Embed(
            title=f"üéÆ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ Minecraft",
            description=f"**IP:** `{ip}`\n\n",
            color="GREEN" if online > 0 else "RED"
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –ø–æ–ª—è
        for name, value, inline in fields:
            if value:  # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–ø—É—Å—Ç—ã–µ –ø–æ–ª—è
                embed.add_field(name=name, value=value, inline=inline)
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å –∏–≥—Ä–æ–∫–∏ –æ–Ω–ª–∞–π–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö —Å–ø–∏—Å–æ–∫
        if status.players.sample:
            players_list = "\n".join([f"‚Ä¢ {player.name}" for player in status.players.sample])
            embed.add_field(
                name="üë§ –ò–≥—Ä–æ–∫–∏ –æ–Ω–ª–∞–π–Ω",
                value=f"```{players_list}```",
                inline=False
            )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        footer_text = f"–û–±–Ω–æ–≤–ª–µ–Ω–æ ‚Ä¢ {datetime.datetime.now().strftime('%H:%M:%S')}"
        if has_query:
            footer_text += " | Query –¥–æ—Å—Ç—É–ø–µ–Ω"
        if has_forge:
            footer_text += " | Forge —Å–µ—Ä–≤–µ—Ä"
        embed.set_footer(text=footer_text)
        
        await interaction.followup.send(embed=embed)

async def setup(bot):
    await bot.add_cog(MCServer(bot)) 