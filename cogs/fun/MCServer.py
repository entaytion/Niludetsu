import discord
from discord import app_commands
from discord.ext import commands
from mcstatus import JavaServer
from utils import create_embed, EMOJIS
import re

class MCServer(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="mcserver", description="–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Minecraft —Å–µ—Ä–≤–µ—Ä–µ")
    @app_commands.describe(address="IP-–∞–¥—Ä–µ—Å –∏–ª–∏ –¥–æ–º–µ–Ω —Å–µ—Ä–≤–µ—Ä–∞")
    async def mcserver(self, interaction: discord.Interaction, address: str):
        await interaction.response.defer()

        try:
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Ä—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –æ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω
            if not re.search(r':\d+$', address):
                address += ':25565'

            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ
            server = JavaServer.lookup(address)
            status = await server.async_status()
            
            # –°–æ–∑–¥–∞–µ–º —ç–º–±–µ–¥
            embed = create_embed(
                title=f"{EMOJIS.get('MINECRAFT', 'üéÆ')} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ {address}"
            )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            embed.add_field(
                name="–°—Ç–∞—Ç—É—Å",
                value=f"{EMOJIS.get('ONLINE', 'üü¢')} –û–Ω–ª–∞–π–Ω",
                inline=True
            )
            
            embed.add_field(
                name="–ò–≥—Ä–æ–∫–∏",
                value=f"{status.players.online}/{status.players.max}",
                inline=True
            )
            
            embed.add_field(
                name="–í–µ—Ä—Å–∏—è",
                value=status.version.name,
                inline=True
            )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–∏–Ω–≥
            embed.add_field(
                name="–ü–∏–Ω–≥",
                value=f"{round(status.latency)} –º—Å",
                inline=True
            )
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å MOTD (–æ–ø–∏—Å–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞)
            if hasattr(status, 'description'):
                motd = status.description
                if isinstance(motd, dict) and 'text' in motd:
                    motd = motd['text']
                elif isinstance(motd, str):
                    # –£–¥–∞–ª—è–µ–º –∫–æ–¥—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                    motd = re.sub(r'¬ß[0-9a-fk-or]', '', motd)
                embed.add_field(
                    name="MOTD",
                    value=motd,
                    inline=False
                )
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –æ–Ω–ª–∞–π–Ω
            if status.players.online > 0 and hasattr(status.players, 'sample') and status.players.sample:
                players_list = "\n".join([player.name for player in status.players.sample[:10]])
                if len(status.players.sample) > 10:
                    players_list += f"\n... –∏ –µ—â—ë {status.players.online - 10} –∏–≥—Ä–æ–∫–æ–≤"
                embed.add_field(
                    name="–ò–≥—Ä–æ–∫–∏ –æ–Ω–ª–∞–π–Ω",
                    value=players_list,
                    inline=False
                )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É —Å–µ—Ä–≤–µ—Ä–∞, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
            if hasattr(status, 'favicon') and status.favicon:
                embed.set_thumbnail(url=status.favicon)
            
            await interaction.followup.send(embed=embed)
            
        except Exception as e:
            error_embed = create_embed(
                description=f"{EMOJIS['ERROR']} –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ: {str(e)}"
            )
            await interaction.followup.send(embed=error_embed, ephemeral=True)

async def setup(bot):
    await bot.add_cog(MCServer(bot)) 