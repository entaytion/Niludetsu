import discord
from discord.ext import commands
from discord import app_commands
from utils import create_embed
from PIL import Image, ImageDraw
import io
import aiohttp
import asyncio

class LGBT(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        
    async def download_avatar(self, url):
        async with aiohttp.ClientSession() as session:
            async with session.get(str(url)) as response:
                if response.status == 200:
                    return await response.read()
                return None

    def create_rainbow_overlay(self, size):
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å—é
        overlay = Image.new('RGBA', size)
        draw = ImageDraw.Draw(overlay)
        
        # –¶–≤–µ—Ç–∞ —Ä–∞–¥—É–≥–∏
        colors = [
            (255, 0, 0, 128),      # –ö—Ä–∞—Å–Ω—ã–π
            (255, 127, 0, 128),    # –û—Ä–∞–Ω–∂–µ–≤—ã–π
            (255, 255, 0, 128),    # –ñ–µ–ª—Ç—ã–π
            (0, 255, 0, 128),      # –ó–µ–ª–µ–Ω—ã–π
            (0, 255, 255, 128),    # –ì–æ–ª—É–±–æ–π
            (0, 0, 255, 128),      # –°–∏–Ω–∏–π  
            (148, 0, 211, 128)     # –§–∏–æ–ª–µ—Ç–æ–≤—ã–π
        ]
        
        # –í—ã—á–∏—Å–ª—è–µ–º –≤—ã—Å–æ—Ç—É –∫–∞–∂–¥–æ–π –ø–æ–ª–æ—Å—ã
        stripe_height = size[1] // len(colors)
        
        # –†–∏—Å—É–µ–º –ø–æ–ª–æ—Å—ã
        for i, color in enumerate(colors):
            y0 = i * stripe_height
            y1 = (i + 1) * stripe_height if i < len(colors) - 1 else size[1]
            draw.rectangle([(0, y0), (size[0], y1)], fill=color)
        
        return overlay

    @app_commands.command(name="lgbt", description="–ù–∞–ª–æ–∂–∏—Ç—å —Ä–∞–¥—É–∂–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç –Ω–∞ –∞–≤–∞—Ç–∞—Ä")
    @app_commands.describe(
        user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —á–µ–π –∞–≤–∞—Ç–∞—Ä –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å"
    )
    async def lgbt(
        self,
        interaction: discord.Interaction,
        user: discord.User
    ):
        try:
            await interaction.response.defer()
            
            # –°–∫–∞—á–∏–≤–∞–µ–º –∞–≤–∞—Ç–∞—Ä
            avatar_bytes = await self.download_avatar(user.display_avatar.with_size(512).url)
            if not avatar_bytes:
                return await interaction.followup.send(
                    "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞–≤–∞—Ç–∞—Ä!"
                )
            
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            with Image.open(io.BytesIO(avatar_bytes)) as avatar:
                # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ RGBA –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                avatar = avatar.convert('RGBA')
                
                # –°–æ–∑–¥–∞–µ–º —Ä–∞–¥—É–∂–Ω—ã–π –æ–≤–µ—Ä–ª–µ–π
                rainbow = self.create_rainbow_overlay(avatar.size)
                
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å 35%
                rainbow.putalpha(int(255 * 0.35))
                
                # –ù–∞–∫–ª–∞–¥—ã–≤–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç
                result = Image.alpha_composite(avatar, rainbow)
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                output = io.BytesIO()
                result.save(output, format='PNG')
                output.seek(0)
                
                # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
                file = discord.File(output, filename='lgbt_avatar.png')
                
                # –°–æ–∑–¥–∞–µ–º —ç–º–±–µ–¥
                embed = create_embed(
                    title=f"üåà LGBT –∞–≤–∞—Ç–∞—Ä –¥–ª—è {user.name}"
                )
                embed.set_image(url="attachment://lgbt_avatar.png")
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                await interaction.followup.send(embed=embed, file=file)
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ lgbt: {str(e)}")
            await interaction.followup.send(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è."
            )

async def setup(bot):
    await bot.add_cog(LGBT(bot)) 