import discord
from discord.ext import commands
from discord import app_commands
from utils import create_embed, has_mod_role
import yaml
from datetime import datetime

class Mutes(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        with open("config/config.yaml", "r", encoding="utf-8") as f:
            self.config = yaml.safe_load(f)
    
    @app_commands.command(name="mutes", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–º—É—á–µ–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
    @has_mod_role()
    async def mute_list(self, interaction: discord.Interaction):
        # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –º—É—Ç–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
        mute_role_id = self.config.get('moderation', {}).get('mute_role')
        if not mute_role_id:
            return await interaction.response.send_message(
                embed=create_embed(description="–†–æ–ª—å –º—É—Ç–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏!")
            )

        mute_role = interaction.guild.get_role(int(mute_role_id))
        if not mute_role:
            return await interaction.response.send_message(
                embed=create_embed(description="–†–æ–ª—å –º—É—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")
            )

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–º—É—á–µ–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        muted_members = []
        for member in mute_role.members:
            if member.is_timed_out():
                # –ü–æ–ª—É—á–∞–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è –º—É—Ç–∞
                time_remaining = member.timed_out_until - datetime.now(member.timed_out_until.tzinfo)
                days = time_remaining.days
                hours, remainder = divmod(time_remaining.seconds, 3600)
                minutes, seconds = divmod(remainder, 60)
                
                # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è
                time_parts = []
                if days > 0:
                    time_parts.append(f"{days}–¥")
                if hours > 0:
                    time_parts.append(f"{hours}—á")
                if minutes > 0:
                    time_parts.append(f"{minutes}–º")
                if seconds > 0:
                    time_parts.append(f"{seconds}—Å")
                
                duration = " ".join(time_parts) if time_parts else "< 1—Å"
                muted_members.append(f"‚Ä¢ {member.mention} - –æ—Å—Ç–∞–ª–æ—Å—å: **{duration}**")
            else:
                # –ï—Å–ª–∏ —É —É—á–∞—Å—Ç–Ω–∏–∫–∞ –µ—Å—Ç—å —Ä–æ–ª—å –º—É—Ç–∞, –Ω–æ –Ω–µ—Ç —Ç–∞–π–º–∞—É—Ç–∞ - –∑–Ω–∞—á–∏—Ç –º—É—Ç –Ω–∞–≤—Å–µ–≥–¥–∞
                muted_members.append(f"‚Ä¢ {member.mention} - **–ù–∞–≤—Å–µ–≥–¥–∞**")

        if not muted_members:
            embed = create_embed(
                title="üìã –°–ø–∏—Å–æ–∫ –∑–∞–º—å—é—á–µ–Ω–Ω—ã—Ö",
                description="–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –∑–∞–º—å—é—á–µ–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤",
                color=0x2F3136
            )
        else:
            embed = create_embed(
                title="üìã –°–ø–∏—Å–æ–∫ –∑–∞–º—å—é—á–µ–Ω–Ω—ã—Ö",
                description="\n".join(muted_members),
                color=0xFF0000
            )
            embed.set_footer(text=f"–í—Å–µ–≥–æ –∑–∞–º—å—é—á–µ–Ω–æ: {len(muted_members)}")

        await interaction.response.send_message(embed=embed)

async def setup(bot):
    await bot.add_cog(Mutes(bot)) 