import discord
from discord.ext import commands
from discord import app_commands
from utils import create_embed, has_admin_role, command_cooldown
import yaml

class Reset(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        with open("config/config.yaml", "r", encoding="utf-8") as f:
            self.config = yaml.safe_load(f)

    @app_commands.command(name="reset", description="–°–±—Ä–æ—Å–∏—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞")
    @app_commands.describe(
        type="–ß—Ç–æ –Ω—É–∂–Ω–æ —Å–±—Ä–æ—Å–∏—Ç—å",
    )
    @app_commands.choices(type=[
        app_commands.Choice(name="mutes", value="mutes"),
        app_commands.Choice(name="warns", value="warns")
    ])
    @has_admin_role()
    @command_cooldown()
    async def reset(self, interaction: discord.Interaction, type: str):
        await interaction.response.defer()

        if type == "mutes":
            # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –º—É—Ç–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
            mute_role_id = self.config.get('moderation', {}).get('mute_role')
            if not mute_role_id:
                return await interaction.followup.send(
                    embed=create_embed(description="‚ùå –†–æ–ª—å –º—É—Ç–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏!")
                )

            mute_role = interaction.guild.get_role(int(mute_role_id))
            if not mute_role:
                return await interaction.followup.send(
                    embed=create_embed(description="‚ùå –†–æ–ª—å –º—É—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")
                )

            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–º—É—á–µ–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
            muted_members = len(mute_role.members)

            # –°–Ω–∏–º–∞–µ–º —Ä–æ–ª—å –º—É—Ç–∞ —É –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
            for member in mute_role.members:
                try:
                    await member.remove_roles(mute_role, reason="–ú–∞—Å—Å–æ–≤—ã–π —Å–±—Ä–æ—Å –º—É—Ç–æ–≤")
                    # –ï—Å–ª–∏ —É —É—á–∞—Å—Ç–Ω–∏–∫–∞ –µ—Å—Ç—å —Ç–∞–π–º–∞—É—Ç, —Ç–æ–∂–µ —Å–Ω–∏–º–∞–µ–º –µ–≥–æ
                    if member.is_timed_out():
                        await member.timeout(None, reason="–ú–∞—Å—Å–æ–≤—ã–π —Å–±—Ä–æ—Å –º—É—Ç–æ–≤")
                except discord.Forbidden:
                    continue

            await interaction.followup.send(
                embed=create_embed(
                    title="üîÑ –°–±—Ä–æ—Å –º—É—Ç–æ–≤",
                    description=f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–Ω—è—Ç –º—É—Ç —Å **{muted_members}** —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
                )
            )

        elif type == "warns":
            import sqlite3
            from utils import DB_PATH

            try:
                with sqlite3.connect(DB_PATH) as conn:
                    cursor = conn.cursor()
                    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
                    cursor.execute(
                        "SELECT COUNT(*) FROM warnings WHERE guild_id = ? AND active = TRUE",
                        (str(interaction.guild.id),)
                    )
                    warns_count = cursor.fetchone()[0]
                    
                    # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
                    cursor.execute(
                        "UPDATE warnings SET active = FALSE WHERE guild_id = ? AND active = TRUE",
                        (str(interaction.guild.id),)
                    )
                    conn.commit()

                await interaction.followup.send(
                    embed=create_embed(
                        title="üîÑ –°–±—Ä–æ—Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π",
                        description=f"‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ **{warns_count}** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π"
                    )
                )
            except Exception as e:
                await interaction.followup.send(
                    embed=create_embed(description=f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: {str(e)}")
                )

async def setup(bot):
    await bot.add_cog(Reset(bot)) 