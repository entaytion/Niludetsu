import discord
from discord.ext import commands
from discord import app_commands
from discord.ui import View, Button, Modal, TextInput
import random
import json
import asyncio
from utils import create_embed

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å—Ç–æ–ª–∏—Ü –∏ —Å—Ç—Ä–∞–Ω
CAPITALS = {
    "–ú–æ—Å–∫–≤–∞": "–†–æ—Å—Å–∏—è",
    "–ü–∞—Ä–∏–∂": "–§—Ä–∞–Ω—Ü–∏—è",
    "–ë–µ—Ä–ª–∏–Ω": "–ì–µ—Ä–º–∞–Ω–∏—è",
    "–†–∏–º": "–ò—Ç–∞–ª–∏—è",
    "–ú–∞–¥—Ä–∏–¥": "–ò—Å–ø–∞–Ω–∏—è",
    "–õ–æ–Ω–¥–æ–Ω": "–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è",
    "–í–∞—Ä—à–∞–≤–∞": "–ü–æ–ª—å—à–∞",
    "–ü—Ä–∞–≥–∞": "–ß–µ—Ö–∏—è",
    "–í–µ–Ω–∞": "–ê–≤—Å—Ç—Ä–∏—è",
    "–ë—É–¥–∞–ø–µ—à—Ç": "–í–µ–Ω–≥—Ä–∏—è",
    "–ê—Ñ–∏–Ω—ã": "–ì—Ä–µ—Ü–∏—è",
    "–õ–∏—Å—Å–∞–±–æ–Ω": "–ü–æ—Ä—Ç—É–≥–∞–ª–∏—è",
    "–ê–º—Å—Ç–µ—Ä–¥–∞–º": "–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã",
    "–ë—Ä—é—Å—Å–µ–ª—å": "–ë–µ–ª—å–≥–∏—è",
    "–°—Ç–æ–∫–≥–æ–ª—å–º": "–®–≤–µ—Ü–∏—è",
    "–û—Å–ª–æ": "–ù–æ—Ä–≤–µ–≥–∏—è",
    "–•–µ–ª—å—Å–∏–Ω–∫–∏": "–§–∏–Ω–ª—è–Ω–¥–∏—è",
    "–ö–æ–ø–µ–Ω–≥–∞–≥–µ–Ω": "–î–∞–Ω–∏—è",
    "–î—É–±–ª–∏–Ω": "–ò—Ä–ª–∞–Ω–¥–∏—è",
    "–ë–µ—Ä–Ω": "–®–≤–µ–π—Ü–∞—Ä–∏—è"
}

class GuessModal(Modal):
    def __init__(self):
        super().__init__(title="–£–≥–∞–¥–∞–π —Å—Ç–æ–ª–∏—Ü—É")
        self.guess = TextInput(
            label="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–∏—Ü—ã",
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ü–∞—Ä–∏–∂",
            style=discord.TextStyle.short,
            required=True,
            max_length=50
        )
        self.add_item(self.guess)

    async def on_submit(self, interaction: discord.Interaction):
        game_view = self.view
        await game_view.process_guess(interaction, self.guess.value)

class CapitalsGame:
    def __init__(self):
        self.target_capital = random.choice(list(CAPITALS.keys()))
        self.target_country = CAPITALS[self.target_capital]
        self.attempts = []
        self.max_attempts = 7
        self.game_over = False
        
    def make_guess(self, guess):
        guess = guess.strip().capitalize()
        self.attempts.append(guess)
        
        if guess == self.target_capital:
            self.game_over = True
            return True
            
        return False
        
    def get_hint(self, guess):
        if guess == self.target_capital:
            return "üü©" * len(guess)
            
        hint = ""
        target_chars = set(self.target_capital.lower())
        guess_chars = set(guess.lower())
        
        common_chars = target_chars & guess_chars
        if not common_chars:
            return "‚ùå –ù–µ—Ç –æ–±—â–∏—Ö –±—É–∫–≤"
            
        return f"üìù –û–±—â–∏–µ –±—É–∫–≤—ã: {', '.join(sorted(common_chars))}"
        
    def get_status(self):
        status = []
        for attempt in self.attempts:
            hint = self.get_hint(attempt)
            status.append(f"**–ü–æ–ø—ã—Ç–∫–∞ {len(status) + 1}:** {attempt}\n{hint}")
        return "\n".join(status)

class CapitalsView(View):
    def __init__(self, game):
        super().__init__(timeout=300)  # 5 –º–∏–Ω—É—Ç –Ω–∞ –∏–≥—Ä—É
        self.game = game
        
    @discord.ui.button(label="–°–¥–µ–ª–∞—Ç—å –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ", style=discord.ButtonStyle.primary)
    async def guess(self, interaction: discord.Interaction, button: Button):
        if len(self.game.attempts) >= self.game.max_attempts:
            await interaction.response.send_message("‚ùå –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø–æ–ø—ã—Ç–∫–∏.")
            return
            
        modal = GuessModal()
        modal.view = self
        await interaction.response.send_modal(modal)
        
    async def process_guess(self, interaction: discord.Interaction, guess):
        is_correct = self.game.make_guess(guess)
        
        if is_correct:
            embed = create_embed(
                title="üéÆ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!",
                description=f"‚úÖ –í—ã —É–≥–∞–¥–∞–ª–∏ —Å—Ç–æ–ª–∏—Ü—É: **{self.game.target_capital}**!\n"
                           f"–≠—Ç–æ —Å—Ç–æ–ª–∏—Ü–∞ —Å—Ç—Ä–∞–Ω—ã **{self.game.target_country}**\n"
                           f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫: **{len(self.game.attempts)}**\n\n"
                           f"**–ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø—ã—Ç–æ–∫:**\n{self.game.get_status()}"
            )
            self.stop()
            await interaction.response.edit_message(embed=embed, view=None)
            return
            
        if len(self.game.attempts) >= self.game.max_attempts:
            embed = create_embed(
                title="‚ùå –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!",
                description=f"–£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø–æ–ø—ã—Ç–∫–∏!\n"
                           f"–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: **{self.game.target_capital}** ({self.game.target_country})\n\n"
                           f"**–ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø—ã—Ç–æ–∫:**\n{self.game.get_status()}"
            )
            self.stop()
            await interaction.response.edit_message(embed=embed, view=None)
            return
            
        embed = create_embed(
            title="üéÆ –£–≥–∞–¥–∞–π —Å—Ç–æ–ª–∏—Ü—É",
            description=f"–£–≥–∞–¥–∞–π—Ç–µ —Å—Ç–æ–ª–∏—Ü—É —Å—Ç—Ä–∞–Ω—ã **{self.game.target_country}**\n"
                       f"–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: **{self.game.max_attempts - len(self.game.attempts)}**\n\n"
                       f"**–ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø—ã—Ç–æ–∫:**\n{self.game.get_status()}\n\n"
                       "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ!"
        )
        await interaction.response.edit_message(embed=embed, view=self)

class Capitals(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        
    @app_commands.command(name="capitals", description="–ù–∞—á–∞—Ç—å –∏–≥—Ä—É '–£–≥–∞–¥–∞–π —Å—Ç–æ–ª–∏—Ü—É'")
    async def capitals(self, interaction: discord.Interaction):
        game = CapitalsGame()
        
        embed = create_embed(
            title="üéÆ –£–≥–∞–¥–∞–π —Å—Ç–æ–ª–∏—Ü—É",
            description=f"–£–≥–∞–¥–∞–π—Ç–µ —Å—Ç–æ–ª–∏—Ü—É —Å—Ç—Ä–∞–Ω—ã **{game.target_country}**\n"
                       f"–£ –≤–∞—Å –µ—Å—Ç—å **{game.max_attempts}** –ø–æ–ø—ã—Ç–æ–∫.\n"
                       "–ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –ø–æ–ø—ã—Ç–∫–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–¥—Å–∫–∞–∑–∫—É –≤ –≤–∏–¥–µ –æ–±—â–∏—Ö –±—É–∫–≤.\n\n"
                       "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ!"
        )
        
        view = CapitalsView(game)
        await interaction.response.send_message(embed=embed, view=view)
        
        await view.wait()
        if not view.is_finished():
            embed = create_embed(
                title="‚è∞ –í—Ä–µ–º—è –≤—ã—à–ª–æ!",
                description=f"–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: **{game.target_capital}** ({game.target_country})\n\n"
                           f"**–ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø—ã—Ç–æ–∫:**\n{game.get_status()}"
            )
            await interaction.edit_original_message(embed=embed, view=None)

async def setup(bot):
    await bot.add_cog(Capitals(bot)) 