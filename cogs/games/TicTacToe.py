import discord
from discord.ext import commands
from discord import app_commands
from utils import create_embed
import random

class TicTacToeButton(discord.ui.Button):
    def __init__(self, x: int, y: int):
        super().__init__(style=discord.ButtonStyle.secondary, label="\u200b", row=y)
        self.x = x
        self.y = y

    async def callback(self, interaction: discord.Interaction):
        view: TicTacToeView = self.view
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ö–æ–¥ –ª–∏ –∏–≥—Ä–æ–∫–∞
        if interaction.user != view.current_player:
            await interaction.response.send_message("–°–µ–π—á–∞—Å –Ω–µ –≤–∞—à —Ö–æ–¥!")
            return

        # –°—Ç–∞–≤–∏–º —Å–∏–º–≤–æ–ª
        self.label = "X" if view.current_player == view.player1 else "O"
        self.disabled = True
        
        if view.current_player == view.player1:
            self.style = discord.ButtonStyle.danger
        else:
            self.style = discord.ButtonStyle.success

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
        view.board[self.y][self.x] = self.label

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–±–µ–¥—É
        if view.check_win():
            for child in view.children:
                child.disabled = True
            await interaction.response.edit_message(
                embed=create_embed(
                    title="üéÆ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏",
                    description=f"**–ü–æ–±–µ–¥–∏—Ç–µ–ª—å: {view.current_player.mention}!** üéâ"
                ),
                view=view
            )
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∏—á—å—é
        if view.is_board_full():
            for child in view.children:
                child.disabled = True
            await interaction.response.edit_message(
                embed=create_embed(
                    title="üéÆ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏", 
                    description="**–ù–∏—á—å—è!** ü§ù"
                ),
                view=view
            )
            return

        # –ú–µ–Ω—è–µ–º –∏–≥—Ä–æ–∫–∞
        view.current_player = view.player2 if view.current_player == view.player1 else view.player1
        
        await interaction.response.edit_message(
            embed=create_embed(
                title="üéÆ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏",
                description=f"–•–æ–¥ –∏–≥—Ä–æ–∫–∞: {view.current_player.mention}"
            ),
            view=view
        )

        # –ï—Å–ª–∏ —Å–ª–µ–¥—É—é—â–∏–π —Ö–æ–¥ –±–æ—Ç–∞ –∏ –∏–≥—Ä–∞ –Ω–µ –∑–∞–∫–æ–Ω—á–µ–Ω–∞
        if view.current_player.bot and not view.check_win() and not view.is_board_full():
            await view.bot_move()

class TicTacToeView(discord.ui.View):
    def __init__(self, player1: discord.Member, player2: discord.Member, first_move: discord.Member):
        super().__init__(timeout=300)  # 5 –º–∏–Ω—É—Ç –Ω–∞ –∏–≥—Ä—É
        self.player1 = player1
        self.player2 = player2
        self.current_player = first_move
        self.board = [["\u200b" for _ in range(3)] for _ in range(3)]

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
        for x in range(3):
            for y in range(3):
                self.add_item(TicTacToeButton(x, y))

    async def bot_move(self):
        """–õ–æ–≥–∏–∫–∞ —Ö–æ–¥–∞ –±–æ—Ç–∞"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–±–µ–¥—ã
        for button in self.children:
            if button.label == "\u200b":
                # –ü—Ä–æ–±—É–µ–º —Å–¥–µ–ª–∞—Ç—å —Ö–æ–¥
                button.label = "O"
                self.board[button.y][button.x] = "O"
                
                # –ï—Å–ª–∏ —ç—Ç–æ—Ç —Ö–æ–¥ –≤–µ–¥–µ—Ç –∫ –ø–æ–±–µ–¥–µ, –æ—Å—Ç–∞–≤–ª—è–µ–º –µ–≥–æ
                if self.check_win():
                    button.style = discord.ButtonStyle.success
                    button.disabled = True
                    
                    # –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
                    for child in self.children:
                        child.disabled = True
                    
                    await self.message.edit(
                        embed=create_embed(
                            title="üéÆ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏",
                            description=f"**–ü–æ–±–µ–¥–∏—Ç–µ–ª—å: {self.current_player.mention}!** üéâ"
                        ),
                        view=self
                    )
                    return
                
                # –ï—Å–ª–∏ –Ω–µ—Ç, –æ—Ç–º–µ–Ω—è–µ–º —Ö–æ–¥
                button.label = "\u200b"
                self.board[button.y][button.x] = "\u200b"

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–±–µ–¥—ã –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞
        for button in self.children:
            if button.label == "\u200b":
                # –ü—Ä–æ–±—É–µ–º —Å–¥–µ–ª–∞—Ç—å —Ö–æ–¥ –∑–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞
                button.label = "X"
                self.board[button.y][button.x] = "X"
                
                # –ï—Å–ª–∏ —ç—Ç–æ—Ç —Ö–æ–¥ –≤–µ–¥–µ—Ç –∫ –ø–æ–±–µ–¥–µ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞, –±–ª–æ–∫–∏—Ä—É–µ–º –µ–≥–æ
                if self.check_win():
                    button.label = "O"
                    self.board[button.y][button.x] = "O"
                    button.style = discord.ButtonStyle.success
                    button.disabled = True
                    
                    # –ú–µ–Ω—è–µ–º –∏–≥—Ä–æ–∫–∞
                    self.current_player = self.player1
                    
                    await self.message.edit(
                        embed=create_embed(
                            title="üéÆ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏",
                            description=f"–•–æ–¥ –∏–≥—Ä–æ–∫–∞: {self.current_player.mention}"
                        ),
                        view=self
                    )
                    return
                
                # –û—Ç–º–µ–Ω—è–µ–º –ø—Ä–æ–±–Ω—ã–π —Ö–æ–¥
                button.label = "\u200b"
                self.board[button.y][button.x] = "\u200b"

        # –ï—Å–ª–∏ –Ω–µ—Ç –≤—ã–∏–≥—Ä—ã—à–Ω—ã—Ö —Ö–æ–¥–æ–≤, –¥–µ–ª–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ö–æ–¥
        available_moves = [button for button in self.children if button.label == "\u200b"]
        if available_moves:
            button = random.choice(available_moves)
            button.label = "O"
            button.style = discord.ButtonStyle.success
            button.disabled = True
            self.board[button.y][button.x] = "O"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∏—á—å—é
            if self.is_board_full():
                for child in self.children:
                    child.disabled = True
                await self.message.edit(
                    embed=create_embed(
                        title="üéÆ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏", 
                        description="**–ù–∏—á—å—è!** ü§ù"
                    ),
                    view=self
                )
                return

            # –ú–µ–Ω—è–µ–º –∏–≥—Ä–æ–∫–∞
            self.current_player = self.player1
            
            await self.message.edit(
                embed=create_embed(
                    title="üéÆ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏",
                    description=f"–•–æ–¥ –∏–≥—Ä–æ–∫–∞: {self.current_player.mention}"
                ),
                view=self
            )

    async def on_timeout(self):
        for child in self.children:
            child.disabled = True
        try:
            await self.message.edit(
                embed=create_embed(
                    title="üéÆ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏",
                    description="**–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞ –∏–∑-–∑–∞ —Ç–∞–π–º–∞—É—Ç–∞!** ‚è∞"
                ),
                view=self
            )
        except:
            pass

    def check_win(self):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–æ–∫
        for row in self.board:
            if row.count(row[0]) == 3 and row[0] != "\u200b":
                return True

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–±—Ü–æ–≤
        for col in range(3):
            if self.board[0][col] == self.board[1][col] == self.board[2][col] != "\u200b":
                return True

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏–∞–≥–æ–Ω–∞–ª–µ–π
        if self.board[0][0] == self.board[1][1] == self.board[2][2] != "\u200b":
            return True
        if self.board[0][2] == self.board[1][1] == self.board[2][0] != "\u200b":
            return True

        return False

    def is_board_full(self):
        return all(cell != "\u200b" for row in self.board for cell in row)

class TicTacToe(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="tictactoe", description="–°—ã–≥—Ä–∞—Ç—å –≤ –∫—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏")
    @app_commands.describe(opponent="–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫, —Å –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å")
    async def tictactoe(self, interaction: discord.Interaction, opponent: discord.Member = None):
        # –ï—Å–ª–∏ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫ –Ω–µ —É–∫–∞–∑–∞–Ω, –∏–≥—Ä–∞–µ–º —Å –±–æ—Ç–æ–º
        if opponent is None:
            opponent = self.bot.user

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –∏–≥—Ä–∞–µ—Ç –ª–∏ –∏–≥—Ä–æ–∫ —Å–∞–º —Å —Å–æ–±–æ–π
        if opponent == interaction.user:
            await interaction.response.send_message(
                embed=create_embed(
                    description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å —Å–∞–º–∏ —Å —Å–æ–±–æ–π!"
                )
            )
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±–æ—Ç–∞
        if opponent.bot and opponent != self.bot.user:
            await interaction.response.send_message(
                embed=create_embed(
                    description="–í—ã –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å —ç—Ç–∏–º –±–æ—Ç–æ–º!"
                )
            )
            return

        # –°–ª—É—á–∞–π–Ω–æ –≤—ã–±–∏—Ä–∞–µ–º, –∫—Ç–æ —Ö–æ–¥–∏—Ç –ø–µ—Ä–≤—ã–º
        first_move = random.choice([interaction.user, opponent])
        
        # –°–æ–∑–¥–∞–µ–º –∏–≥—Ä—É
        view = TicTacToeView(interaction.user, opponent, first_move)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–≥—Ä–æ–π
        await interaction.response.send_message(
            embed=create_embed(
                title="üéÆ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏",
                description=f"–•–æ–¥ –∏–≥—Ä–æ–∫–∞: {first_move.mention}\n–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫: {opponent.mention if first_move == interaction.user else interaction.user.mention}"
            ),
            view=view
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ç–∞–π–º–∞—É—Ç–∞
        view.message = await interaction.original_response()
        
        # –ï—Å–ª–∏ –ø–µ—Ä–≤—ã–π —Ö–æ–¥ –∑–∞ –±–æ—Ç–æ–º, –¥–µ–ª–∞–µ–º –µ–≥–æ
        if first_move.bot:
            await view.bot_move()

async def setup(bot):
    await bot.add_cog(TicTacToe(bot))