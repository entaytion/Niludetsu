import discord
from discord.ext import commands
from discord import app_commands
from utils import create_embed
import random

class RPSButton(discord.ui.Button):
    def __init__(self, emoji: str, choice: str):
        super().__init__(style=discord.ButtonStyle.secondary, emoji=emoji, label=choice)
        self.choice = choice

    async def callback(self, interaction: discord.Interaction):
        view: RPSView = self.view
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞–∂–∞–ª –ª–∏ –∫–Ω–æ–ø–∫—É –∏–≥—Ä–æ–∫
        if interaction.user != view.player:
            await interaction.response.send_message(
                "–≠—Ç–æ –Ω–µ –≤–∞—à–∞ –∏–≥—Ä–∞!"
            )
            return

        # –í—ã–±–æ—Ä –±–æ—Ç–∞
        bot_choice = random.choice(["–ö–∞–º–µ–Ω—å", "–ù–æ–∂–Ω–∏—Ü—ã", "–ë—É–º–∞–≥–∞"])
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
        result = self.get_winner(self.choice, bot_choice)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∏–ª–∏ –∫–Ω–æ–ø–æ–∫
        for button in view.children:
            button.disabled = True
            if button.choice == self.choice:
                button.style = discord.ButtonStyle.primary
            if button.choice == bot_choice:
                button.style = discord.ButtonStyle.danger

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
        description = (
            f"**{interaction.user.mention} –≤—ã–±—Ä–∞–ª:** {self.choice}\n"
            f"**–ë–æ—Ç –≤—ã–±—Ä–∞–ª:** {bot_choice}\n\n"
        )

        if result == "win":
            description += "üéâ **–í—ã –ø–æ–±–µ–¥–∏–ª–∏!**"
        elif result == "lose":
            description += "‚ùå **–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!**"
        else:
            description += "ü§ù **–ù–∏—á—å—è!**"

        await interaction.response.edit_message(
            embed=create_embed(
                title="üéÆ –ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞",
                description=description
            ),
            view=view
        )

    def get_winner(self, player_choice: str, bot_choice: str) -> str:
        """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –∏–≥—Ä—ã"""
        if player_choice == bot_choice:
            return "draw"
            
        winning_combinations = {
            "–ö–∞–º–µ–Ω—å": "–ù–æ–∂–Ω–∏—Ü—ã",
            "–ù–æ–∂–Ω–∏—Ü—ã": "–ë—É–º–∞–≥–∞",
            "–ë—É–º–∞–≥–∞": "–ö–∞–º–µ–Ω—å"
        }
        
        if winning_combinations[player_choice] == bot_choice:
            return "win"
        return "lose"

class RPSView(discord.ui.View):
    def __init__(self, player: discord.Member):
        super().__init__(timeout=60)  # 1 –º–∏–Ω—É—Ç–∞ –Ω–∞ –∏–≥—Ä—É
        self.player = player
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
        self.add_item(RPSButton("üóø", "–ö–∞–º–µ–Ω—å"))
        self.add_item(RPSButton("‚úÇÔ∏è", "–ù–æ–∂–Ω–∏—Ü—ã"))
        self.add_item(RPSButton("üìÑ", "–ë—É–º–∞–≥–∞"))

    async def on_timeout(self):
        for child in self.children:
            child.disabled = True
        try:
            await self.message.edit(
                embed=create_embed(
                    title="üéÆ –ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞",
                    description="**–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞ –∏–∑-–∑–∞ —Ç–∞–π–º–∞—É—Ç–∞!** ‚è∞"
                ),
                view=self
            )
        except:
            pass

class RPS(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(
        name="rps",
        description="–°—ã–≥—Ä–∞—Ç—å –≤ –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞"
    )
    @app_commands.describe(opponent="–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫, —Å –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å")
    async def rps(self, interaction: discord.Interaction, opponent: discord.Member = None):
        # –ï—Å–ª–∏ –æ–ø–ø–æ–Ω–µ–Ω—Ç –Ω–µ —É–∫–∞–∑–∞–Ω, –∏–≥—Ä–∞–µ–º —Å –±–æ—Ç–æ–º
        if opponent is None:
            opponent = self.bot.user

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –∏–≥—Ä–∞–µ—Ç –ª–∏ –∏–≥—Ä–æ–∫ —Å–∞–º —Å —Å–æ–±–æ–π
        if opponent == interaction.user:
            await interaction.response.send_message(
                embed=create_embed(
                    description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å —Å–∞–º–∏ —Å —Å–æ–±–æ–π!"
                )
            )
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±–æ—Ç–∞
        if opponent.bot and opponent != self.bot.user:
            await interaction.response.send_message(
                embed=create_embed(
                    description="–í—ã –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å —Å –±–æ—Ç–æ–º!"
                )
            )
            return

        # –°–æ–∑–¥–∞–µ–º –∏–≥—Ä—É
        view = RPSView(interaction.user)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–≥—Ä–æ–π
        await interaction.response.send_message(
            embed=create_embed(
                title="üéÆ –ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞",
                description=(
                    f"**{interaction.user.mention} vs {opponent.mention}**\n\n"
                    "–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç:"
                )
            ),
            view=view
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ç–∞–π–º–∞—É—Ç–∞
        view.message = await interaction.original_response()

async def setup(bot):
    await bot.add_cog(RPS(bot)) 