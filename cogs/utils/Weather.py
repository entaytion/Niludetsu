import discord
from discord.ext import commands
from discord import app_commands
from utils import create_embed
import aiohttp
import json
from datetime import datetime
from transliterate import translit

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞
with open('config/config.json', 'r', encoding='utf-8') as f:
    config = json.load(f)

WEATHER_API_KEY = config.get('WEATHER_API_KEY')

BASE_URL = "http://api.openweathermap.org/data/2.5/weather"

CITY_NAMES = {
    '–∫–∏–µ–≤': 'Kyiv',
    '–∫–∏—ó–≤': 'Kyiv',
    '–º–æ—Å–∫–≤–∞': 'Moscow',
    '—Ö–∞—Ä—å–∫–æ–≤': 'Kharkiv',
    '—Ö–∞—Ä–∫—ñ–≤': 'Kharkiv',
    '–æ–¥–µ—Å—Å–∞': 'Odesa',
    '–æ–¥–µ—Å–∞': 'Odesa',
    '–ª—å–≤–æ–≤': 'Lviv',
    '–ª—å–≤—ñ–≤': 'Lviv',
    '–¥–Ω–µ–ø—Ä': 'Dnipro',
    '–¥–Ω—ñ–ø—Ä–æ': 'Dnipro',
    '–∑–∞–ø–æ—Ä–æ–∂—å–µ': 'Zaporizhzhia',
    '–∑–∞–ø–æ—Ä—ñ–∂–∂—è': 'Zaporizhzhia',
    '—Ö–º–µ–ª—å–Ω–∏—Ü–∫–∏–π': 'Khmelnytskyi',
    '—Ö–º–µ–ª—å–Ω–∏—Ü—å–∫–∏–π': 'Khmelnytskyi',
    '–≤–∏–Ω–Ω–∏—Ü–∞': 'Vinnytsia',
    '–≤—ñ–Ω–Ω–∏—Ü—è': 'Vinnytsia',
    '–∂–∏—Ç–æ–º–∏—Ä': 'Zhytomyr',
    '—á–µ—Ä–∫–∞—Å—Å—ã': 'Cherkasy',
    '—á–µ—Ä–∫–∞—Å–∏': 'Cherkasy',
    '—á–µ—Ä–Ω–∏–≥–æ–≤': 'Chernihiv',
    '—á–µ—Ä–Ω—ñ–≥—ñ–≤': 'Chernihiv',
    '—Ö–µ—Ä—Å–æ–Ω': 'Kherson',
    '–Ω–∏–∫–æ–ª–∞–µ–≤': 'Mykolaiv',
    '–º–∏–∫–æ–ª–∞—ó–≤': 'Mykolaiv',
    '–ø–æ–ª—Ç–∞–≤–∞': 'Poltava',
    '—Å—É–º—ã': 'Sumy',
    '—Å—É–º–∏': 'Sumy',
    '—Ä–æ–≤–Ω–æ': 'Rivne',
    '—Ä—ñ–≤–Ω–µ': 'Rivne',
    '–ª—É—Ü–∫': 'Lutsk',
    '–ª—É—Ü—å–∫': 'Lutsk',
    '—É–∂–≥–æ—Ä–æ–¥': 'Uzhhorod',
    '–∏–≤–∞–Ω–æ-—Ñ—Ä–∞–Ω–∫–æ–≤—Å–∫': 'Ivano-Frankivsk',
    '—ñ–≤–∞–Ω–æ-—Ñ—Ä–∞–Ω–∫—ñ–≤—Å—å–∫': 'Ivano-Frankivsk',
    '—Ç–µ—Ä–Ω–æ–ø–æ–ª—å': 'Ternopil',
    '—Ç–µ—Ä–Ω–æ–ø—ñ–ª—å': 'Ternopil',
    '—á–µ—Ä–Ω–æ–≤—Ü—ã': 'Chernivtsi',
    '—á–µ—Ä–Ω—ñ–≤—Ü—ñ': 'Chernivtsi',
    '–º–∞—Ä–∏—É–ø–æ–ª—å': 'Mariupol',
    '–º–∞—Ä—ñ—É–ø–æ–ª—å': 'Mariupol',
    '–∫—Ä–∏–≤–æ–π —Ä–æ–≥': 'Kryvyi Rih',
    '–∫—Ä–∏–≤–∏–π —Ä—ñ–≥': 'Kryvyi Rih'
}

WEATHER_ICONS = {
    "01d": "‚òÄÔ∏è", "01n": "üåô",
    "02d": "üå§Ô∏è", "02n": "‚òÅÔ∏è",
    "03d": "‚òÅÔ∏è", "03n": "‚òÅÔ∏è",
    "04d": "‚òÅÔ∏è", "04n": "‚òÅÔ∏è",
    "09d": "üåßÔ∏è", "09n": "üåßÔ∏è",
    "10d": "üå¶Ô∏è", "10n": "üåßÔ∏è",
    "11d": "‚õàÔ∏è", "11n": "‚õàÔ∏è",
    "13d": "üå®Ô∏è", "13n": "üå®Ô∏è",
    "50d": "üå´Ô∏è", "50n": "üå´Ô∏è"
}

class Weather(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    def kelvin_to_celsius(self, kelvin):
        return round(kelvin - 273.15, 1)

    def format_weather_message(self, data):
        temp = self.kelvin_to_celsius(data['main']['temp'])
        feels_like = self.kelvin_to_celsius(data['main']['feels_like'])
        humidity = data['main']['humidity']
        wind_speed = data['wind']['speed']
        description = data['weather'][0]['description']
        icon = WEATHER_ICONS.get(data['weather'][0]['icon'], "‚ùì")

        return (
            f"{icon} **{description.capitalize()}**\n\n"
            f"üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: **{temp}¬∞C**\n"
            f"ü§î –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: **{feels_like}¬∞C**\n"
            f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: **{humidity}%**\n"
            f"üí® –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: **{wind_speed} –º/—Å**"
        )

    def get_city_name(self, city):
        city_lower = city.lower()
        if city_lower in CITY_NAMES:
            return CITY_NAMES[city_lower]
        try:
            return translit(city, 'uk', reversed=True)
        except:
            return city

    @app_commands.command(name="weather", description="–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ")
    @app_commands.describe(city="–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")
    async def weather(self, interaction: discord.Interaction, city: str):
        if not WEATHER_API_KEY:
            await interaction.response.send_message(
                embed=create_embed(
                    description="API-–∫–ª—é—á –¥–ª—è –ø–æ–≥–æ–¥—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"
                )
            )
            return

        await interaction.response.defer()

        try:
            city_name = self.get_city_name(city)
            async with aiohttp.ClientSession() as session:
                params = {
                    'q': f"{city_name},UA",
                    'appid': WEATHER_API_KEY,
                    'lang': 'ru'
                }

                async with session.get(BASE_URL, params=params) as response:
                    if response.status != 200:
                        error_text = await response.text()
                        raise Exception(f"–û—à–∏–±–∫–∞ API: {error_text} (–∫–æ–¥ {response.status})")

                    data = await response.json()

                if not isinstance(data, dict):
                    raise Exception("–ü–æ–ª—É—á–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç API")

                weather_info = self.format_weather_message(data)

                embed = create_embed(
                    title=f"üåç –ü–æ–≥–æ–¥–∞ –≤ {data['name']}",
                    description=weather_info,
                    footer={"text": f"–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {datetime.now().strftime('%H:%M:%S')}"}
                )
                await interaction.followup.send(embed=embed)

        except Exception as e:
            await interaction.followup.send(
                embed=create_embed(
                    description=f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}"
                )
            )

async def setup(bot):
    await bot.add_cog(Weather(bot))