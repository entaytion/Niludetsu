import discord
from discord.ext import commands
from discord import app_commands
from discord.ui import Modal, TextInput, View, Button
import json
import asyncio
from utils import create_embed, EMOJIS

class ComplaintButton(View):
    def __init__(self, cog):
        super().__init__(timeout=None)
        self.cog = cog
        
    @discord.ui.button(label="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É", style=discord.ButtonStyle.red, emoji="‚ö†Ô∏è", custom_id="submit_complaint")
    async def submit_complaint(self, interaction: discord.Interaction, button: Button):
        modal = ComplaintModal()
        await interaction.response.send_modal(modal)

class ComplaintModal(Modal, title="‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É"):
    user = TextInput(
        label="–ù–∞—Ä—É—à–∏—Ç–µ–ª—å",
        placeholder="ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ @—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ",
        style=discord.TextStyle.short,
        required=True
    )
    
    reason = TextInput(
        label="–ü—Ä–∏—á–∏–Ω–∞",
        placeholder="–ö–∞–∫–æ–µ –ø—Ä–∞–≤–∏–ª–æ –±—ã–ª–æ –Ω–∞—Ä—É—à–µ–Ω–æ?",
        style=discord.TextStyle.paragraph,
        required=True
    )
    
    proof = TextInput(
        label="–î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞",
        placeholder="–°—Å—ã–ª–∫–∏ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã/—Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ '—Ñ–∞–π–ª' –¥–ª—è –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞",
        style=discord.TextStyle.paragraph,
        required=False
    )
    
    additional = TextInput(
        label="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
        placeholder="–õ—é–±—ã–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏",
        style=discord.TextStyle.paragraph,
        required=False
    )

    async def on_submit(self, interaction: discord.Interaction):
        complaints_cog = interaction.client.get_cog("Complaints")
        if complaints_cog:
            if self.proof.value.lower() == '—Ñ–∞–π–ª':
                await interaction.response.send_message(
                    "üìé –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ (—É –≤–∞—Å –µ—Å—Ç—å 5 –º–∏–Ω—É—Ç)",
                    ephemeral=True
                )
                
                def check(m):
                    return m.author.id == interaction.user.id and m.attachments and m.channel.id == interaction.channel.id
                
                try:
                    file_message = await interaction.client.wait_for('message', timeout=300.0, check=check)
                    await complaints_cog.handle_complaint_submit(interaction, self, file_message.attachments)
                    await file_message.delete()
                except asyncio.TimeoutError:
                    await interaction.followup.send("‚ùå –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –∏—Å—Ç–µ–∫–ª–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É —Å–Ω–æ–≤–∞.", ephemeral=True)
            else:
                await complaints_cog.handle_complaint_submit(interaction, self)

class ComplaintView(View):
    def __init__(self):
        super().__init__(timeout=None)
        
    @discord.ui.button(label="–ü—Ä–∏–Ω—è—Ç—å", style=discord.ButtonStyle.green, emoji="‚úÖ", custom_id="accept_complaint")
    async def accept(self, interaction: discord.Interaction, button: Button):
        embed = interaction.message.embeds[0]
        embed.color = 0x57F287  # –ó–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç –≤ HEX
        embed.title = "‚úÖ –ñ–∞–ª–æ–±–∞ –ø—Ä–∏–Ω—è—Ç–∞"
            
        # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ñ—É—Ç–µ—Ä–∞
        user_id = int(embed.footer.text.split(": ")[1])
        user = interaction.client.get_user(user_id)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if user:
            try:
                await user.send("‚úÖ –í–∞—à–∞ –∂–∞–ª–æ–±–∞ –±—ã–ª–∞ **–ø—Ä–∏–Ω—è—Ç–∞**!")
            except:
                pass
        
        for item in self.children:
            item.disabled = True
            
        await interaction.message.edit(embed=embed, view=self)
        await interaction.response.send_message("‚úÖ –ñ–∞–ª–æ–±–∞ –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ –ø—Ä–∏–Ω—è—Ç–∞—è", ephemeral=True)
        
    @discord.ui.button(label="–û—Ç–∫–ª–æ–Ω–∏—Ç—å", style=discord.ButtonStyle.red, emoji="‚ùå", custom_id="reject_complaint")
    async def reject(self, interaction: discord.Interaction, button: Button):
        embed = interaction.message.embeds[0]
        embed.color = 0xED4245  # –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç –≤ HEX
        embed.title = "‚ùå –ñ–∞–ª–æ–±–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞"
            
        # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ñ—É—Ç–µ—Ä–∞
        user_id = int(embed.footer.text.split(": ")[1])
        user = interaction.client.get_user(user_id)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if user:
            try:
                await user.send("‚ùå –í–∞—à–∞ –∂–∞–ª–æ–±–∞ –±—ã–ª–∞ **–æ—Ç–∫–ª–æ–Ω–µ–Ω–∞**.")
            except:
                pass
        
        for item in self.children:
            item.disabled = True
            
        await interaction.message.edit(embed=embed, view=self)
        await interaction.response.send_message("‚ùå –ñ–∞–ª–æ–±–∞ –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω–∞—è", ephemeral=True)

class Complaints(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        with open('config/config.json', 'r') as f:
            self.config = json.load(f)
        bot.loop.create_task(self.setup_complaints_view())

    async def setup_complaints_view(self):
        await self.bot.wait_until_ready()
        if 'COMPLAINTS_CHANNEL_ID' in self.config and 'COMPLAINTS_MESSAGE_ID' in self.config:
            try:
                channel = self.bot.get_channel(int(self.config['COMPLAINTS_CHANNEL_ID']))
                if channel:
                    try:
                        message = await channel.fetch_message(int(self.config['COMPLAINTS_MESSAGE_ID']))
                        await message.edit(view=ComplaintButton(self))
                        print(f"‚úÖ –ü–∞–Ω–µ–ª—å –∂–∞–ª–æ–± –∑–∞–≥—Ä—É–∂–µ–Ω–∞: {channel.name} ({channel.id})")
                    except discord.NotFound:
                        print("‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞–Ω–µ–ª—å—é –∂–∞–ª–æ–± –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
                else:
                    print("‚ùå –ö–∞–Ω–∞–ª –¥–ª—è –∂–∞–ª–æ–± –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–∞–Ω–µ–ª–∏ –∂–∞–ª–æ–±: {e}")

    @app_commands.command(name="complaints", description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –∂–∞–ª–æ–±")
    @app_commands.describe(channel="ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –∂–∞–ª–æ–±")
    @commands.has_permissions(administrator=True)
    async def complaints(self, interaction: discord.Interaction, channel: str):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∂–∞–ª–æ–±"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–Ω–∞–ª
            try:
                channel_id = int(channel)
                complaints_channel = interaction.guild.get_channel(channel_id)
                
                if not complaints_channel:
                    await interaction.response.send_message("‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!", ephemeral=True)
                    return
                    
                if not isinstance(complaints_channel, discord.TextChannel):
                    await interaction.response.send_message("‚ùå –≠—Ç–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª!", ephemeral=True)
                    return
                    
            except ValueError:
                await interaction.response.send_message("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –∫–∞–Ω–∞–ª–∞!", ephemeral=True)
                return

            # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–∞–Ω–∞–ª–∞ –∂–∞–ª–æ–±
            complaints_embed = create_embed(
                title="‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É",
                description=(
                    "**–°–æ–æ–±—â–∏—Ç–µ –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏ –ø—Ä–∞–≤–∏–ª!**\n\n"
                    "‚Ä¢ –£–∫–∞–∂–∏—Ç–µ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è\n"
                    "‚Ä¢ –û–ø–∏—à–∏—Ç–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ\n"
                    "‚Ä¢ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞\n\n"
                    "**–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É!**"
                )
            )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
            complaints_message = await complaints_channel.send(embed=complaints_embed, view=ComplaintButton(self))
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –≤ –∫–æ–Ω—Ñ–∏–≥
            self.config['COMPLAINTS_CHANNEL_ID'] = str(complaints_channel.id)
            self.config['COMPLAINTS_MESSAGE_ID'] = str(complaints_message.id)
            
            with open('config/config.json', 'w') as f:
                json.dump(self.config, f, indent=4)

            await interaction.response.send_message(
                f"‚úÖ –°–∏—Å—Ç–µ–º–∞ –∂–∞–ª–æ–± –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –≤ –∫–∞–Ω–∞–ª–µ {complaints_channel.mention}", 
                ephemeral=True
            )

        except Exception as e:
            await interaction.response.send_message(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

    async def handle_complaint_submit(self, interaction: discord.Interaction, modal, attachments=None):
        if 'COMPLAINTS_CHANNEL_ID' not in self.config:
            await interaction.response.send_message("‚ùå –ö–∞–Ω–∞–ª –¥–ª—è –∂–∞–ª–æ–± –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!", ephemeral=True)
            return

        channel_id = int(self.config['COMPLAINTS_CHANNEL_ID'])
        channel = self.bot.get_channel(channel_id)
        
        if not channel:
            await interaction.response.send_message("‚ùå –ö–∞–Ω–∞–ª –¥–ª—è –∂–∞–ª–æ–± –Ω–µ –Ω–∞–π–¥–µ–Ω!", ephemeral=True)
            return

        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID –∏–ª–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏—é
        user_input = modal.user.value
        target_user = None
        
        if user_input.isdigit():
            target_user = interaction.guild.get_member(int(user_input))
        else:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∏–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è (<@123456789>)
            import re
            if match := re.match(r'<@!?(\d+)>', user_input):
                user_id = int(match.group(1))
                target_user = interaction.guild.get_member(user_id)

        user_mention = target_user.mention if target_user else f"ID: {modal.user.value}"

        proof_text = "–§–∞–π–ª –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω –Ω–∏–∂–µ" if attachments else (modal.proof.value or '–ù–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ')

        embed = create_embed(
            title="‚ö†Ô∏è –ù–æ–≤–∞—è –∂–∞–ª–æ–±–∞",
            description=f"{EMOJIS['DOT']} **–û—Ç:** {interaction.user.mention} (`{interaction.user.id}`)\n"
                       f"{EMOJIS['DOT']} **–ù–∞:** {user_mention}\n\n"
                       f"{EMOJIS['DOT']} **–ü—Ä–∏—á–∏–Ω–∞:**\n```\n{modal.reason.value}```\n"
                       f"{EMOJIS['DOT']} **–î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞:**\n```\n{proof_text}```\n"
                       f"{EMOJIS['DOT']} **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:**\n```\n{modal.additional.value or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}```",
            footer={"text": f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {interaction.user.id}"}
        )

        if interaction.user.avatar:
            embed.set_thumbnail(url=interaction.user.avatar.url)

        view = ComplaintView()
        
        if attachments:
            files = [await attachment.to_file() for attachment in attachments]
            await channel.send(embed=embed, view=view, files=files)
        else:
            await channel.send(embed=embed, view=view)
        
        if not modal.proof.value.lower() == '—Ñ–∞–π–ª':
            await interaction.response.send_message(
                "‚úÖ –í–∞—à–∞ –∂–∞–ª–æ–±–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ü–µ—Ä—Å–æ–Ω–∞–ª —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç –µ—ë –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.", 
                ephemeral=True
            )
        else:
            await interaction.followup.send(
                "‚úÖ –í–∞—à–∞ –∂–∞–ª–æ–±–∞ —Å —Ñ–∞–π–ª–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ü–µ—Ä—Å–æ–Ω–∞–ª —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç –µ—ë –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.", 
                ephemeral=True
            )

async def setup(bot):
    await bot.add_cog(Complaints(bot)) 