import discord
from discord import app_commands
from discord.ext import commands
import sqlite3
from datetime import datetime, timedelta, time
from utils import create_embed, DB_PATH, initialize_table, TABLES_SCHEMAS, EMOJIS

class Streak(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.setup_database()
        self.reset_time = time(22, 0)  # 22:00
        self._notified_users = set()
        
    def setup_database(self):
        initialize_table('user_streaks', TABLES_SCHEMAS['user_streaks'])

    def get_user_streak(self, user_id: int) -> dict:
        with sqlite3.connect(DB_PATH) as conn:
            cursor = conn.cursor()
            cursor.execute(
                "SELECT * FROM user_streaks WHERE user_id = ?",
                (user_id,)
            )
            result = cursor.fetchone()
            
            if not result:
                cursor.execute(
                    "INSERT INTO user_streaks (user_id) VALUES (?)",
                    (user_id,)
                )
                conn.commit()
                return {
                    'user_id': user_id,
                    'streak_count': 0,
                    'last_message_date': None,
                    'total_messages': 0,
                    'highest_streak': 0
                }
            
            return {
                'user_id': result[0],
                'streak_count': result[1],
                'last_message_date': datetime.fromisoformat(result[2]) if result[2] else None,
                'total_messages': result[3],
                'highest_streak': result[4]
            }

    def update_streak(self, user_id: int, streak_data: dict):
        with sqlite3.connect(DB_PATH) as conn:
            cursor = conn.cursor()
            cursor.execute(
                """
                UPDATE user_streaks 
                SET streak_count = ?,
                    last_message_date = ?,
                    total_messages = ?,
                    highest_streak = ?
                WHERE user_id = ?
                """,
                (
                    streak_data['streak_count'],
                    streak_data['last_message_date'].isoformat() if streak_data['last_message_date'] else None,
                    streak_data['total_messages'],
                    streak_data['highest_streak'],
                    user_id
                )
            )
            conn.commit()

    def get_flame_emoji(self, streak_count: int) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–º–æ–¥–∑–∏ –æ–≥–æ–Ω—å–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–ª–∏–Ω—ã –û–≥–æ–Ω—å–∫–∞"""
        if streak_count < 3:
            return "üî•"
        elif streak_count < 7:
            return "üí´"
        elif streak_count < 14:
            return "‚ö°"
        elif streak_count < 30:
            return "üåü"
        else:
            return "üëë"

    async def update_nickname(self, member: discord.Member, streak_count: int):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –¥–æ–±–∞–≤–ª—è—è –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è—è —ç–º–æ–¥–∑–∏ –û–≥–æ–Ω—å–∫–∞"""
        if member.guild.owner_id == member.id:
            return  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Å–µ—Ä–≤–µ—Ä–∞
            
        try:
            base_name = member.display_name
            # –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–µ —ç–º–æ–¥–∑–∏ –û–≥–æ–Ω—å–∫–æ–≤
            for emoji in ["üî•", "üí´", "‚ö°", "üåü", "üëë"]:
                base_name = base_name.replace(emoji, "").strip()
            
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —ç–º–æ–¥–∑–∏
            if streak_count > 0:
                new_name = f"{self.get_flame_emoji(streak_count)} {base_name}"
                await member.edit(nick=new_name[:32])  # Discord –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –¥–ª–∏–Ω—É –Ω–∏–∫–Ω–µ–π–º–∞ 32 —Å–∏–º–≤–æ–ª–∞–º–∏
        except discord.Forbidden:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º –¥–ª—è {member.name}. –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∏–∫–Ω–µ–π–º–∞: {e}")

    def is_streak_expired(self, last_message: datetime) -> tuple[bool, bool, datetime]:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –æ–≥–æ–Ω—å–∫–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç (–∏—Å—Ç–µ–∫ –ª–∏, –Ω—É–∂–Ω–æ –ª–∏ —É–≤–µ–¥–æ–º–∏—Ç—å, –≤—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è)"""
        now = datetime.now()
        
        # –ï—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –¥–æ 22:00
        if last_message.time() < self.reset_time:
            # –û–≥–æ–Ω–µ–∫ —Ç—É—Ö–Ω–µ—Ç –≤ 22:00 —Ç–æ–≥–æ –∂–µ –¥–Ω—è
            expire_time = datetime.combine(last_message.date(), self.reset_time)
        else:
            # –û–≥–æ–Ω–µ–∫ —Ç—É—Ö–Ω–µ—Ç –≤ 22:00 —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è
            expire_time = datetime.combine(last_message.date() + timedelta(days=1), self.reset_time)
            
        # –ï—Å–ª–∏ –±–ª–∏–∑–∫–æ –∫ –∏—Å—Ç–µ—á–µ–Ω–∏—é (–∑–∞ —á–∞—Å –¥–æ), –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        if not hasattr(self, '_notified_users'):
            self._notified_users = set()
            
        if now < expire_time and (expire_time - now).total_seconds() <= 3600:  # –ó–∞ —á–∞—Å –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è
            return False, True, expire_time  # –ù–µ –∏—Å—Ç–µ–∫, –Ω–æ –Ω—É–∂–Ω–æ —É–≤–µ–¥–æ–º–∏—Ç—å
        
        # –û—á–∏—â–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –æ–≥–æ–Ω–µ–∫ –∏—Å—Ç–µ–∫
        if now >= expire_time:
            self._notified_users = set()
            return True, False, expire_time  # –ò—Å—Ç–µ–∫, —É–≤–µ–¥–æ–º–ª—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ
            
        return False, False, expire_time  # –ù–µ –∏—Å—Ç–µ–∫ –∏ —É–≤–µ–¥–æ–º–ª—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ

    @commands.Cog.listener()
    async def on_message(self, message: discord.Message):
        if message.author.bot or not message.guild:
            return

        now = datetime.now()
        
        try:
            user_id = message.author.id
            streak_data = self.get_user_streak(user_id)
            last_message = streak_data['last_message_date']
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
            streak_data['total_messages'] += 1
            
            if not last_message:
                # –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                streak_data['streak_count'] = 1
                streak_data['highest_streak'] = 1
                streak_data['last_message_date'] = now
            else:
                time_diff = now - last_message
                
                if time_diff < timedelta(hours=24):
                    # –°–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 24 —á–∞—Å–æ–≤ - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
                    streak_data['last_message_date'] = now
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–∫–æ—Ä–æ –ª–∏ –ø–æ—Ç—É—Ö–Ω–µ—Ç –æ–≥–æ–Ω–µ–∫
                    is_expired, should_notify, expire_time = self.is_streak_expired(last_message)
                    if should_notify and user_id not in self._notified_users:
                        self._notified_users.add(user_id)
                        time_left = (expire_time - now).total_seconds() / 60
                        try:
                            await message.author.send(
                                embed=create_embed(
                                    title="‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ!",
                                    description=f"–í–∞—à –æ–≥–æ–Ω–µ–∫ —Å–∫–æ—Ä–æ –ø–æ—Ç—É—Ö–Ω–µ—Ç! –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å **{int(time_left)} –º–∏–Ω—É—Ç** —á—Ç–æ–±—ã –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ!"
                                )
                            )
                        except discord.Forbidden:
                            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.author.name} - –õ–° –∑–∞–∫—Ä—ã—Ç—ã")
                elif time_diff < timedelta(hours=24):
                    # –°–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 24 —á–∞—Å–æ–≤ - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º streak
                    streak_data['streak_count'] += 1
                    if streak_data['streak_count'] > streak_data['highest_streak']:
                        streak_data['highest_streak'] = streak_data['streak_count']
                    streak_data['last_message_date'] = now
                    
                    # –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –Ω–æ–≤–æ–º —Ä–µ–∫–æ—Ä–¥–µ
                    if streak_data['streak_count'] == streak_data['highest_streak']:
                        try:
                            await message.author.send(
                                embed=create_embed(
                                    title=f"{EMOJIS['SUCCESS']} –ù–æ–≤—ã–π —Ä–µ–∫–æ—Ä–¥!",
                                    description=f"–í—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –Ω–æ–≤—ã–π —Ä–µ–∫–æ—Ä–¥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: **{streak_data['streak_count']} –¥–Ω–µ–π**!"
                                )
                            )
                        except discord.Forbidden:
                            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∫–æ—Ä–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.author.name} - –õ–° –∑–∞–∫—Ä—ã—Ç—ã")
                else:
                    # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ 24 —á–∞—Å–æ–≤ - —Å–±—Ä–∞—Å—ã–≤–∞–µ–º streak
                    if streak_data['streak_count'] > 0:
                        try:
                            await message.author.send(
                                embed=create_embed(
                                    title="üíî –û–≥–æ–Ω–µ–∫ –ø–æ—Ç—É—Ö!",
                                    description=f"–í—ã —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –Ω–µ –ø–∏—Å–∞–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–π. –í–∞—à –æ–≥–æ–Ω–µ–∫ **{streak_data['streak_count']} –¥–Ω–µ–π** –ø–æ—Ç—É—Ö!"
                                )
                            )
                        except discord.Forbidden:
                            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ—Ç—É—Ö—à–µ–º –æ–≥–æ–Ω—å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.author.name} - –õ–° –∑–∞–∫—Ä—ã—Ç—ã")
                    streak_data['streak_count'] = 1
                    streak_data['last_message_date'] = now
            
            self.update_streak(user_id, streak_data)

            # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∏–∫–Ω–µ–π–º
            await self.update_nickname(message.author, streak_data['streak_count'])

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ–≥–æ–Ω—å–∫–∞: {e}")

    @app_commands.command(name="streak", description="–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º –æ–≥–æ–Ω—å–∫–µ –æ–±—â–µ–Ω–∏—è")
    @app_commands.describe(user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —á–µ–π –æ–≥–æ–Ω–µ–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å")
    async def streak(self, interaction: discord.Interaction, user: discord.User = None):
        target_user = user or interaction.user
        
        try:
            streak_data = self.get_user_streak(target_user.id)
            last_message = streak_data['last_message_date']
            current_time = datetime.now()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω –ª–∏ —Ç–µ–∫—É—â–∏–π streak
            if last_message and (current_time - last_message) > timedelta(hours=24):
                streak_data['streak_count'] = 0
                self.update_streak(target_user.id, streak_data)
            
            streak_count = streak_data['streak_count']
            total_messages = streak_data['total_messages']
            highest_streak = streak_data['highest_streak']
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–≥–æ–Ω—å–∫–∞
            is_expired, should_notify, expire_time = self.is_streak_expired(last_message)
            
            if is_expired:
                streak_status = "‚ùå –û–≥–æ–Ω—ë–∫ –ø–æ—Ç–µ—Ä—è–Ω"
            else:
                if current_time.time() >= self.reset_time:
                    # –ü–æ—Å–ª–µ 22:00
                    streak_status = f"‚ö° –û–≥–æ–Ω—ë–∫ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–æ {expire_time.strftime('%H:%M')}"
                else:
                    # –î–æ 22:00
                    hours_left = (expire_time - current_time).total_seconds() / 3600
                    if hours_left <= 1:
                        streak_status = f"‚ö†Ô∏è –û–≥–æ–Ω—ë–∫ –ø–æ–≥–∞—Å–Ω–µ—Ç —á–µ—Ä–µ–∑ {int(hours_left * 60)} –º–∏–Ω—É—Ç!"
                    else:
                        streak_status = f"‚ú® –û–≥–æ–Ω—ë–∫ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–æ {expire_time.strftime('%H:%M')}"

            embed = create_embed(
                title=f"{self.get_flame_emoji(streak_count)} –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—â–µ–Ω–∏—è",
                description=f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è {target_user.mention}",
                fields=[
                    {"name": "–¢–µ–∫—É—â–∏–π –æ–≥–æ–Ω—ë–∫:", "value": f"{streak_count} –¥–Ω–µ–π", "inline": True},
                    {"name": "–†–µ–∫–æ—Ä–¥–Ω—ã–π –æ–≥–æ–Ω—ë–∫:", "value": f"{highest_streak} –¥–Ω–µ–π", "inline": True},
                    {"name": "–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π:", "value": str(total_messages), "inline": True},
                    {"name": "–°—Ç–∞—Ç—É—Å:", "value": streak_status, "inline": False}
                ],
                thumbnail_url=target_user.display_avatar.url
            )
            
            if last_message:
                time_diff = current_time - last_message
                hours_left = 24 - time_diff.total_seconds() / 3600
                
                if hours_left > 0:
                    embed.add_field(
                        name="‚è∞ –í—Ä–µ–º—è –¥–æ —Å–±—Ä–æ—Å–∞",
                        value=f"**{int(hours_left)}** —á–∞—Å–æ–≤",
                        inline=False
                    )
            
            await interaction.response.send_message(embed=embed)

        except Exception as e:
            await interaction.response.send_message(
                embed=create_embed(
                    description=f"{EMOJIS['ERROR']} –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –æ–≥–æ–Ω—å–∫–µ: {str(e)}"
                ),
                ephemeral=True
            )

async def setup(bot):
    await bot.add_cog(Streak(bot)) 