import discord
from discord import app_commands
from discord.ext import commands, tasks
from datetime import datetime, timedelta
import random
from typing import List, Optional
from Niludetsu.utils.embed import Embed
from Niludetsu.utils.constants import Emojis
from Niludetsu.database import Database
import asyncio

class Giveaways(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.db = Database()
        asyncio.create_task(self.db.init())  # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        self.active_giveaways = {}
        self.check_giveaways.start()
        
    async def get_giveaway(self, message_id: int) -> Optional[dict]:
        """–ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞"""
        result = await self.db.execute(
            """
            SELECT giveaway_id, channel_id, message_id, guild_id, host_id, 
                   prize, winners_count, end_time, is_ended, participants
            FROM giveaways WHERE message_id = ?
            """,
            (str(message_id),)
        )
        
        if not result:
            return None
            
        row = result[0]
        try:
            end_time = datetime.strptime(row[7], "%Y-%m-%d %H:%M:%S")
        except (ValueError, TypeError):
            end_time = datetime.utcnow()
            
        return {
            'giveaway_id': row[0],
            'channel_id': row[1],
            'message_id': row[2],
            'guild_id': row[3],
            'host_id': row[4],
            'prize': row[5],
            'winners_count': row[6],
            'end_time': end_time,
            'is_ended': bool(row[8]),
            'participants': eval(row[9])
        }

    async def update_participants(self, message_id: int, participants: List[int]):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
        await self.db.execute(
            "UPDATE giveaways SET participants = ? WHERE message_id = ?",
            (str(participants), message_id)
        )

    @commands.Cog.listener()
    async def on_raw_reaction_add(self, payload: discord.RawReactionActionEvent):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π"""
        if payload.user_id == self.bot.user.id:
            return

        if str(payload.emoji) != "üéâ":
            return

        giveaway = await self.get_giveaway(payload.message_id)
        if not giveaway or giveaway['is_ended']:
            return

        channel = self.bot.get_channel(payload.channel_id)
        if not channel:
            return

        try:
            message = await channel.fetch_message(payload.message_id)
            if not message:
                return

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º
            if payload.user_id == int(giveaway['host_id']):
                # –£–±–∏—Ä–∞–µ–º —Ä–µ–∞–∫—Ü–∏—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞
                await message.remove_reaction("üéâ", payload.member)
                
                try:
                    embed=Embed(
                        title="‚ùå –û—à–∏–±–∫–∞ —É—á–∞—Å—Ç–∏—è",
                        description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Å–≤–æ–µ–º —Ä–æ–∑—ã–≥—Ä—ã—à–µ!",
                        color="RED"
                    )
                    await payload.member.send(embed=embed)
                except discord.Forbidden:
                    pass
                return

            participants = giveaway['participants']
            if payload.user_id not in participants:
                participants.append(payload.user_id)
                await self.update_participants(payload.message_id, participants)

                user = self.bot.get_user(payload.user_id)
                if user:
                    try:
                        embed=Embed(
                            title="üéâ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ",
                            description=f"–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ **{giveaway['prize']}**!\n"
                                      f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç –æ–±—ä—è–≤–ª–µ–Ω—ã <t:{int(giveaway['end_time'].timestamp())}:R>",
                            color="GREEN"
                        )
                        await user.send(embed=embed)
                    except discord.Forbidden:
                        pass

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–∞–∫—Ü–∏–∏: {e}")

    @commands.Cog.listener()
    async def on_raw_reaction_remove(self, payload: discord.RawReactionActionEvent):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π"""
        if payload.user_id == self.bot.user.id:
            return

        if str(payload.emoji) != "üéâ":
            return

        giveaway = await self.get_giveaway(payload.message_id)
        if not giveaway or giveaway['is_ended']:
            return

        participants = giveaway['participants']
        if payload.user_id in participants:
            participants.remove(payload.user_id)
            await self.update_participants(payload.message_id, participants)

            user = self.bot.get_user(payload.user_id)
            if user:
                try:
                    embed=Embed(
                        title="‚ùå –û—Ç–º–µ–Ω–∞ —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ",
                        description=f"–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —É—á–∞—Å—Ç–∏–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ **{giveaway['prize']}**",
                        color="RED"
                    )
                    await user.send(embed=embed)
                except discord.Forbidden:
                    pass

    @tasks.loop(seconds=30)
    async def check_giveaways(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏"""
        try:
            now = datetime.utcnow()
            
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏
            expired_giveaways = await self.db.fetch_all(
                """
                SELECT channel_id, message_id 
                FROM giveaways 
                WHERE end_time <= ? AND is_ended = 0
                """,
                now.strftime("%Y-%m-%d %H:%M:%S")
            )
            
            if not expired_giveaways:
                return
                
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π
            await self.db.execute(
                """
                UPDATE giveaways 
                SET is_ended = 1 
                WHERE end_time <= ? AND is_ended = 0
                """,
                now.strftime("%Y-%m-%d %H:%M:%S")
            )
            
            # –ó–∞–≤–µ—Ä—à–∞–µ–º –∫–∞–∂–¥—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à
            for giveaway in expired_giveaways:
                try:
                    channel = self.bot.get_channel(int(giveaway['channel_id']))
                    if channel:
                        message = await channel.fetch_message(int(giveaway['message_id']))
                        if message:
                            await self.end_giveaway(message)
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∞: {e}")
                    continue
                    
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ check_giveaways: {e}")

    async def end_giveaway(self, message: discord.Message):
        """–ó–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à –∏ –≤—ã–±–∏—Ä–∞–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π"""
        giveaway_data = await self.get_giveaway(message.id)
        if not giveaway_data or giveaway_data['is_ended']:
            return
            
        try:
            participants = giveaway_data['participants']
            winners = []
            
            if participants:
                # –í—ã–±–∏—Ä–∞–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –∏–∑ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
                winner_count = min(giveaway_data['winners_count'], len(participants))
                winner_ids = random.sample(participants, winner_count)
                
                for winner_id in winner_ids:
                    user = self.bot.get_user(winner_id)
                    if user:
                        winners.append(user)
                        try:
                            win_embed=Embed(
                                title="üéä –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!",
                                description=f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ **{giveaway_data['prize']}**!\n"
                                          f"–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –ø—Ä–∏–∑–∞.",
                                color="GOLD"
                            )
                            await user.send(embed=win_embed)
                        except discord.Forbidden:
                            pass

                winners_text = "\n".join([f"üèÜ {winner.mention}" for winner in winners])
                
                embed=Embed(
                    title=f"üéâ {giveaway_data['prize']}",
                    description=f"**–†–æ–∑—ã–≥—Ä—ã—à –∑–∞–≤–µ—Ä—à–µ–Ω!**\n\n"
                               f"**–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏:**\n{winners_text}\n\n"
                               f"**–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä:** <@{giveaway_data['host_id']}>",
                    color="GREEN"
                )
            else:
                # –ï—Å–ª–∏ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, —É–¥–∞–ª—è–µ–º –≤—Å–µ —Ä–µ–∞–∫—Ü–∏–∏
                await message.clear_reactions()
                
                embed=Embed(
                    title=f"üéâ {giveaway_data['prize']}",
                    description="**–†–æ–∑—ã–≥—Ä—ã—à –∑–∞–≤–µ—Ä—à–µ–Ω!**\n\n"
                               "–ü–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –Ω–µ—Ç - –Ω–∏–∫—Ç–æ –Ω–µ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª üò¢",
                    color="RED"
                )
            
            await message.edit(embed=embed)
            
            if winners:
                winners_mentions = ", ".join([w.mention for w in winners])
                await message.channel.send(
                    embed=Embed(
                        title="üéä –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π!",
                        description=f"**–ü—Ä–∏–∑:** {giveaway_data['prize']}\n"
                                  f"**–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏:** {winners_mentions}",
                        color="GOLD"
                    )
                )
            
            # –£–≤–µ–¥–æ–º–ª—è–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞
            host = self.bot.get_user(int(giveaway_data['host_id']))
            if host:
                try:
                    host_embed=Embed(
                        title="üéâ –†–æ–∑—ã–≥—Ä—ã—à –∑–∞–≤–µ—Ä—à–µ–Ω",
                        description=f"–í–∞—à —Ä–æ–∑—ã–≥—Ä—ã—à **{giveaway_data['prize']}** –∑–∞–≤–µ—Ä—à–µ–Ω!\n"
                                  f"–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏: {winners_mentions if winners else '–Ω–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π'}",
                        color="BLUE"
                    )
                    await host.send(embed=host_embed)
                except discord.Forbidden:
                    pass
            
            await self.db.execute(
                "UPDATE giveaways SET is_ended = 1 WHERE message_id = ?",
                (str(message.id),)
            )
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∞: {e}")

    async def create_giveaway(
        self,
        ctx: discord.Interaction,
        prize: str,
        winners: int,
        duration: str,
        channel: Optional[discord.TextChannel] = None
    ) -> Optional[discord.Message]:
        """–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à"""
        channel = channel or ctx.channel
        
        # –ü–∞—Ä—Å–∏–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        duration_seconds = 0
        time_units = {
            'd': 86400,
            'h': 3600,
            'm': 60,
            's': 1
        }
        
        try:
            value = int(duration[:-1])
            unit = duration[-1].lower()
            if unit not in time_units:
                raise ValueError
            duration_seconds = value * time_units[unit]
        except ValueError:
            await ctx.response.send_message(
                embed=Embed(
                    description=f"{Emojis.ERROR} –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: 1d, 12h, 30m, 10s",
                    color="RED"
                ),
                ephemeral=True
            )
            return None

        end_time = datetime.now() + timedelta(seconds=duration_seconds)
        
        embed=Embed(
            title=f"üéâ {prize}",
            description=f"–ù–∞–∂–º–∏—Ç–µ –Ω–∞ üéâ —á—Ç–æ–±—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å!\n\n"
                       f"**–ü—Ä–∏–∑–æ–≤—ã—Ö –º–µ—Å—Ç:** {winners}\n"
                       f"**–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä:** {ctx.user.mention}\n"
                       f"**–ó–∞–≤–µ—Ä—à–∏—Ç—Å—è:** <t:{int(end_time.timestamp())}:R>"
        )
        
        giveaway_message = await channel.send(embed=embed)
        await giveaway_message.add_reaction("üéâ")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await self.db.execute(
            """
            INSERT INTO giveaways 
            (channel_id, message_id, guild_id, host_id, prize, winners_count, end_time)
            VALUES (?, ?, ?, ?, ?, ?, ?)
            """,
            (
                str(channel.id),
                str(giveaway_message.id),
                str(ctx.guild_id),
                str(ctx.user.id),
                prize,
                winners,
                end_time.isoformat()
            )
        )
        
        self.active_giveaways[giveaway_message.id] = {
            'end_time': end_time,
            'message': giveaway_message
        }
        
        await ctx.response.send_message(
            embed=Embed(
                description=f"{Emojis.SUCCESS} –†–æ–∑—ã–≥—Ä—ã—à —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –≤ {channel.mention}!"
            ),
            ephemeral=True
        )
        
        return giveaway_message

    giveaway = app_commands.Group(name="giveaway", description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞–º–∏")

    @giveaway.command(name="create", description="–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à")
    @app_commands.describe(
        prize="–ß—Ç–æ —Ä–∞–∑—ã–≥—Ä—ã–≤–∞–µ–º",
        winners="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π",
        duration="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1d, 12h, 30m)",
        channel="–ö–∞–Ω–∞–ª –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - —Ç–µ–∫—É—â–∏–π)"
    )
    @app_commands.checks.has_permissions(manage_guild=True)
    async def giveaway_create(
        self,
        interaction: discord.Interaction,
        prize: str,
        winners: int,
        duration: str,
        channel: Optional[discord.TextChannel] = None
    ):
        await self.create_giveaway(interaction, prize, winners, duration, channel)

    @giveaway.command(name="end", description="–î–æ—Å—Ä–æ—á–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à")
    @app_commands.describe(message_id="ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–æ–∑—ã–≥—Ä—ã—à–µ–º")
    @app_commands.checks.has_permissions(manage_guild=True)
    async def giveaway_end(self, interaction: discord.Interaction, message_id: str):
        try:
            message_id = int(message_id)
            giveaway = await self.get_giveaway(message_id)
            
            if not giveaway:
                await interaction.response.send_message(
                    embed=Embed(
                        description=f"{Emojis.ERROR} –†–æ–∑—ã–≥—Ä—ã—à –Ω–µ –Ω–∞–π–¥–µ–Ω!",
                        color="RED"
                    ),
                    ephemeral=True
                )
                return
                
            if giveaway['is_ended']:
                await interaction.response.send_message(
                    embed=Embed(
                        description=f"{Emojis.ERROR} –≠—Ç–æ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω!",
                        color="RED"
                    ),
                    ephemeral=True
                )
                return
                
            channel = self.bot.get_channel(int(giveaway['channel_id']))
            if not channel:
                await interaction.response.send_message(
                    embed=Embed(
                        description=f"{Emojis.ERROR} –ö–∞–Ω–∞–ª —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!",
                        color="RED"
                    ),
                    ephemeral=True
                )
                return
                
            message = await channel.fetch_message(message_id)
            if not message:
                await interaction.response.send_message(
                    embed=Embed(
                        description=f"{Emojis.ERROR} –°–æ–æ–±—â–µ–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!",
                        color="RED"
                    ),
                    ephemeral=True
                )
                return
                
            await self.end_giveaway(message)
            
            await interaction.response.send_message(
                embed=Embed(
                    description=f"{Emojis.SUCCESS} –†–æ–∑—ã–≥—Ä—ã—à —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!",
                    color="GREEN"
                ),
                ephemeral=True
            )
            
        except ValueError:
            await interaction.response.send_message(
                embed=Embed(
                    description=f"{Emojis.ERROR} –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID —Å–æ–æ–±—â–µ–Ω–∏—è!",
                    color="RED"
                ),
                ephemeral=True
            )
        except Exception as e:
            await interaction.response.send_message(
                embed=Embed(
                    description=f"{Emojis.ERROR} –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}",
                    color="RED"
                ),
                ephemeral=True
            )

    @giveaway.command(name="reroll", description="–í—ã–±—Ä–∞—Ç—å –Ω–æ–≤—ã—Ö –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π")
    @app_commands.describe(message_id="ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–æ–∑—ã–≥—Ä—ã—à–µ–º")
    @app_commands.checks.has_permissions(manage_guild=True)
    async def giveaway_reroll(self, interaction: discord.Interaction, message_id: str):
        try:
            message_id = int(message_id)
            giveaway = await self.get_giveaway(message_id)
            
            if not giveaway:
                await interaction.response.send_message(
                    embed=Embed(
                        description=f"{Emojis.ERROR} –†–æ–∑—ã–≥—Ä—ã—à –Ω–µ –Ω–∞–π–¥–µ–Ω!",
                        color="RED"
                    ),
                    ephemeral=True
                )
                return
                
            if not giveaway['is_ended']:
                await interaction.response.send_message(
                    embed=Embed(
                        description=f"{Emojis.ERROR} –≠—Ç–æ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω!",
                        color="RED"
                    ),
                    ephemeral=True
                )
                return
                
            channel = self.bot.get_channel(int(giveaway['channel_id']))
            if not channel:
                await interaction.response.send_message(
                    embed=Embed(
                        description=f"{Emojis.ERROR} –ö–∞–Ω–∞–ª —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!",
                        color="RED"
                    ),
                    ephemeral=True
                )
                return
                
            message = await channel.fetch_message(message_id)
            if not message:
                await interaction.response.send_message(
                    embed=Embed(
                        description=f"{Emojis.ERROR} –°–æ–æ–±—â–µ–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!",
                        color="RED"
                    ),
                    ephemeral=True
                )
                return
                
            participants = giveaway['participants']
            if not participants:
                await interaction.response.send_message(
                    embed=Embed(
                        description=f"{Emojis.ERROR} –í —Ä–æ–∑—ã–≥—Ä—ã—à–µ –Ω–µ –±—ã–ª–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!",
                        color="RED"
                    ),
                    ephemeral=True
                )
                return
                
            # –í—ã–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã—Ö –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π
            winner_count = min(giveaway['winners_count'], len(participants))
            winner_ids = random.sample(participants, winner_count)
            winners = []
            
            for winner_id in winner_ids:
                user = self.bot.get_user(winner_id)
                if user:
                    winners.append(user)
                    try:
                        win_embed=Embed(
                            title="üéä –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!",
                            description=f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –≤ –ø–µ—Ä–µ—Ä–æ–∑—ã–≥—Ä—ã—à–µ **{giveaway['prize']}**!\n"
                                      f"–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –ø—Ä–∏–∑–∞.",
                            color="GOLD"
                        )
                        await user.send(embed=win_embed)
                    except discord.Forbidden:
                        pass
            
            if winners:
                winners_text = "\n".join([f"üèÜ {winner.mention}" for winner in winners])
                winners_mentions = ", ".join([w.mention for w in winners])
                
                reroll_embed=Embed(
                    title="üé≤ –ü–µ—Ä–µ—Ä–æ–∑—ã–≥—Ä—ã—à",
                    description=f"**–ü—Ä–∏–∑:** {giveaway['prize']}\n"
                               f"**–ù–æ–≤—ã–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª–∏:**\n{winners_text}",
                    color="BLUE"
                )
                
                await message.reply(embed=reroll_embed)
                
                await interaction.response.send_message(
                    embed=Embed(
                        description=f"{Emojis.SUCCESS} –ü–µ—Ä–µ—Ä–æ–∑—ã–≥—Ä—ã—à —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ–¥–µ–Ω!",
                        color="GREEN"
                    ),
                    ephemeral=True
                )
            else:
                await interaction.response.send_message(
                    embed=Embed(
                        description=f"{Emojis.ERROR} –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π!",
                        color="RED"
                    ),
                    ephemeral=True
                )
            
        except ValueError:
            await interaction.response.send_message(
                embed=Embed(
                    description=f"{Emojis.ERROR} –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID —Å–æ–æ–±—â–µ–Ω–∏—è!",
                    color="RED"
                ),
                ephemeral=True
            )
        except Exception as e:
            await interaction.response.send_message(
                embed=Embed(
                    description=f"{Emojis.ERROR} –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}",
                    color="RED"
                ),
                ephemeral=True
            )

async def setup(bot):
    await bot.add_cog(Giveaways(bot)) 