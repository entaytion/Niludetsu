import discord
from discord import app_commands
from discord.ext import commands, tasks
import sqlite3
from datetime import datetime, timedelta
import random
from typing import List, Optional
from utils import create_embed, DB_PATH, initialize_table, TABLES_SCHEMAS, EMOJIS

class Giveaways(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.setup_database()
        self.active_giveaways = {}
        self.check_giveaways.start()
        
    def setup_database(self):
        initialize_table('giveaways', TABLES_SCHEMAS['giveaways'])

    def get_giveaway(self, message_id: int) -> Optional[dict]:
        with sqlite3.connect(DB_PATH) as conn:
            cursor = conn.cursor()
            cursor.execute(
                """
                SELECT giveaway_id, channel_id, message_id, guild_id, host_id, 
                       prize, winners_count, end_time, is_ended, participants
                FROM giveaways WHERE message_id = ?
                """,
                (message_id,)
            )
            result = cursor.fetchone()
            
            if not result:
                return None
                
            return {
                'giveaway_id': result[0],
                'channel_id': result[1],
                'message_id': result[2],
                'guild_id': result[3],
                'host_id': result[4],
                'prize': result[5],
                'winners_count': result[6],
                'end_time': datetime.fromisoformat(result[7]),
                'is_ended': bool(result[8]),
                'participants': eval(result[9])
            }

    def update_participants(self, message_id: int, participants: List[int]):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
        with sqlite3.connect(DB_PATH) as conn:
            cursor = conn.cursor()
            cursor.execute(
                "UPDATE giveaways SET participants = ? WHERE message_id = ?",
                (str(participants), message_id)
            )
            conn.commit()

    @commands.Cog.listener()
    async def on_raw_reaction_add(self, payload: discord.RawReactionActionEvent):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π"""
        if payload.user_id == self.bot.user.id:
            return

        if str(payload.emoji) != "üéâ":
            return

        giveaway = self.get_giveaway(payload.message_id)
        if not giveaway or giveaway['is_ended']:
            return

        channel = self.bot.get_channel(payload.channel_id)
        if not channel:
            return

        try:
            message = await channel.fetch_message(payload.message_id)
            if not message:
                return

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º
            if payload.user_id == giveaway['host_id']:
                # –£–±–∏—Ä–∞–µ–º —Ä–µ–∞–∫—Ü–∏—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞
                await message.remove_reaction("üéâ", payload.member)
                
                try:
                    embed = create_embed(
                        title="‚ùå –û—à–∏–±–∫–∞ —É—á–∞—Å—Ç–∏—è",
                        description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Å–≤–æ–µ–º —Ä–æ–∑—ã–≥—Ä—ã—à–µ!",
                        color=0xe74c3c
                    )
                    await payload.member.send(embed=embed)
                except discord.Forbidden:
                    pass
                return

            participants = giveaway['participants']
            if payload.user_id not in participants:
                participants.append(payload.user_id)
                self.update_participants(payload.message_id, participants)

                user = self.bot.get_user(payload.user_id)
                if user:
                    try:
                        embed = create_embed(
                            title="üéâ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ",
                            description=f"–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ **{giveaway['prize']}**!\n"
                                      f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç –æ–±—ä—è–≤–ª–µ–Ω—ã <t:{int(giveaway['end_time'].timestamp())}:R>",
                            color=0x2ecc71
                        )
                        await user.send(embed=embed)
                    except discord.Forbidden:
                        pass

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–∞–∫—Ü–∏–∏: {e}")

    @commands.Cog.listener()
    async def on_raw_reaction_remove(self, payload: discord.RawReactionActionEvent):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π"""
        if payload.user_id == self.bot.user.id:
            return

        if str(payload.emoji) != "üéâ":
            return

        giveaway = self.get_giveaway(payload.message_id)
        if not giveaway or giveaway['is_ended']:
            return

        participants = giveaway['participants']
        if payload.user_id in participants:
            participants.remove(payload.user_id)
            self.update_participants(payload.message_id, participants)

            user = self.bot.get_user(payload.user_id)
            if user:
                try:
                    embed = create_embed(
                        title="‚ùå –û—Ç–º–µ–Ω–∞ —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ",
                        description=f"–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —É—á–∞—Å—Ç–∏–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ **{giveaway['prize']}**",
                        color=0xe74c3c  # –ö—Ä–∞—Å–Ω—ã–π
                    )
                    await user.send(embed=embed)
                except discord.Forbidden:
                    pass

    @tasks.loop(seconds=5)  # –£–º–µ–Ω—å—à–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ 5 —Å–µ–∫—É–Ω–¥
    async def check_giveaways(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à–∏"""
        now = datetime.now()
        ended_giveaways = []
        
        with sqlite3.connect(DB_PATH) as conn:
            cursor = conn.cursor()
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏
            cursor.execute("""
                SELECT message_id, channel_id, end_time 
                FROM giveaways 
                WHERE is_ended = 0 AND end_time <= ?
            """, (now.isoformat(),))
            
            for row in cursor.fetchall():
                message_id, channel_id, end_time = row
                channel = self.bot.get_channel(channel_id)
                if channel:
                    try:
                        message = await channel.fetch_message(message_id)
                        if message:
                            ended_giveaways.append(message_id)
                            await self.end_giveaway(message)
                    except:
                        continue

        # –£–¥–∞–ª—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏ –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö
        for message_id in ended_giveaways:
            if message_id in self.active_giveaways:
                del self.active_giveaways[message_id]

    async def end_giveaway(self, message: discord.Message):
        """–ó–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à –∏ –≤—ã–±–∏—Ä–∞–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π"""
        giveaway_data = self.get_giveaway(message.id)
        if not giveaway_data or giveaway_data['is_ended']:
            return
            
        try:
            participants = giveaway_data['participants']
            winners = []
            
            if participants:
                # –í—ã–±–∏—Ä–∞–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –∏–∑ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
                winner_count = min(giveaway_data['winners_count'], len(participants))
                winner_ids = random.sample(participants, winner_count)
                
                for winner_id in winner_ids:
                    user = self.bot.get_user(winner_id)
                    if user:
                        winners.append(user)
                        try:
                            win_embed = create_embed(
                                title="üéä –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!",
                                description=f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ **{giveaway_data['prize']}**!\n"
                                          f"–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –ø—Ä–∏–∑–∞.",
                                color=0xf1c40f
                            )
                            await user.send(embed=win_embed)
                        except discord.Forbidden:
                            pass

                winners_text = "\n".join([f"üèÜ {winner.mention}" for winner in winners])
                
                embed = create_embed(
                    title=f"üéâ {giveaway_data['prize']}",
                    description=f"**–†–æ–∑—ã–≥—Ä—ã—à –∑–∞–≤–µ—Ä—à–µ–Ω!**\n\n"
                               f"**–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏:**\n{winners_text}\n\n"
                               f"**–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä:** <@{giveaway_data['host_id']}>",
                    color=0x2ecc71
                )
            else:
                # –ï—Å–ª–∏ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, —É–¥–∞–ª—è–µ–º –≤—Å–µ —Ä–µ–∞–∫—Ü–∏–∏
                await message.clear_reactions()
                
                embed = create_embed(
                    title=f"üéâ {giveaway_data['prize']}",
                    description="**–†–æ–∑—ã–≥—Ä—ã—à –∑–∞–≤–µ—Ä—à–µ–Ω!**\n\n"
                               "–ü–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –Ω–µ—Ç - –Ω–∏–∫—Ç–æ –Ω–µ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª üò¢",
                    color=0xe74c3c
                )
            
            await message.edit(embed=embed)
            
            if winners:
                winners_mentions = ", ".join([w.mention for w in winners])
                await message.channel.send(
                    embed=create_embed(
                        title="üéä –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π!",
                        description=f"**–ü—Ä–∏–∑:** {giveaway_data['prize']}\n"
                                  f"**–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏:** {winners_mentions}",
                        color=0xf1c40f
                    )
                )
            
            # –£–≤–µ–¥–æ–º–ª—è–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞
            host = self.bot.get_user(giveaway_data['host_id'])
            if host:
                try:
                    host_embed = create_embed(
                        title="üéâ –†–æ–∑—ã–≥—Ä—ã—à –∑–∞–≤–µ—Ä—à–µ–Ω",
                        description=f"–í–∞—à —Ä–æ–∑—ã–≥—Ä—ã—à **{giveaway_data['prize']}** –∑–∞–≤–µ—Ä—à–µ–Ω!\n"
                                  f"–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏: {winners_mentions if winners else '–Ω–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π'}",
                        color=0x3498db  # –°–∏–Ω–∏–π
                    )
                    await host.send(embed=host_embed)
                except discord.Forbidden:
                    pass
            
            with sqlite3.connect(DB_PATH) as conn:
                cursor = conn.cursor()
                cursor.execute(
                    "UPDATE giveaways SET is_ended = 1 WHERE message_id = ?",
                    (message.id,)
                )
                conn.commit()
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∞: {e}")

    async def create_giveaway(
        self,
        ctx: discord.Interaction,
        prize: str,
        winners: int,
        duration: str,
        channel: Optional[discord.TextChannel] = None
    ) -> Optional[discord.Message]:
        """–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à"""
        channel = channel or ctx.channel
        
        # –ü–∞—Ä—Å–∏–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        duration_seconds = 0
        time_units = {
            'd': 86400,
            'h': 3600,
            'm': 60,
            's': 1
        }
        
        try:
            value = int(duration[:-1])
            unit = duration[-1].lower()
            if unit not in time_units:
                raise ValueError
            duration_seconds = value * time_units[unit]
        except ValueError:
            await ctx.response.send_message(
                embed=create_embed(
                    description=f"{EMOJIS['ERROR']} –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: 1d, 12h, 30m, 10s",
                    color=0xe74c3c  # –ö—Ä–∞—Å–Ω—ã–π
                ),
                ephemeral=True
            )
            return None

        end_time = datetime.now() + timedelta(seconds=duration_seconds)
        
        embed = create_embed(
            title=f"üéâ {prize}",
            description=f"–ù–∞–∂–º–∏—Ç–µ –Ω–∞ üéâ —á—Ç–æ–±—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å!\n\n"
                       f"**–ü—Ä–∏–∑–æ–≤—ã—Ö –º–µ—Å—Ç:** {winners}\n"
                       f"**–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä:** {ctx.user.mention}\n"
                       f"**–ó–∞–≤–µ—Ä—à–∏—Ç—Å—è:** <t:{int(end_time.timestamp())}:R>"
        )
        
        giveaway_message = await channel.send(embed=embed)
        await giveaway_message.add_reaction("üéâ")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        with sqlite3.connect(DB_PATH) as conn:
            cursor = conn.cursor()
            cursor.execute(
                """
                INSERT INTO giveaways 
                (channel_id, message_id, guild_id, host_id, prize, winners_count, end_time)
                VALUES (?, ?, ?, ?, ?, ?, ?)
                """,
                (
                    channel.id,
                    giveaway_message.id,
                    ctx.guild_id,
                    ctx.user.id,
                    prize,
                    winners,
                    end_time.isoformat()
                )
            )
            conn.commit()
        
        self.active_giveaways[giveaway_message.id] = {
            'end_time': end_time,
            'message': giveaway_message
        }
        
        await ctx.response.send_message(
            embed=create_embed(
                description=f"{EMOJIS['SUCCESS']} –†–æ–∑—ã–≥—Ä—ã—à —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –≤ {channel.mention}!"
            ),
            ephemeral=True
        )
        
        return giveaway_message

    giveaway = app_commands.Group(name="giveaway", description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞–º–∏")

    @giveaway.command(name="create", description="–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à")
    @app_commands.describe(
        prize="–ß—Ç–æ —Ä–∞–∑—ã–≥—Ä—ã–≤–∞–µ–º",
        winners="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π",
        duration="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1d, 12h, 30m)",
        channel="–ö–∞–Ω–∞–ª –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - —Ç–µ–∫—É—â–∏–π)"
    )
    @app_commands.checks.has_permissions(manage_guild=True)
    async def giveaway_create(
        self,
        interaction: discord.Interaction,
        prize: str,
        winners: int,
        duration: str,
        channel: Optional[discord.TextChannel] = None
    ):
        """–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à"""
        await self.create_giveaway(interaction, prize, winners, duration, channel)

    @giveaway.command(name="end", description="–î–æ—Å—Ä–æ—á–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à")
    @app_commands.describe(message_id="ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–æ–∑—ã–≥—Ä—ã—à–µ–º")
    @app_commands.checks.has_permissions(manage_guild=True)
    async def giveaway_end(self, interaction: discord.Interaction, message_id: str):
        """–î–æ—Å—Ä–æ—á–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à"""
        try:
            message_id = int(message_id)
            giveaway_data = self.get_giveaway(message_id)
            
            if not giveaway_data:
                await interaction.response.send_message(
                    embed=create_embed(
                        description=f"{EMOJIS['ERROR']} –†–æ–∑—ã–≥—Ä—ã—à –Ω–µ –Ω–∞–π–¥–µ–Ω!",
                        color=0xe74c3c  # –ö—Ä–∞—Å–Ω—ã–π
                    ),
                    ephemeral=True
                )
                return
                
            if giveaway_data['is_ended']:
                await interaction.response.send_message(
                    embed=create_embed(
                        description=f"{EMOJIS['ERROR']} –≠—Ç–æ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω!",
                        color=0xe74c3c  # –ö—Ä–∞—Å–Ω—ã–π
                    ),
                    ephemeral=True
                )
                return
                
            channel = interaction.guild.get_channel(giveaway_data['channel_id'])
            if not channel:
                await interaction.response.send_message(
                    embed=create_embed(
                        description=f"{EMOJIS['ERROR']} –ö–∞–Ω–∞–ª —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!",
                        color=0xe74c3c  # –ö—Ä–∞—Å–Ω—ã–π
                    ),
                    ephemeral=True
                )
                return
                
            message = await channel.fetch_message(message_id)
            if not message:
                await interaction.response.send_message(
                    embed=create_embed(
                        description=f"{EMOJIS['ERROR']} –°–æ–æ–±—â–µ–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!",
                        color=0xe74c3c  # –ö—Ä–∞—Å–Ω—ã–π
                    ),
                    ephemeral=True
                )
                return
                
            await self.end_giveaway(message)
            
            if message_id in self.active_giveaways:
                del self.active_giveaways[message_id]
                
            await interaction.response.send_message(
                embed=create_embed(
                    description=f"{EMOJIS['SUCCESS']} –†–æ–∑—ã–≥—Ä—ã—à —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!"
                ),
                ephemeral=True
            )
            
        except ValueError:
            await interaction.response.send_message(
                embed=create_embed(
                    description=f"{EMOJIS['ERROR']} –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID —Å–æ–æ–±—â–µ–Ω–∏—è!",
                    color=0xe74c3c  # –ö—Ä–∞—Å–Ω—ã–π
                ),
                ephemeral=True
            )
        except Exception as e:
            await interaction.response.send_message(
                embed=create_embed(
                    description=f"{EMOJIS['ERROR']} –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}",
                    color=0xe74c3c  # –ö—Ä–∞—Å–Ω—ã–π
                ),
                ephemeral=True
            )

    @giveaway.command(name="reroll", description="–í—ã–±—Ä–∞—Ç—å –Ω–æ–≤—ã—Ö –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π")
    @app_commands.describe(message_id="ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–æ–∑—ã–≥—Ä—ã—à–µ–º")
    @app_commands.checks.has_permissions(manage_guild=True)
    async def giveaway_reroll(self, interaction: discord.Interaction, message_id: str):
        """–í—ã–±—Ä–∞—Ç—å –Ω–æ–≤—ã—Ö –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π"""
        try:
            message_id = int(message_id)
            giveaway_data = self.get_giveaway(message_id)
            
            if not giveaway_data:
                await interaction.response.send_message(
                    embed=create_embed(
                        description=f"{EMOJIS['ERROR']} –†–æ–∑—ã–≥—Ä—ã—à –Ω–µ –Ω–∞–π–¥–µ–Ω!",
                        color=0xe74c3c  # –ö—Ä–∞—Å–Ω—ã–π
                    ),
                    ephemeral=True
                )
                return
                
            if not giveaway_data['is_ended']:
                await interaction.response.send_message(
                    embed=create_embed(
                        description=f"{EMOJIS['ERROR']} –≠—Ç–æ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω!",
                        color=0xe74c3c  # –ö—Ä–∞—Å–Ω—ã–π
                    ),
                    ephemeral=True
                )
                return
                
            channel = interaction.guild.get_channel(giveaway_data['channel_id'])
            if not channel:
                await interaction.response.send_message(
                    embed=create_embed(
                        description=f"{EMOJIS['ERROR']} –ö–∞–Ω–∞–ª —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!",
                        color=0xe74c3c  # –ö—Ä–∞—Å–Ω—ã–π
                    ),
                    ephemeral=True
                )
                return
                
            message = await channel.fetch_message(message_id)
            if not message:
                await interaction.response.send_message(
                    embed=create_embed(
                        description=f"{EMOJIS['ERROR']} –°–æ–æ–±—â–µ–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!",
                        color=0xe74c3c  # –ö—Ä–∞—Å–Ω—ã–π
                    ),
                    ephemeral=True
                )
                return
                
            reaction = discord.utils.get(message.reactions, emoji="üéâ")
            if not reaction:
                await interaction.response.send_message(
                    embed=create_embed(
                        description=f"{EMOJIS['ERROR']} –†–µ–∞–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!",
                        color=0xe74c3c  # –ö—Ä–∞—Å–Ω—ã–π
                    ),
                    ephemeral=True
                )
                return
                
            users = [user async for user in reaction.users() if not user.bot]
            
            if not users:
                await interaction.response.send_message(
                    embed=create_embed(
                        description=f"{EMOJIS['ERROR']} –ù–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞!",
                        color=0xe74c3c  # –ö—Ä–∞—Å–Ω—ã–π
                    ),
                    ephemeral=True
                )
                return
                
            winner_count = min(giveaway_data['winners_count'], len(users))
            winners = random.sample(users, winner_count)
            winners_text = "\n".join([f"üèÜ {winner.mention}" for winner in winners])
            
            embed = create_embed(
                title=f"üéâ {giveaway_data['prize']} (–ü–æ–≤—Ç–æ—Ä–Ω—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à)",
                description=f"**–ù–æ–≤—ã–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª–∏:**\n{winners_text}\n\n"
                           f"**–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä:** <@{giveaway_data['host_id']}>",
                color=0x2ecc71  # –ó–µ–ª–µ–Ω—ã–π
            )
            
            await message.edit(embed=embed)
            
            winners_mentions = ", ".join([w.mention for w in winners])
            await message.channel.send(
                embed=create_embed(
                    title="üéä –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤—ã—Ö –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π!",
                    description=f"**–ü—Ä–∏–∑:** {giveaway_data['prize']}\n"
                              f"**–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏:** {winners_mentions}",
                    color=0xf1c40f  # –ó–æ–ª–æ—Ç–æ–π
                )
            )
            
            await interaction.response.send_message(
                embed=create_embed(
                    description=f"{EMOJIS['SUCCESS']} –ù–æ–≤—ã–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª–∏ —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–Ω—ã!",
                    color=0x2ecc71  # –ó–µ–ª–µ–Ω—ã–π
                ),
                ephemeral=True
            )
            
        except ValueError:
            await interaction.response.send_message(
                embed=create_embed(
                    description=f"{EMOJIS['ERROR']} –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID —Å–æ–æ–±—â–µ–Ω–∏—è!",
                    color=0xe74c3c  # –ö—Ä–∞—Å–Ω—ã–π
                ),
                ephemeral=True
            )
        except Exception as e:
            await interaction.response.send_message(
                embed=create_embed(
                    description=f"{EMOJIS['ERROR']} –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}",
                    color=0xe74c3c  # –ö—Ä–∞—Å–Ω—ã–π
                ),
                ephemeral=True
            )

async def setup(bot):
    await bot.add_cog(Giveaways(bot)) 