import discord
from discord import app_commands
from discord.ext import commands
import sqlite3
import os
from datetime import datetime
from utils import create_embed, EMOJIS

class Bio(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.db_path = "config/database.db"
        self.setup_database()

    def setup_database(self):
        os.makedirs(os.path.dirname(self.db_path), exist_ok=True)
        with sqlite3.connect(self.db_path) as db:
            cursor = db.cursor()
            cursor.execute("""
                CREATE TABLE IF NOT EXISTS user_profiles (
                    user_id INTEGER PRIMARY KEY,
                    name TEXT,
                    age INTEGER,
                    country TEXT,
                    bio TEXT
                )
            """)
            db.commit()

    bio_group = app_commands.Group(name="bio", description="–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–º")

    @bio_group.command(name="set", description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è")
    @app_commands.describe(
        name="–í–∞—à–µ –∏–º—è (–º–∞–∫—Å. 32 —Å–∏–º–≤–æ–ª–∞)",
        age="–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç (13-99)",
        country="–°—Ç—Ä–∞–Ω–∞ (–º–∞–∫—Å. 32 —Å–∏–º–≤–æ–ª–∞)",
        bio="–í–∞—à–∞ –±–∏–æ–≥—Ä–∞—Ñ–∏—è (–º–∞–∫—Å. 1000 —Å–∏–º–≤–æ–ª–æ–≤)"
    )
    async def bio_set(self, interaction: discord.Interaction, name: str = None, age: int = None, country: str = None, bio: str = None):
        if not any([name, age, country, bio]):
            await interaction.response.send_message(
                embed=create_embed(description=f"{EMOJIS['ERROR']} –£–∫–∞–∂–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è!"),
                ephemeral=True
            )
            return

        if name and len(name) > 32:
            await interaction.response.send_message(
                embed=create_embed(description=f"{EMOJIS['ERROR']} –ò–º—è –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 32 —Å–∏–º–≤–æ–ª–∞!"),
                ephemeral=True
            )
            return

        if age and (age < 13 or age > 99):
            await interaction.response.send_message(
                embed=create_embed(description=f"{EMOJIS['ERROR']} –í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 13 –¥–æ 99 –ª–µ—Ç!"),
                ephemeral=True
            )
            return

        if country and len(country) > 32:
            await interaction.response.send_message(
                embed=create_embed(description=f"{EMOJIS['ERROR']} –ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 32 —Å–∏–º–≤–æ–ª–∞!"),
                ephemeral=True
            )
            return

        if bio and len(bio) > 1000:
            await interaction.response.send_message(
                embed=create_embed(description=f"{EMOJIS['ERROR']} –ë–∏–æ–≥—Ä–∞—Ñ–∏—è –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å 1000 —Å–∏–º–≤–æ–ª–æ–≤!"),
                ephemeral=True
            )
            return

        try:
            with sqlite3.connect(self.db_path) as db:
                cursor = db.cursor()
                cursor.execute(
                    """
                    INSERT OR REPLACE INTO user_profiles 
                    (user_id, name, age, country, bio) 
                    VALUES (?, ?, ?, ?, ?)
                    """,
                    (interaction.user.id, name, age, country, bio or "")
                )
                db.commit()

            embed = create_embed(
                title="‚úèÔ∏è –ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω",
                description=f"{EMOJIS['SUCCESS']} –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω!",
                fields=[
                    {"name": "–ò–º—è:", "value": name, "inline": True},
                    {"name": "–í–æ–∑—Ä–∞—Å—Ç:", "value": f"{age} –ª–µ—Ç", "inline": True},
                    {"name": "–°—Ç—Ä–∞–Ω–∞:", "value": country, "inline": True}
                ]
            )
            
            if bio:
                embed.add_field(name="–û —Å–µ–±–µ:", value=f"```{bio}```", inline=False)
            
            await interaction.response.send_message(embed=embed)

        except Exception as e:
            await interaction.response.send_message(
                embed=create_embed(
                    description=f"{EMOJIS['ERROR']} –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è: {str(e)}"
                ),
                ephemeral=True
            )

    @bio_group.command(name="view", description="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    @app_commands.describe(user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —á–µ–π –ø—Ä–æ—Ñ–∏–ª—å –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å")
    async def bio_view(self, interaction: discord.Interaction, user: discord.User = None):
        target_user = user or interaction.user

        try:
            with sqlite3.connect(self.db_path) as db:
                cursor = db.cursor()
                cursor.execute(
                    """
                    SELECT name, age, country, bio
                    FROM user_profiles
                    WHERE user_id = ?
                    """,
                    (target_user.id,)
                )
                result = cursor.fetchone()

            if not result:
                if target_user == interaction.user:
                    message = f"{EMOJIS['ERROR']} –£ –≤–∞—Å –µ—â—ë –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/bio set`, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –µ–≥–æ!"
                else:
                    message = f"{EMOJIS['ERROR']} –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_user.mention} –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è."
                
                await interaction.response.send_message(embed=create_embed(description=message))
                return

            name, age, country, bio = result

            fields = []
            if name:
                fields.append({"name": "–ò–º—è:", "value": name, "inline": True})
            if age:
                fields.append({"name": "–í–æ–∑—Ä–∞—Å—Ç:", "value": f"{age} –ª–µ—Ç", "inline": True})
            if country:
                fields.append({"name": "–°—Ç—Ä–∞–Ω–∞:", "value": country, "inline": True})
            if bio:
                fields.append({"name": "–û —Å–µ–±–µ:", "value": bio, "inline": False})

            embed = create_embed(
                title=f"üë§ –ü—Ä–æ—Ñ–∏–ª—å {target_user.name}",
                fields=fields,
                thumbnail_url=target_user.display_avatar.url,
                footer={"text": f"–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {datetime.now().strftime('%d.%m.%Y %H:%M')}"}
            )
            
            await interaction.response.send_message(embed=embed)

        except Exception as e:
            await interaction.response.send_message(
                embed=create_embed(
                    description=f"{EMOJIS['ERROR']} –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è: {str(e)}"
                ),
                ephemeral=True
            )

    @bio_group.command(name="clear", description="–£–¥–∞–ª–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
    async def bio_clear(self, interaction: discord.Interaction):
        try:
            with sqlite3.connect(self.db_path) as db:
                cursor = db.cursor()
                cursor.execute(
                    "DELETE FROM user_profiles WHERE user_id = ?",
                    (interaction.user.id,)
                )
                db.commit()

            await interaction.response.send_message(
                embed=create_embed(
                    description=f"{EMOJIS['SUCCESS']} –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!"
                )
            )

        except Exception as e:
            await interaction.response.send_message(
                embed=create_embed(
                    description=f"{EMOJIS['ERROR']} –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è: {str(e)}"
                ),
                ephemeral=True
            )

async def setup(bot):
    await bot.add_cog(Bio(bot)) 