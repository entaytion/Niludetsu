import discord
from discord.ext import commands
from discord import app_commands
from discord.ui import Modal, TextInput, View, Button
import json
from utils import create_embed, EMOJIS

class IdeaButton(View):
    def __init__(self, cog):
        super().__init__(timeout=None)
        self.cog = cog
        
    @discord.ui.button(label="–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é", style=discord.ButtonStyle.green, emoji="üí°", custom_id="submit_idea")
    async def submit_idea(self, interaction: discord.Interaction, button: Button):
        modal = IdeaModal()
        await interaction.response.send_modal(modal)

class IdeaModal(Modal, title="üí° –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é"):
    title = TextInput(
        label="–ù–∞–∑–≤–∞–Ω–∏–µ –∏–¥–µ–∏",
        placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–π –∏–¥–µ–∏",
        style=discord.TextStyle.short,
        required=True,
        max_length=100
    )
    
    description = TextInput(
        label="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
        placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –∏–¥–µ—é –ø–æ–¥—Ä–æ–±–Ω–æ",
        style=discord.TextStyle.paragraph,
        required=True
    )
    
    benefits = TextInput(
        label="–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞",
        placeholder="–ö–∞–∫–∏–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥–∞—Å—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤–∞—à–µ–π –∏–¥–µ–∏?",
        style=discord.TextStyle.paragraph,
        required=True
    )

    async def on_submit(self, interaction: discord.Interaction):
        ideas_cog = interaction.client.get_cog("Ideas")
        if ideas_cog:
            await ideas_cog.handle_idea_submit(interaction, self)

class IdeaView(View):
    def __init__(self):
        super().__init__(timeout=None)
        
    @discord.ui.button(label="–ü—Ä–∏–Ω—è—Ç—å", style=discord.ButtonStyle.green, emoji="‚úÖ", custom_id="accept_idea")
    async def accept(self, interaction: discord.Interaction, button: Button):
        embed = interaction.message.embeds[0]
        embed.color = 0x57F287  # –ó–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç –≤ HEX
        embed.title = "‚úÖ –ò–¥–µ—è –ø—Ä–∏–Ω—è—Ç–∞"
            
        # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ñ—É—Ç–µ—Ä–∞
        user_id = int(embed.footer.text.split(": ")[1])
        user = interaction.client.get_user(user_id)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if user:
            try:
                await user.send("‚úÖ –í–∞—à–∞ –∏–¥–µ—è –±—ã–ª–∞ **–ø—Ä–∏–Ω—è—Ç–∞**!")
            except:
                pass
        
        for item in self.children:
            item.disabled = True
            
        await interaction.message.edit(embed=embed, view=self)
        await interaction.response.send_message("‚úÖ –ò–¥–µ—è –æ—Ç–º–µ—á–µ–Ω–∞ –∫–∞–∫ –ø—Ä–∏–Ω—è—Ç–∞—è", ephemeral=True)
        
    @discord.ui.button(label="–û—Ç–∫–ª–æ–Ω–∏—Ç—å", style=discord.ButtonStyle.red, emoji="‚ùå", custom_id="reject_idea")
    async def reject(self, interaction: discord.Interaction, button: Button):
        embed = interaction.message.embeds[0]
        embed.color = 0xED4245  # –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç –≤ HEX
        embed.title = "‚ùå –ò–¥–µ—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞"
            
        # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ñ—É—Ç–µ—Ä–∞
        user_id = int(embed.footer.text.split(": ")[1])
        user = interaction.client.get_user(user_id)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if user:
            try:
                await user.send("‚ùå –í–∞—à–∞ –∏–¥–µ—è –±—ã–ª–∞ **–æ—Ç–∫–ª–æ–Ω–µ–Ω–∞**.")
            except:
                pass
        
        for item in self.children:
            item.disabled = True
            
        await interaction.message.edit(embed=embed, view=self)
        await interaction.response.send_message("‚ùå –ò–¥–µ—è –æ—Ç–º–µ—á–µ–Ω–∞ –∫–∞–∫ –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω–∞—è", ephemeral=True)

class Ideas(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        with open('config/config.json', 'r') as f:
            self.config = json.load(f)
        bot.loop.create_task(self.setup_ideas_view())

    async def setup_ideas_view(self):
        await self.bot.wait_until_ready()
        if 'IDEAS_CHANNEL_ID' in self.config and 'IDEAS_MESSAGE_ID' in self.config:
            try:
                channel = self.bot.get_channel(int(self.config['IDEAS_CHANNEL_ID']))
                if channel:
                    try:
                        message = await channel.fetch_message(int(self.config['IDEAS_MESSAGE_ID']))
                        await message.edit(view=IdeaButton(self))
                        print(f"‚úÖ –ü–∞–Ω–µ–ª—å –∏–¥–µ–π –∑–∞–≥—Ä—É–∂–µ–Ω–∞: {channel.name} ({channel.id})")
                    except discord.NotFound:
                        print("‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞–Ω–µ–ª—å—é –∏–¥–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
                else:
                    print("‚ùå –ö–∞–Ω–∞–ª –¥–ª—è –∏–¥–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–∞–Ω–µ–ª–∏ –∏–¥–µ–π: {e}")

    @app_commands.command(name="ideas", description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –∏–¥–µ–π")
    @app_commands.describe(channel="ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –∏–¥–µ–π")
    @commands.has_permissions(administrator=True)
    async def ideas(self, interaction: discord.Interaction, channel: str):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∏–¥–µ–π"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–Ω–∞–ª
            try:
                channel_id = int(channel)
                ideas_channel = interaction.guild.get_channel(channel_id)
                
                if not ideas_channel:
                    await interaction.response.send_message("‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!", ephemeral=True)
                    return
                    
                if not isinstance(ideas_channel, discord.TextChannel):
                    await interaction.response.send_message("‚ùå –≠—Ç–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª!", ephemeral=True)
                    return
                    
            except ValueError:
                await interaction.response.send_message("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –∫–∞–Ω–∞–ª–∞!", ephemeral=True)
                return

            # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–∞–Ω–∞–ª–∞ –∏–¥–µ–π
            ideas_embed = create_embed(
                title="üí° –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é",
                description=(
                    "**–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –∏–¥–µ—è–º–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞!**\n\n"
                    "‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç–µ –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\n"
                    "‚Ä¢ –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–º–∏ –∏–¥–µ—è–º–∏\n"
                    "‚Ä¢ –ü–æ–º–æ–≥–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å–µ—Ä–≤–µ—Ä –ª—É—á—à–µ\n\n"
                    "**–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é!**"
                )
            )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
            ideas_message = await ideas_channel.send(embed=ideas_embed, view=IdeaButton(self))
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –≤ –∫–æ–Ω—Ñ–∏–≥
            self.config['IDEAS_CHANNEL_ID'] = str(ideas_channel.id)
            self.config['IDEAS_MESSAGE_ID'] = str(ideas_message.id)
            
            with open('config/config.json', 'w') as f:
                json.dump(self.config, f, indent=4)

            await interaction.response.send_message(
                f"‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏–¥–µ–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –≤ –∫–∞–Ω–∞–ª–µ {ideas_channel.mention}", 
                ephemeral=True
            )

        except Exception as e:
            await interaction.response.send_message(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

    async def handle_idea_submit(self, interaction: discord.Interaction, modal: IdeaModal):
        if 'IDEAS_CHANNEL_ID' not in self.config:
            await interaction.response.send_message("‚ùå –ö–∞–Ω–∞–ª –¥–ª—è –∏–¥–µ–π –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!", ephemeral=True)
            return

        channel_id = int(self.config['IDEAS_CHANNEL_ID'])
        channel = self.bot.get_channel(channel_id)
        
        if not channel:
            await interaction.response.send_message("‚ùå –ö–∞–Ω–∞–ª –¥–ª—è –∏–¥–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω!", ephemeral=True)
            return

        embed = create_embed(
            title=f"üí° –ù–æ–≤–∞—è –∏–¥–µ—è:",
            description=f"{EMOJIS['DOT']} **–ê–≤—Ç–æ—Ä:** {interaction.user.mention} (`{interaction.user.id}`)\n\n"
                       f"{EMOJIS['DOT']} **–û–ø–∏—Å–∞–Ω–∏–µ:**\n```\n{modal.description}```\n"
                       f"{EMOJIS['DOT']} **–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**\n```\n{modal.benefits}```",
            footer={"text": f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {interaction.user.id}"}
        )

        if interaction.user.avatar:
            embed.set_thumbnail(url=interaction.user.avatar.url)

        view = IdeaView()
        await channel.send(embed=embed, view=view)
        
        await interaction.response.send_message(
            "‚úÖ –í–∞—à–∞ –∏–¥–µ—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ü–µ—Ä—Å–æ–Ω–∞–ª —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç –µ—ë –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.", 
            ephemeral=True
        )

async def setup(bot):
    await bot.add_cog(Ideas(bot)) 