import discord
from discord.ext import commands
from discord import app_commands
from discord.ui import Modal, TextInput, View, Button
from Niludetsu.utils.embed import Embed
from Niludetsu.utils.constants import Emojis
from Niludetsu.database.db import Database
import asyncio
from typing import Optional

class ReasonModal(Modal):
    def __init__(self, title: str, callback):
        super().__init__(title=title)
        self.callback = callback
        
        self.reason_input = TextInput(
            label="–ü—Ä–∏—á–∏–Ω–∞",
            placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É...",
            style=discord.TextStyle.paragraph,
            required=True,
            max_length=1000
        )
        self.add_item(self.reason_input)
        
    async def on_submit(self, interaction: discord.Interaction):
        await self.callback(interaction, self.reason_input.value)

class TicketButton(View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="–°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç", style=discord.ButtonStyle.primary, emoji="üé´", custom_id="create_ticket")
    async def create(self, interaction: discord.Interaction, button: Button):
        await interaction.response.send_modal(ReasonModal("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞", self.handle_ticket_create))
        
    async def handle_ticket_create(self, interaction: discord.Interaction, reason: str):
        cog = interaction.client.get_cog("Tickets")
        if cog:
            await cog.handle_ticket_create(interaction, reason)

class TicketView(View):
    def __init__(self, user_id: int):
        super().__init__(timeout=None)
        self.user_id = user_id
        
    @discord.ui.button(label="–ó–∞–∫—Ä—ã—Ç—å", style=discord.ButtonStyle.danger, emoji="üîí", custom_id="close_ticket")
    async def close(self, interaction: discord.Interaction, button: Button):
        if not interaction.user.guild_permissions.manage_channels and interaction.user.id != self.user_id:
            return await interaction.response.send_message(
                embed=Embed(
                    title=f"{Emojis.ERROR} –û—à–∏–±–∫–∞",
                    description="–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏–µ —ç—Ç–æ–≥–æ —Ç–∏–∫–µ—Ç–∞",
                    color="RED"
                ),
                ephemeral=True
            )

        await interaction.response.send_modal(ReasonModal("–ó–∞–∫—Ä—ã—Ç–∏–µ —Ç–∏–∫–µ—Ç–∞", self.handle_ticket_close))
        
    async def handle_ticket_close(self, interaction: discord.Interaction, reason: str):
        cog = interaction.client.get_cog("Tickets")
        if cog:
            await cog.handle_ticket_close(interaction, reason)

class Tickets(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.db = Database()
        asyncio.create_task(self._initialize())
        
    async def _initialize(self):
        """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è"""
        await self.bot.wait_until_ready()
        await self.db.init()
        await self.setup_tickets_view()
        
    async def setup_tickets_view(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞–Ω–µ–ª–∏ —Ç–∏–∫–µ—Ç–æ–≤"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            settings = await self.db.fetch_all(
                "SELECT key, value FROM settings WHERE category = 'tickets'"
            )
            
            settings_dict = {row['key']: row['value'] for row in settings}

            channel_id = settings_dict.get('panel_channel')
            message_id = settings_dict.get('panel_message')
            
            if not channel_id:
                return
                
            channel = self.bot.get_channel(int(channel_id))
            if not channel:
                return
                
            # –°–æ–∑–¥–∞–µ–º —ç–º–±–µ–¥
            embed = Embed(
                title="üé´ –°–∏—Å—Ç–µ–º–∞ —Ç–∏–∫–µ—Ç–æ–≤",
                description=(
                    "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç.\n\n"
                    f"{Emojis.DOT} –í —Ç–∏–∫–µ—Ç–µ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É\n"
                    f"{Emojis.DOT} –î–æ–∂–¥–∏—Ç–µ—Å—å –æ—Ç–≤–µ—Ç–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞\n"
                    f"{Emojis.DOT} –ù–µ —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–∏–∫–µ—Ç–æ–≤\n"
                    f"{Emojis.DOT} –ù–µ —Å–ø–∞–º—å—Ç–µ –≤ —Ç–∏–∫–µ—Ç–∞—Ö"
                ),
                color="BLUE"
            )
            
            if message_id:
                try:
                    message = await channel.fetch_message(int(message_id))
                    await message.edit(embed=embed, view=TicketButton())
                    return
                except Exception as e:
                    print(f"Error editing message: {e}")
                    pass
                    
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            message = await channel.send(embed=embed, view=TicketButton())
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è
            await self.db.execute(
                """
                INSERT OR REPLACE INTO settings (category, key, value)
                VALUES ('tickets', 'panel_message', ?)
                """,
                str(message.id)
            )
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø–∞–Ω–µ–ª–∏ —Ç–∏–∫–µ—Ç–æ–≤: {e}")
            
    async def handle_ticket_create(self, interaction: discord.Interaction, reason: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–∞"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç—ã–π —Ç–∏–∫–µ—Ç
            existing_ticket = await self.db.fetch_one(
                """
                SELECT channel_id FROM tickets 
                WHERE user_id = ? AND guild_id = ? AND status = 'open'
                """,
                str(interaction.user.id), str(interaction.guild.id)
            )
            
            if existing_ticket:
                channel = interaction.guild.get_channel(int(existing_ticket['channel_id']))
                if channel:
                    return await interaction.response.send_message(
                        embed=Embed(
                            title=f"{Emojis.ERROR} –û—à–∏–±–∫–∞",
                            description=f"–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–π —Ç–∏–∫–µ—Ç: {channel.mention}",
                            color="RED"
                        ),
                        ephemeral=True
                    )

            # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —Ç–∏–∫–µ—Ç–æ–≤
            category_id = await self.db.fetch_one(
                "SELECT value FROM settings WHERE category = 'tickets' AND key = 'category'"
            )
            
            if not category_id:
                return await interaction.response.send_message(
                    embed=Embed(
                        title=f"{Emojis.ERROR} –û—à–∏–±–∫–∞",
                        description="–ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–ª—è —Ç–∏–∫–µ—Ç–æ–≤ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞",
                        color="RED"
                    ),
                    ephemeral=True
                )
                
            category = interaction.guild.get_channel(int(category_id['value']))
            if not category:
                return await interaction.response.send_message(
                    embed=Embed(
                        title=f"{Emojis.ERROR} –û—à–∏–±–∫–∞",
                        description="–ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–ª—è —Ç–∏–∫–µ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
                        color="RED"
                    ),
                    ephemeral=True
                )

            # –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª
            overwrites = {
                interaction.guild.default_role: discord.PermissionOverwrite(read_messages=False),
                interaction.user: discord.PermissionOverwrite(
                    read_messages=True,
                    send_messages=True,
                    attach_files=True,
                    embed_links=True,
                    read_message_history=True
                )
            }
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
            mod_role_id = await self.db.fetch_one(
                "SELECT value FROM settings WHERE category = 'tickets' AND key = 'mod_role'"
            )
            
            if mod_role_id:
                mod_role = interaction.guild.get_role(int(mod_role_id['value']))
                if mod_role:
                    overwrites[mod_role] = discord.PermissionOverwrite(
                        read_messages=True,
                        send_messages=True,
                        attach_files=True,
                        embed_links=True,
                        read_message_history=True,
                        manage_messages=True
                    )
                    
            channel = await interaction.guild.create_text_channel(
                name=f"ticket-{interaction.user.name}",
                category=category,
                overwrites=overwrites,
                topic=f"–¢–∏–∫–µ—Ç —Å–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user}"
            )
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–∫–µ—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            await self.db.execute(
                """
                INSERT INTO tickets (channel_id, user_id, guild_id, reason, status)
                VALUES (?, ?, ?, ?, 'open')
                """,
                str(channel.id), str(interaction.user.id), str(interaction.guild.id), reason
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª —Ç–∏–∫–µ—Ç–∞
            embed = Embed(
                title="üé´ –ù–æ–≤—ã–π —Ç–∏–∫–µ—Ç",
                description=(
                    f"{Emojis.DOT} **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {interaction.user.mention}\n"
                    f"{Emojis.DOT} **–ü—Ä–∏—á–∏–Ω–∞:** {reason}\n\n"
                    "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã —Å–∫–æ—Ä–æ –æ—Ç–≤–µ—Ç—è—Ç –Ω–∞ –≤–∞—à —Ç–∏–∫–µ—Ç.\n"
                    "–î–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ."
                ),
                color="BLUE"
            )
            
            await channel.send(
                content=f"{interaction.user.mention}",
                embed=embed,
                view=TicketView(interaction.user.id)
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            await interaction.response.send_message(
                embed=Embed(
                    title=f"{Emojis.SUCCESS} –¢–∏–∫–µ—Ç —Å–æ–∑–¥–∞–Ω",
                    description=f"–í–∞—à —Ç–∏–∫–µ—Ç: {channel.mention}",
                    color="GREEN"
                ),
                ephemeral=True
            )
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∏–∫–µ—Ç–∞: {e}")
            try:
                await interaction.response.send_message(
                    embed=Embed(
                        title=f"{Emojis.ERROR} –û—à–∏–±–∫–∞",
                        description="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∏–∫–µ—Ç–∞",
                        color="RED"
                    ),
                    ephemeral=True
                )
            except discord.HTTPException:
                pass
            
    async def handle_ticket_close(self, interaction: discord.Interaction, reason: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∏–∫–µ—Ç–µ
            ticket = await self.db.fetch_one(
                """
                SELECT user_id FROM tickets 
                WHERE channel_id = ? AND guild_id = ? AND status = 'open'
                """,
                str(interaction.channel.id), str(interaction.guild.id)
            )
            
            if not ticket:
                return await interaction.response.send_message(
                    embed=Embed(
                        title=f"{Emojis.ERROR} –û—à–∏–±–∫–∞",
                        description="–≠—Ç–æ—Ç –∫–∞–Ω–∞–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ç–∏–∫–µ—Ç–æ–º!",
                        color="RED"
                    ),
                    ephemeral=True
                )
                
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ç–∏–∫–µ—Ç–∞
            await self.db.execute(
                """
                UPDATE tickets 
                SET status = 'closed', closed_by = ?, closed_at = CURRENT_TIMESTAMP, close_reason = ?
                WHERE channel_id = ? AND guild_id = ? AND status = 'open'
                """,
                str(interaction.user.id), reason, str(interaction.channel.id), str(interaction.guild.id)
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–∫—Ä—ã—Ç–∏–∏
            embed = Embed(
                title="üîí –¢–∏–∫–µ—Ç –∑–∞–∫—Ä—ã—Ç",
                description=(
                    f"{Emojis.DOT} **–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {interaction.user.mention}\n"
                    f"{Emojis.DOT} **–ü—Ä–∏—á–∏–Ω–∞:** {reason}\n\n"
                    "–ö–∞–Ω–∞–ª –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥."
                ),
                color="RED"
            )
            
            await interaction.response.send_message(embed=embed)
            
            # –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ –∏ —É–¥–∞–ª—è–µ–º –∫–∞–Ω–∞–ª
            await asyncio.sleep(10)
            await interaction.channel.delete()
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Ç–∏–∫–µ—Ç–∞: {e}")
            try:
                await interaction.response.send_message(
                    embed=Embed(
                        title=f"{Emojis.ERROR} –û—à–∏–±–∫–∞",
                        description="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Ç–∏–∫–µ—Ç–∞",
                        color="RED"
                    ),
                    ephemeral=True
                )
            except discord.HTTPException:
                pass
            
    @app_commands.command(name="tickets", description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π —Ç–∏–∫–µ—Ç–æ–≤")
    @app_commands.describe(
        action="–î–µ–π—Å—Ç–≤–∏–µ (create/set)",
        message_id="ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–∞–Ω–µ–ª—å—é —Ç–∏–∫–µ—Ç–æ–≤",
        tickets_channel="ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ø–∞–Ω–µ–ª–∏ —Ç–∏–∫–µ—Ç–æ–≤",
        category="ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ç–∏–∫–µ—Ç–æ–≤",
        mod_role="ID —Ä–æ–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ —Ç–∏–∫–µ—Ç–æ–≤"
    )
    @commands.has_permissions(administrator=True)
    async def tickets_command(
        self, 
        interaction: discord.Interaction, 
        action: str,
        message_id: str = None,
        tickets_channel: str = None,
        category: str = None,
        mod_role: str = None
    ):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π —Ç–∏–∫–µ—Ç–æ–≤"""
        if action == "create":
            await self._handle_create_tickets(interaction, message_id, tickets_channel)
        elif action == "set":
            await self._handle_set_tickets(interaction, tickets_channel, category, mod_role)
        else:
            await interaction.response.send_message(
                embed=Embed(
                    title=f"{Emojis.ERROR} –û—à–∏–±–∫–∞",
                    description="–ù–µ–≤–µ—Ä–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ create –∏–ª–∏ set",
                    color="RED"
                ),
                ephemeral=True
            )

    async def _handle_create_tickets(self, interaction: discord.Interaction, message_id: str, tickets_channel: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–Ω–µ–ª–∏ —Ç–∏–∫–µ—Ç–æ–≤"""
        try:
            channel = interaction.guild.get_channel(int(tickets_channel))
            if not channel:
                return await interaction.response.send_message(
                    embed=Embed(
                        title=f"{Emojis.ERROR} –û—à–∏–±–∫–∞",
                        description="–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω",
                        color="RED"
                    ),
                    ephemeral=True
                )
                
            # –°–æ–∑–¥–∞–µ–º —ç–º–±–µ–¥
            embed = Embed(
                title="üé´ –°–∏—Å—Ç–µ–º–∞ —Ç–∏–∫–µ—Ç–æ–≤",
                description=(
                    "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç.\n\n"
                    f"{Emojis.DOT} –í —Ç–∏–∫–µ—Ç–µ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É\n"
                    f"{Emojis.DOT} –î–æ–∂–¥–∏—Ç–µ—Å—å –æ—Ç–≤–µ—Ç–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞\n"
                    f"{Emojis.DOT} –ù–µ —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–∏–∫–µ—Ç–æ–≤\n"
                    f"{Emojis.DOT} –ù–µ —Å–ø–∞–º—å—Ç–µ –≤ —Ç–∏–∫–µ—Ç–∞—Ö"
                ),
                color="BLUE"
            )
            
            # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
            try:
                message = await channel.fetch_message(int(message_id))
                await message.edit(embed=embed, view=TicketButton())
            except discord.NotFound:
                message = await channel.send(embed=embed, view=TicketButton())
                
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∫–∞–Ω–∞–ª–∞ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è
            await self.db.execute(
                """
                INSERT OR REPLACE INTO settings (category, key, value)
                VALUES 
                    ('tickets', 'panel_channel', ?),
                    ('tickets', 'panel_message', ?)
                """,
                str(channel.id), str(message.id)
            )
            
            await interaction.response.send_message(
                embed=Embed(
                    title=f"{Emojis.SUCCESS} –£—Å–ø–µ—à–Ω–æ",
                    description="–ü–∞–Ω–µ–ª—å —Ç–∏–∫–µ—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–∞",
                    color="GREEN"
                ),
                ephemeral=True
            )
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–∞–Ω–µ–ª–∏ —Ç–∏–∫–µ—Ç–æ–≤: {e}")
            try:
                await interaction.response.send_message(
                    embed=Embed(
                        title=f"{Emojis.ERROR} –û—à–∏–±–∫–∞",
                        description="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–∞–Ω–µ–ª–∏ —Ç–∏–∫–µ—Ç–æ–≤",
                        color="RED"
                    ),
                    ephemeral=True
                )
            except discord.HTTPException:
                pass

    async def _handle_set_tickets(self, interaction: discord.Interaction, tickets_channel: str = None, category: str = None, mod_role: str = None):
        try:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            if tickets_channel:
                await self.db.execute(
                    """
                    INSERT OR REPLACE INTO settings (category, key, value)
                    VALUES ('tickets', 'panel_channel', ?)
                    """,
                    tickets_channel
                )
                
            if category:
                await self.db.execute(
                    """
                    INSERT OR REPLACE INTO settings (category, key, value)
                    VALUES ('tickets', 'category', ?)
                    """,
                    category
                )
                
            if mod_role:
                await self.db.execute(
                    """
                    INSERT OR REPLACE INTO settings (category, key, value)
                    VALUES ('tickets', 'mod_role', ?)
                    """,
                    mod_role
                )
                
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å
            await self.setup_tickets_view()
            
            await interaction.response.send_message(
                embed=Embed(
                    title=f"{Emojis.SUCCESS} –£—Å–ø–µ—à–Ω–æ",
                    description="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∏–∫–µ—Ç–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω—ã",
                    color="GREEN"
                ),
                ephemeral=True
            )
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Ç–∏–∫–µ—Ç–æ–≤: {e}")
            try:
                await interaction.response.send_message(
                    embed=Embed(
                        title=f"{Emojis.ERROR} –û—à–∏–±–∫–∞",
                        description="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Ç–∏–∫–µ—Ç–æ–≤",
                        color="RED"
                    ),
                    ephemeral=True
                )
            except discord.HTTPException:
                pass

async def setup(bot):
    await bot.add_cog(Tickets(bot)) 