import discord
from discord.ext import commands
from discord import app_commands
from Niludetsu.utils.embed import create_embed
from Niludetsu.utils.emojis import EMOJIS
from Niludetsu.api.Currency import CurrencyAPI

class Currency(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.currency_api = CurrencyAPI()

    @app_commands.command(name="currency", description="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å –≤–∞–ª—é—Ç")
    @app_commands.describe(–≤–∞–ª—é—Ç–∞="–ë–∞–∑–æ–≤–∞—è –≤–∞–ª—é—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é USD)")
    async def exchange_rate(self, interaction: discord.Interaction, –≤–∞–ª—é—Ç–∞: str = "USD"):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç"""
        await interaction.response.defer()
        
        base_currency = –≤–∞–ª—é—Ç–∞.upper()
        if not self.currency_api.is_supported_currency(base_currency):
            await interaction.followup.send(
                embed=create_embed(
                    description="‚ùå –£–∫–∞–∑–∞–Ω–Ω–∞—è –≤–∞–ª—é—Ç–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è!"
                )
            )
            return

        data = await self.currency_api.get_exchange_rate(base_currency)
        if not data:
            await interaction.followup.send(
                embed=create_embed(
                    description="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç!"
                )
            )
            return

        rates = data["conversion_rates"]
        description = f"üí∞ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ {self.currency_api.get_currency_name(base_currency)}:\n\n"
        
        for currency, name in self.currency_api.currencies.items():
            if currency != base_currency:
                rate = rates[currency]
                description += f"{EMOJIS['DOT']} **{name}:** `{rate:.2f}`\n"

        embed = create_embed(
            title=f"üí± –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç",
            description=description,
            footer={"text": f"–î–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã ExchangeRate-API ‚Ä¢ {data['time_last_update_utc'][:10]}"}
        )
        
        await interaction.followup.send(embed=embed)

    @app_commands.command(name="exchange", description="–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É–º–º—É –∏–∑ –æ–¥–Ω–æ–π –≤–∞–ª—é—Ç—ã –≤ –¥—Ä—É–≥—É—é")
    @app_commands.describe(
        amount="–°—É–º–º–∞ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏",
        from_currency="–ò—Å—Ö–æ–¥–Ω–∞—è –≤–∞–ª—é—Ç–∞",
        to_currency="–¶–µ–ª–µ–≤–∞—è –≤–∞–ª—é—Ç–∞"
    )
    async def convert(self, interaction: discord.Interaction, amount: float, from_currency: str, to_currency: str):
        """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç —Å—É–º–º—É –∏–∑ –æ–¥–Ω–æ–π –≤–∞–ª—é—Ç—ã –≤ –¥—Ä—É–≥—É—é"""
        await interaction.response.defer()
        
        from_currency = from_currency.upper()
        to_currency = to_currency.upper()

        if not self.currency_api.is_supported_currency(from_currency) or not self.currency_api.is_supported_currency(to_currency):
            await interaction.followup.send(
                embed=create_embed(
                    description="‚ùå –û–¥–Ω–∞ –∏–∑ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –≤–∞–ª—é—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è!"
                )
            )
            return

        data = await self.currency_api.get_exchange_rate(from_currency)
        if not data:
            await interaction.followup.send(
                embed=create_embed(
                    description="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç!"
                )
            )
            return

        rate = data["conversion_rates"][to_currency]
        converted_amount = amount * rate

        description = (
            f"üí± **–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞–ª—é—Ç:**\n\n"
            f"{amount:.2f} {self.currency_api.get_currency_name(from_currency)} = \n"
            f"{converted_amount:.2f} {self.currency_api.get_currency_name(to_currency)}"
        )

        embed = create_embed(
            description=description,
            footer={"text": f"–ö—É—Ä—Å: 1 {from_currency} = {rate:.4f} {to_currency}"}
        )
        
        await interaction.followup.send(embed=embed)

async def setup(bot):
    await bot.add_cog(Currency(bot)) 