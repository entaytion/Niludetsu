import discord
from discord.ext import commands
from discord import app_commands
import aiohttp
from utils import create_embed, EMOJIS
import yaml

class Currency(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        # –ó–∞–≥—Ä—É–∂–∞–µ–º API –∫–ª—é—á –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        with open('config/config.yaml', 'r', encoding='utf-8') as f:
            config = yaml.safe_load(f)
            self.api_key = config['apis']['exchange_rate']['key']
            
        self.api_url = f"https://v6.exchangerate-api.com/v6/{self.api_key}/latest/"
        self.currencies = {
            "USD": "üá∫üá∏ –î–æ–ª–ª–∞—Ä –°–®–ê",
            "EUR": "üá™üá∫ –ï–≤—Ä–æ", 
            "UAH": "üá∫üá¶ –£–∫—Ä–∞–∏–Ω—Å–∫–∞—è –≥—Ä–∏–≤–Ω–∞",
            "RUB": "üá∑üá∫ –†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å",
            "GBP": "üá¨üáß –ë—Ä–∏—Ç–∞–Ω—Å–∫–∏–π —Ñ—É–Ω—Ç",
            "JPY": "üáØüáµ –Ø–ø–æ–Ω—Å–∫–∞—è –π–µ–Ω–∞",
            "CNY": "üá®üá≥ –ö–∏—Ç–∞–π—Å–∫–∏–π —é–∞–Ω—å",
            "KRW": "üá∞üá∑ –Æ–∂–Ω–æ–∫–æ—Ä–µ–π—Å–∫–∞—è –≤–æ–Ω–∞",
            "TRY": "üáπüá∑ –¢—É—Ä–µ—Ü–∫–∞—è –ª–∏—Ä–∞"
        }

    async def get_exchange_rate(self, base_currency: str) -> dict:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç —á–µ—Ä–µ–∑ API"""
        async with aiohttp.ClientSession() as session:
            async with session.get(f"{self.api_url}{base_currency}") as response:
                if response.status == 200:
                    data = await response.json()
                    if data.get("result") == "success":
                        return data
                return None

    @app_commands.command(name="currency", description="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å –≤–∞–ª—é—Ç")
    @app_commands.describe(–≤–∞–ª—é—Ç–∞="–ë–∞–∑–æ–≤–∞—è –≤–∞–ª—é—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é USD)")
    async def exchange_rate(self, interaction: discord.Interaction, –≤–∞–ª—é—Ç–∞: str = "USD"):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç"""
        await interaction.response.defer()
        
        base_currency = –≤–∞–ª—é—Ç–∞.upper()
        if base_currency not in self.currencies:
            await interaction.followup.send(
                embed=create_embed(
                    description="‚ùå –£–∫–∞–∑–∞–Ω–Ω–∞—è –≤–∞–ª—é—Ç–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è!"
                )
            )
            return

        try:
            data = await self.get_exchange_rate(base_currency)
            if not data:
                await interaction.followup.send(
                    embed=create_embed(
                        description="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç!"
                    )
                )
                return

            rates = data["conversion_rates"]
            description = f"üí∞ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ {self.currencies[base_currency]}:\n\n"
            
            for currency, name in self.currencies.items():
                if currency != base_currency:
                    rate = rates[currency]
                    description += f"{EMOJIS['DOT']} **{name}:** `{rate:.2f}`\n"

            embed = create_embed(
                title=f"üí± –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç",
                description=description,
                footer={"text": f"–î–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã ExchangeRate-API ‚Ä¢ {data['time_last_update_utc'][:10]}"}
            )
            
            await interaction.followup.send(embed=embed)

        except Exception as e:
            print(f"Error in exchange_rate command: {e}")
            await interaction.followup.send(
                embed=create_embed(
                    description="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç!"
                )
            )

    @app_commands.command(name="exchange", description="–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É–º–º—É –∏–∑ –æ–¥–Ω–æ–π –≤–∞–ª—é—Ç—ã –≤ –¥—Ä—É–≥—É—é")
    @app_commands.describe(
        amount="–°—É–º–º–∞ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏",
        from_currency="–ò—Å—Ö–æ–¥–Ω–∞—è –≤–∞–ª—é—Ç–∞",
        to_currency="–¶–µ–ª–µ–≤–∞—è –≤–∞–ª—é—Ç–∞"
    )
    async def convert(self, interaction: discord.Interaction, amount: float, from_currency: str, to_currency: str):
        """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç —Å—É–º–º—É –∏–∑ –æ–¥–Ω–æ–π –≤–∞–ª—é—Ç—ã –≤ –¥—Ä—É–≥—É—é"""
        await interaction.response.defer()
        
        from_currency = from_currency.upper()
        to_currency = to_currency.upper()

        if from_currency not in self.currencies or to_currency not in self.currencies:
            await interaction.followup.send(
                embed=create_embed(
                    description="‚ùå –û–¥–Ω–∞ –∏–∑ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –≤–∞–ª—é—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è!"
                )
            )
            return

        try:
            data = await self.get_exchange_rate(from_currency)
            if not data:
                await interaction.followup.send(
                    embed=create_embed(
                        description="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç!"
                    )
                )
                return

            rate = data["conversion_rates"][to_currency]
            converted_amount = amount * rate

            embed = create_embed(
                title="üí± –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞–ª—é—Ç",
                description=f"{EMOJIS['DOT']} **–°—É–º–º–∞:** `{amount:,.2f} {from_currency}`\n"
                          f"{EMOJIS['DOT']} **–ö—É—Ä—Å:** `1 {from_currency} = {rate:.4f} {to_currency}`\n"
                          f"{EMOJIS['DOT']} **–†–µ–∑—É–ª—å—Ç–∞—Ç:** `{converted_amount:,.2f} {to_currency}`",
                footer={"text": f"–î–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã ExchangeRate-API ‚Ä¢ {data['time_last_update_utc'][:10]}"}
            )
            
            await interaction.followup.send(embed=embed)

        except Exception as e:
            print(f"Error in convert command: {e}")
            await interaction.followup.send(
                embed=create_embed(
                    description="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç!"
                )
            )

async def setup(bot):
    await bot.add_cog(Currency(bot)) 