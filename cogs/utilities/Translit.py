import discord
from discord import app_commands
from discord.ext import commands

class Translit(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.translit_dict = {
            'a': '–∞', 'b': '–±', 'v': '–≤', 'g': '–≥', 'd': '–¥', 'e': '–µ',
            'yo': '—ë', 'zh': '–∂', 'z': '–∑', 'i': '–∏', 'j': '–π', 'k': '–∫',
            'l': '–ª', 'm': '–º', 'n': '–Ω', 'o': '–æ', 'p': '–ø', 'r': '—Ä',
            's': '—Å', 't': '—Ç', 'u': '—É', 'f': '—Ñ', 'h': '—Ö', 'ts': '—Ü',
            'ch': '—á', 'sh': '—à', 'sch': '—â', 'y': '—ã', 'e': '–µ', 'yu': '—é',
            'ya': '—è', "'": '—å', '#': '—ä',
            # –£–∫—Ä–∞–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã (–∏—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏)
            'yi': '—ó', 'ye': '—î', 'ih': '—ñ', 'g\'': '“ë',
            # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã
            'A': '–ê', 'B': '–ë', 'V': '–í', 'G': '–ì', 'D': '–î', 'E': '–ï',
            'Yo': '–Å', 'Zh': '–ñ', 'Z': '–ó', 'I': '–ò', 'J': '–ô', 'K': '–ö',
            'L': '–õ', 'M': '–ú', 'N': '–ù', 'O': '–û', 'P': '–ü', 'R': '–†',
            'S': '–°', 'T': '–¢', 'U': '–£', 'F': '–§', 'H': '–•', 'Ts': '–¶',
            'Ch': '–ß', 'Sh': '–®', 'Sch': '–©', 'Y': '–´', 'E': '–ï', 'Yu': '–Æ',
            'Ya': '–Ø',
            # –£–∫—Ä–∞–∏–Ω—Å–∫–∏–µ –∑–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã
            'Yi': '–á', 'Ye': '–Ñ', 'Ih': '–Ü', 'G\'': '“ê'
        }
        
        self.layout_dict = {
            'q': '–π', 'w': '—Ü', 'e': '—É', 'r': '–∫', 't': '–µ', 'y': '–Ω',
            'u': '–≥', 'i': '—à', 'o': '—â', 'p': '–∑', '[': '—Ö', ']': '—ä',
            'a': '—Ñ', 's': '—ã', 'd': '–≤', 'f': '–∞', 'g': '–ø', 'h': '—Ä',
            'j': '–æ', 'k': '–ª', 'l': '–¥', ';': '–∂', "'": '—ç', '\\': '—ë',
            'z': '—è', 'x': '—á', 'c': '—Å', 'v': '–º', 'b': '–∏', 'n': '—Ç',
            'm': '—å', ',': '–±', '.': '—é', '/': '.',
            # –ó–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã
            'Q': '–ô', 'W': '–¶', 'E': '–£', 'R': '–ö', 'T': '–ï', 'Y': '–ù',
            'U': '–ì', 'I': '–®', 'O': '–©', 'P': '–ó', '{': '–•', '}': '–™',
            'A': '–§', 'S': '–´', 'D': '–í', 'F': '–ê', 'G': '–ü', 'H': '–†',
            'J': '–û', 'K': '–õ', 'L': '–î', ':': '–ñ', '"': '–≠', '|': '–Å',
            'Z': '–Ø', 'X': '–ß', 'C': '–°', 'V': '–ú', 'B': '–ò', 'N': '–¢',
            'M': '–¨', '<': '–ë', '>': '–Æ', '?': ',',
            # –£–∫—Ä–∞–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã
            ']': '—ó', # —ó
            '}': '–á', # –á
            "'": '—î', # —î
            '"': '–Ñ', # –Ñ
            '@': '—ñ', # —ñ
            '#': '–Ü', # –Ü
            '&': '“ë', # “ë
            '^': '“ê'  # “ê
        }

    def transliterate(self, text: str) -> str:
        result = ''
        i = 0
        while i < len(text):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –∏–∑ —Ç—Ä–µ—Ö —Å–∏–º–≤–æ–ª–æ–≤
            if i + 2 < len(text) and text[i:i+3].lower() == 'sch':
                result += '–©' if text[i].isupper() else '—â'
                i += 3
                continue
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –∏–∑ –¥–≤—É—Ö —Å–∏–º–≤–æ–ª–æ–≤
            if i + 1 < len(text):
                combo = text[i:i+2]
                combo_lower = combo.lower()
                if combo_lower in ['yo', 'zh', 'ts', 'ch', 'sh', 'yu', 'ya']:
                    if combo[0].isupper():
                        result += self.translit_dict[combo_lower].upper()
                    else:
                        result += self.translit_dict[combo_lower]
                    i += 2
                    continue

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–¥–∏–Ω–æ—á–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
            char = text[i]
            char_lower = char.lower()
            if char_lower in self.translit_dict:
                if char.isupper():
                    result += self.translit_dict[char_lower].upper()
                else:
                    result += self.translit_dict[char_lower]
            else:
                result += char
            i += 1

        return result

    def fix_layout(self, text: str) -> str:
        result = ''
        for char in text:
            if char in self.layout_dict:
                result += self.layout_dict[char]
            else:
                result += char
        return result

    @app_commands.command(name="t", description="–¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ —Å –ª–∞—Ç–∏–Ω–∏—Ü—ã –Ω–∞ –∫–∏—Ä–∏–ª–ª–∏—Ü—É")
    @app_commands.describe(text="–¢–µ–∫—Å—Ç –¥–ª—è —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏–∏")
    async def translit(self, interaction: discord.Interaction, text: str):
        try:
            translated = self.transliterate(text)
            embed = discord.Embed(
                title="üîÑ –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è",
                color=0x2F3136
            )
            embed.add_field(
                name="–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç:",
                value=f"```{text}```",
                inline=False
            )
            embed.add_field(
                name="–†–µ–∑—É–ª—å—Ç–∞—Ç:",
                value=f"```{translated}```",
                inline=False
            )
            await interaction.response.send_message(embed=embed)
        except Exception as e:
            await interaction.response.send_message(
                embed=discord.Embed(
                    description=f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏–∏: {str(e)}",
                    color=0xFF0000
                ),
                ephemeral=True
            )

    @app_commands.command(name="k", description="–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞, –Ω–∞–±—Ä–∞–Ω–Ω–æ–≥–æ –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞—Å–∫–ª–∞–¥–∫–µ")
    @app_commands.describe(text="–¢–µ–∫—Å—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
    async def keyboard(self, interaction: discord.Interaction, text: str):
        try:
            fixed = self.fix_layout(text)
            embed = discord.Embed(
                title="‚å®Ô∏è –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–∫–ª–∞–¥–∫–∏",
                color=0x2F3136
            )
            embed.add_field(
                name="–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç:",
                value=f"```{text}```",
                inline=False
            )
            embed.add_field(
                name="–†–µ–∑—É–ª—å—Ç–∞—Ç:",
                value=f"```{fixed}```",
                inline=False
            )
            await interaction.response.send_message(embed=embed)
        except Exception as e:
            await interaction.response.send_message(
                embed=discord.Embed(
                    description=f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Ä–∞—Å–∫–ª–∞–¥–∫–∏: {str(e)}",
                    color=0xFF0000
                ),
                ephemeral=True
            )

async def setup(bot):
    await bot.add_cog(Translit(bot)) 