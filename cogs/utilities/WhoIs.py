import discord
from discord import app_commands
from discord.ext import commands
import socket
import whois
import requests
from datetime import datetime
from Niludetsu.utils.embed import Embed
from Niludetsu.utils.constants import Emojis

class WhoIs(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="whois", description="–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–º–µ–Ω–µ –∏–ª–∏ IP-–∞–¥—Ä–µ—Å–µ")
    @app_commands.describe(target="–î–æ–º–µ–Ω –∏–ª–∏ IP-–∞–¥—Ä–µ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞")
    async def whois(self, interaction: discord.Interaction, target: str):
        await interaction.response.defer()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ target IP-–∞–¥—Ä–µ—Å–æ–º
        try:
            socket.inet_aton(target)
            is_ip = True
        except socket.error:
            is_ip = False

        embed=Embed(title=f"üîç WhoIs –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è {target}")
        
        if is_ip:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± IP
            ip_info = requests.get(f"http://ip-api.com/json/{target}").json()
            
            if ip_info["status"] == "success":
                embed.add_field(name="IP", value=target, inline=True)
                embed.add_field(name="–°—Ç—Ä–∞–Ω–∞", value=ip_info.get("country", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"), inline=True)
                embed.add_field(name="–†–µ–≥–∏–æ–Ω", value=ip_info.get("regionName", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"), inline=True)
                embed.add_field(name="–ì–æ—Ä–æ–¥", value=ip_info.get("city", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"), inline=True)
                embed.add_field(name="–ü—Ä–æ–≤–∞–π–¥–µ—Ä", value=ip_info.get("isp", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"), inline=True)
                embed.add_field(name="–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è", value=ip_info.get("org", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"), inline=True)
                embed.add_field(name="–í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞", value=ip_info.get("timezone", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"), inline=True)
                embed.add_field(name="–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã", value=f"{ip_info.get('lat', 'N/A')}, {ip_info.get('lon', 'N/A')}", inline=True)
        else:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–º–µ–Ω–µ
            domain_info = whois.whois(target)
            
            embed.add_field(name="–î–æ–º–µ–Ω", value=target, inline=True)
            embed.add_field(name="–†–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä", value=domain_info.registrar or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ", inline=True)
            
            if isinstance(domain_info.creation_date, list):
                creation_date = domain_info.creation_date[0]
            else:
                creation_date = domain_info.creation_date
                
            if creation_date:
                embed.add_field(name="–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è", value=creation_date.strftime("%d.%m.%Y"), inline=True)
            
            if isinstance(domain_info.expiration_date, list):
                expiration_date = domain_info.expiration_date[0]
            else:
                expiration_date = domain_info.expiration_date
                
            if expiration_date:
                embed.add_field(name="–î–∞—Ç–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è", value=expiration_date.strftime("%d.%m.%Y"), inline=True)
            
            if domain_info.name_servers:
                if isinstance(domain_info.name_servers, list):
                    ns = "\n".join(domain_info.name_servers[:3])
                else:
                    ns = domain_info.name_servers
                embed.add_field(name="–°–µ—Ä–≤–µ—Ä—ã –∏–º—ë–Ω", value=ns, inline=False)

        embed.set_footer(text=f"–ó–∞–ø—Ä–æ—à–µ–Ω–æ: {interaction.user.name}")
        embed.timestamp = datetime.now()
        
        await interaction.followup.send(embed=embed)

async def setup(bot):
    await bot.add_cog(WhoIs(bot)) 