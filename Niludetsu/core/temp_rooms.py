import discord, asyncio
from discord.ext import commands
from discord import ui
from Niludetsu import Embed, Emojis, Database

class TempRoomsManager:
    def __init__(self, bot):
        self.bot = bot
        self.db = Database()
        
    async def setup_control_panel(self, guild_id: str):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            settings = await self.db.fetch_all(
                "SELECT key, value FROM settings WHERE category = 'temp_rooms' AND guild_id = ?",
                guild_id
            )
            
            settings_dict = {row['key']: row['value'] for row in settings}
            
            channel_id = settings_dict.get('control_channel')
            if not channel_id:
                raise ValueError("–ö–∞–Ω–∞–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
                
            channel = self.bot.get_channel(int(channel_id))
            if not channel:
                raise ValueError(f"–ö–∞–Ω–∞–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω: {channel_id}")
                
            # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞–Ω–µ–ª—å—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            embed = Embed(
                title="üéÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏",
                description=(
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞—à–∏–º –≤—Ä–µ–º–µ–Ω–Ω—ã–º –∫–∞–Ω–∞–ª–æ–º:\n\n"
                    f"{Emojis.VOICE_OWNER} - –ü–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–∞–≤–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞\n"
                    f"{Emojis.VOICE_ACCESS} - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º\n"
                    f"{Emojis.VOICE_LIMIT} - –ò–∑–º–µ–Ω–∏—Ç—å –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
                    f"{Emojis.VOICE_LOCK} - –ó–∞–∫—Ä—ã—Ç—å/–æ—Ç–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª\n"
                    f"{Emojis.VOICE_EDIT} - –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –∫–∞–Ω–∞–ª\n"
                    f"{Emojis.VOICE_TRUST} - –î–æ–≤–µ—Ä—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\n"
                    f"{Emojis.VOICE_UNTRUST} - –ù–µ –¥–æ–≤–µ—Ä—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\n"
                    f"{Emojis.VOICE_INVITE} - –°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ\n"
                    f"{Emojis.VOICE_BAN} - –ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
                    f"{Emojis.VOICE_UNBAN} - –†–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
                    f"{Emojis.VOICE_REVOKE} - –ó–∞–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∞\n"
                    f"{Emojis.VOICE_THREAD} - –°–æ–∑–¥–∞—Ç—å –≤–µ—Ç–∫—É –æ–±—Å—É–∂–¥–µ–Ω–∏—è\n"
                    f"{Emojis.VOICE_REGION} - –ò–∑–º–µ–Ω–∏—Ç—å —Ä–µ–≥–∏–æ–Ω\n"
                    f"{Emojis.VOICE_DELETE} - –£–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª"
                ),
                color="BLUE"
            ).set_image(url="https://media.discordapp.net/attachments/1332296613988794450/1336455114126262422/voice.png?ex=67a3de51&is=67a28cd1&hm=61524318fecfadefce607fff7625d11d3ce2f0eae45a52d5228bc1ee0e3082e2&=&format=webp&quality=lossless&width=1920&height=640")
            
            message = await channel.send(embed=embed, view=TempRoomsView(self))
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            await self.db.execute(
                """
                INSERT OR REPLACE INTO settings (category, key, value, guild_id)
                VALUES ('temp_rooms', 'control_message', ?, ?)
                """,
                (str(message.id), guild_id)
            )
            
            return message
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {e}")
            return None
            
    async def create_temp_room(self, member: discord.Member, name: str = None):
        """–°–æ–∑–¥–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            category_id = await self.db.fetch_one(
                "SELECT value FROM settings WHERE category = 'temp_rooms' AND key = 'category' AND guild_id = ?",
                str(member.guild.id)
            )
            
            if not category_id:
                raise ValueError("–ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
                
            category = member.guild.get_channel(int(category_id))
            if not category:
                raise ValueError(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {category_id}")
                
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
            overwrites = {
                member: discord.PermissionOverwrite(
                    manage_channels=True,
                    move_members=True,
                    view_channel=True,
                    connect=True,
                    speak=True,
                    stream=True,
                    use_voice_activation=True
                ),
                member.guild.default_role: discord.PermissionOverwrite(
                    view_channel=True,
                    connect=True,
                    speak=True,
                    stream=True,
                    use_voice_activation=True
                )
            }
            
            # –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª
            channel_name = name or f"–ö–∞–Ω–∞–ª {member.display_name}"
            channel = await member.guild.create_voice_channel(
                name=channel_name,
                category=category,
                overwrites=overwrites,
                bitrate=64000,
                user_limit=0
            )
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            await self.db.execute(
                """
                INSERT INTO temp_rooms (channel_id, guild_id, owner_id, name, channel_type)
                VALUES (?, ?, ?, ?, ?)
                """,
                (str(channel.id), str(member.guild.id), str(member.id), channel_name, 2)
            )
            
            # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await member.move_to(channel)
            return channel
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞: {e}")
            return None
            
    async def delete_temp_room(self, channel_id: str):
        """–£–¥–∞–ª—è–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ
            room = await self.db.fetch_one(
                "SELECT * FROM temp_rooms WHERE channel_id = ?",
                channel_id
            )
            
            if not room:
                return False
                
            # –£–¥–∞–ª—è–µ–º —Ç—Ä–µ–¥, –µ—Å–ª–∏ –µ—Å—Ç—å
            if 'thread_id' in room and room['thread_id']:
                try:
                    thread = self.bot.get_channel(int(room['thread_id']))
                    if thread:
                        await thread.delete()
                except:
                    pass
                    
            # –£–¥–∞–ª—è–µ–º –∫–∞–Ω–∞–ª
            channel = self.bot.get_channel(int(channel_id))
            if channel:
                await channel.delete()
                
            # –£–¥–∞–ª—è–µ–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            await self.db.execute(
                "DELETE FROM temp_rooms WHERE channel_id = ?",
                channel_id
            )
            
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞: {e}")
            return False
            
    async def get_temp_room(self, channel_id: str):
        """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Ä–µ–º–µ–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ"""
        try:
            return await self.db.fetch_one(
                "SELECT * FROM temp_rooms WHERE channel_id = ?",
                channel_id
            )
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–Ω–∞–ª–µ: {e}")
            return None
            
class TempRoomsView(ui.View):
    def __init__(self, manager: TempRoomsManager):
        super().__init__(timeout=None)
        self.manager = manager 