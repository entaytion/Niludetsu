import discord
from typing import Optional
from Niludetsu.database.db import Database
import yaml
import traceback

class TempRoomsManager:
    def __init__(self, bot: discord.Client):
        self.bot = bot
        self.db = Database()
        self._config = None
        
    def load_config(self) -> dict:
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞"""
        try:
            with open('data/config.yaml', 'r', encoding='utf-8') as f:
                config = yaml.safe_load(f)
                self._config = config.get('temp_rooms', {})
                return self._config
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
            return {}

    async def setup_control_panel(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∫–æ–º–Ω–∞—Ç–∞–º–∏"""
        try:
            config = self.load_config()
            if not config:
                print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                return False

            message_channel_id = config.get('message')
            if not message_channel_id:
                print("‚ùå ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω")
                return False

            channel = self.bot.get_channel(int(message_channel_id))
            if not channel:
                print(f"‚ùå –ö–∞–Ω–∞–ª {message_channel_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False

            # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            embed = discord.Embed(
                title="üéÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–º –∫–∞–Ω–∞–ª–æ–º",
                description=(
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞—à–∏–º –≤—Ä–µ–º–µ–Ω–Ω—ã–º –∫–∞–Ω–∞–ª–æ–º:\n\n"
                    "üëë - –ü–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–∞–≤–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞\n"
                    "üë• - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º\n"
                    "üî¢ - –ò–∑–º–µ–Ω–∏—Ç—å –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
                    "üîí - –ó–∞–∫—Ä—ã—Ç—å/–æ—Ç–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª\n"
                    "‚úèÔ∏è - –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –∫–∞–Ω–∞–ª\n"
                    "üëÅ - –°–∫—Ä—ã—Ç—å/–ø–æ–∫–∞–∑–∞—Ç—å –∫–∞–Ω–∞–ª\n"
                    "üö´ - –ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
                    "üîá - –ó–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
                    "üéµ - –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –º—É–∑—ã–∫–∏"
                ),
                color=discord.Color.blurple()
            )

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            async for message in channel.history(limit=10):
                if message.author == self.bot.user and message.embeds:
                    if message.embeds[0].title == "üéÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–º –∫–∞–Ω–∞–ª–æ–º":
                        return True

            await channel.send(embed=embed, view=None)  # view –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ–≥–µ
            return True

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {e}")
            traceback.print_exc()
            return False

    async def create_temp_room(self, member: discord.Member) -> Optional[discord.VoiceChannel]:
        """–°–æ–∑–¥–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª"""
        try:
            config = self.load_config()
            if not config:
                return None

            category_id = config.get('category')
            if not category_id:
                return None

            category = member.guild.get_channel(int(category_id))
            if not category:
                return None

            # –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –∫–∞–Ω–∞–ª–∞
            overwrites = {
                member: discord.PermissionOverwrite(
                    manage_channels=True,
                    move_members=True,
                    view_channel=True,
                    connect=True,
                    speak=True
                ),
                member.guild.default_role: discord.PermissionOverwrite(
                    view_channel=True,
                    connect=True,
                    speak=True
                )
            }
            
            # –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª
            channel = await member.guild.create_voice_channel(
                f"–ö–∞–Ω–∞–ª {member.display_name}",
                category=category,
                overwrites=overwrites
            )
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            await self.db.execute(
                """
                INSERT INTO temp_rooms (channel_id, guild_id, owner_id, name, channel_type)
                VALUES (?, ?, ?, ?, ?)
                """,
                str(channel.id), str(member.guild.id), str(member.id), channel.name, 2
            )
            
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª {channel.id} –¥–ª—è {member.name}")
            return channel
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞: {e}")
            traceback.print_exc()
            return None

    async def update_temp_room(self, channel_id: str, **kwargs) -> bool:
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞"""
        try:
            await self.db.execute(
                """
                UPDATE temp_rooms 
                SET name = COALESCE(?, name)
                WHERE channel_id = ?
                """,
                kwargs.get('name'), channel_id
            )
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞: {e}")
            return False

    async def delete_temp_room(self, channel_id: str) -> bool:
        """–£–¥–∞–ª—è–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª"""
        try:
            await self.db.execute(
                "DELETE FROM temp_rooms WHERE channel_id = ?",
                channel_id
            )
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª {channel_id}")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞: {e}")
            return False

    async def is_temp_room_owner(self, user_id: str, channel_id: str) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞"""
        try:
            result = await self.db.fetch_one(
                """
                SELECT owner_id 
                FROM temp_rooms 
                WHERE channel_id = ? AND owner_id = ?
                """,
                str(channel_id), str(user_id)
            )
            return bool(result)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞: {e}")
            return False

    async def get_temp_room(self, channel_id: str) -> Optional[dict]:
        """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Ä–µ–º–µ–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ"""
        try:
            result = await self.db.fetch_one(
                """
                SELECT channel_id, guild_id, owner_id, name, channel_type
                FROM temp_rooms 
                WHERE channel_id = ?
                """,
                str(channel_id)
            )
            return result if result else None
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–Ω–∞–ª–µ: {e}")
            return None 