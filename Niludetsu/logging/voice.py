from ..utils.logging import BaseLogger, LoggingState
from ..utils.emojis import EMOJIS
from ..utils.embed import create_embed
import discord
from typing import Optional
import traceback

class VoiceLogger(BaseLogger):
    """–õ–æ–≥–≥–µ—Ä –¥–ª—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ Discord."""
    
    def __init__(self, bot: discord.Client):
        super().__init__(bot)
        self.log_channel = None
        bot.loop.create_task(self._initialize())
    
    async def _initialize(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–≥–µ—Ä–∞"""
        await self.bot.wait_until_ready()
        await self.initialize_logs()
        self.log_channel = LoggingState.log_channel
    
    async def log_voice_channel_full(self, channel: discord.VoiceChannel):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞"""
        fields = [
            {"name": f"{EMOJIS['DOT']} –ö–∞–Ω–∞–ª", "value": channel.mention, "inline": True},
            {"name": f"{EMOJIS['DOT']} ID", "value": str(channel.id), "inline": True},
            {"name": f"{EMOJIS['DOT']} –õ–∏–º–∏—Ç", "value": str(channel.user_limit), "inline": True},
            {"name": f"{EMOJIS['DOT']} –ö–∞—Ç–µ–≥–æ—Ä–∏—è", "value": channel.category.name if channel.category else "–ù–µ—Ç", "inline": True}
        ]
        
        await self.log_event(
            title=f"{EMOJIS['INFO']} –ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –∑–∞–ø–æ–ª–Ω–µ–Ω",
            description=f"–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –¥–æ—Å—Ç–∏–≥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤",
            color='BLUE',
            fields=fields
        )
        
    async def log_voice_user_join(self, member: discord.Member, channel: discord.VoiceChannel):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É"""
        fields = [
            {"name": f"{EMOJIS['DOT']} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "value": member.mention, "inline": True},
            {"name": f"{EMOJIS['DOT']} ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "value": str(member.id), "inline": True},
            {"name": f"{EMOJIS['DOT']} –ö–∞–Ω–∞–ª", "value": channel.mention, "inline": True},
            {"name": f"{EMOJIS['DOT']} –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤", "value": f"{len(channel.members)}/{channel.user_limit if channel.user_limit else '‚àû'}", "inline": True}
        ]
        
        await self.log_event(
            title=f"{EMOJIS['SUCCESS']} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É",
            description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É",
            color='GREEN',
            fields=fields,
            thumbnail_url=member.display_avatar.url
        )
        
    async def log_voice_user_switch(self, member: discord.Member, before: discord.VoiceState, after: discord.VoiceState) -> None:
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–µ–∂–¥—É –∫–∞–Ω–∞–ª–∞–º–∏"""
        embed = create_embed(
            title="üé§ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞",
            description=f"{member.mention} —Å–º–µ–Ω–∏–ª –∫–∞–Ω–∞–ª",
            fields=[
                {"name": "üìç –ü—Ä–µ–¥—ã–¥—É—â–∏–π –∫–∞–Ω–∞–ª", "value": before.channel.mention if before.channel else "–ù–µ—Ç", "inline": True},
                {"name": "üìç –ù–æ–≤—ã–π –∫–∞–Ω–∞–ª", "value": after.channel.mention if after.channel else "–ù–µ—Ç", "inline": True},
            ],
            color="BLUE",
            footer={"text": f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {member.id}"}
        )
        await self.log_channel.send(embed=embed)
        
    async def log_voice_user_leave(self, member: discord.Member, channel: discord.VoiceChannel):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞"""
        fields = [
            {"name": f"{EMOJIS['DOT']} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "value": member.mention, "inline": True},
            {"name": f"{EMOJIS['DOT']} ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "value": str(member.id), "inline": True},
            {"name": f"{EMOJIS['DOT']} –ö–∞–Ω–∞–ª", "value": channel.mention, "inline": True},
            {"name": f"{EMOJIS['DOT']} –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤", "value": f"{len(channel.members)}/{channel.user_limit if channel.user_limit else '‚àû'}", "inline": True}
        ]
        
        await self.log_event(
            title=f"{EMOJIS['ERROR']} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∫–∏–Ω—É–ª –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª",
            description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞",
            color='RED',
            fields=fields,
            thumbnail_url=member.display_avatar.url
        )
        
    async def log_voice_user_move(self, member: discord.Member, executor: discord.Member, before: discord.VoiceChannel, after: discord.VoiceChannel):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–µ–∂–¥—É –≥–æ–ª–æ—Å–æ–≤—ã–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏"""
        fields = [
            {"name": f"{EMOJIS['DOT']} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "value": member.mention, "inline": True},
            {"name": f"{EMOJIS['DOT']} ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "value": str(member.id), "inline": True},
            {"name": f"{EMOJIS['DOT']} –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", "value": executor.mention, "inline": True},
            {"name": f"{EMOJIS['DOT']} –ü—Ä–µ–¥—ã–¥—É—â–∏–π –∫–∞–Ω–∞–ª", "value": before.mention, "inline": True},
            {"name": f"{EMOJIS['DOT']} –ù–æ–≤—ã–π –∫–∞–Ω–∞–ª", "value": after.mention, "inline": True}
        ]
        
        await self.log_event(
            title=f"{EMOJIS['INFO']} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ –¥—Ä—É–≥–æ–π –∫–∞–Ω–∞–ª",
            description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ –¥—Ä—É–≥–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª",
            color='BLUE',
            fields=fields,
            thumbnail_url=member.display_avatar.url
        )
        
    async def log_voice_user_kick(self, member: discord.Member, executor: discord.Member, channel: discord.VoiceChannel):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞"""
        fields = [
            {"name": f"{EMOJIS['DOT']} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "value": member.mention, "inline": True},
            {"name": f"{EMOJIS['DOT']} ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "value": str(member.id), "inline": True},
            {"name": f"{EMOJIS['DOT']} –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", "value": executor.mention, "inline": True},
            {"name": f"{EMOJIS['DOT']} –ö–∞–Ω–∞–ª", "value": channel.mention, "inline": True}
        ]
        
        await self.log_event(
            title=f"{EMOJIS['ERROR']} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª—é—á–µ–Ω –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞",
            description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞",
            color='RED',
            fields=fields,
            thumbnail_url=member.display_avatar.url
        )

    async def log_voice_status_update(self, member: discord.Member, before: discord.VoiceState, after: discord.VoiceState):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞"""
        try:
            if not before.channel and after.channel:  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è
                await self.log_voice_user_join(member, after.channel)
            elif before.channel and not after.channel:  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª—é—á–∏–ª—Å—è
                await self.log_voice_user_leave(member, before.channel)
            elif before.channel and after.channel and before.channel != after.channel:  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ—à–µ–ª –≤ –¥—Ä—É–≥–æ–π –∫–∞–Ω–∞–ª
                await self.log_voice_user_switch(member, before, after)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è: {e}")
            traceback.print_exc() 