from ..utils.logging import BaseLogger
from ..utils.emojis import EMOJIS
from ..utils.embed import create_embed
import discord
from typing import Optional, List
from datetime import datetime

class UserLogger(BaseLogger):
    """–õ–æ–≥–≥–µ—Ä –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Discord."""
    
    def __init__(self, bot):
        super().__init__(bot)
        self.bot = bot

    async def log_user_name_update(self, before: discord.Member, after: discord.Member):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        fields = [
            {"name": f"{EMOJIS['DOT']} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "value": after.mention, "inline": True},
            {"name": f"{EMOJIS['DOT']} ID", "value": str(after.id), "inline": True},
            {"name": f"{EMOJIS['DOT']} –°—Ç–∞—Ä—ã–π –Ω–∏–∫–Ω–µ–π–º", "value": before.display_name, "inline": True},
            {"name": f"{EMOJIS['DOT']} –ù–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º", "value": after.display_name, "inline": True}
        ]
        
        await self.log_event(
            title=f"{EMOJIS['INFO']} –ò–∑–º–µ–Ω–µ–Ω –Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑–º–µ–Ω–∏–ª —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ",
            color='BLUE',
            fields=fields,
            thumbnail_url=after.display_avatar.url
        )
        
    async def log_user_roles_update(self, before: discord.Member, after: discord.Member):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        added_roles = [role for role in after.roles if role not in before.roles]
        removed_roles = [role for role in before.roles if role not in after.roles]
        
        fields = [
            {"name": f"{EMOJIS['DOT']} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "value": after.mention, "inline": True},
            {"name": f"{EMOJIS['DOT']} ID", "value": str(after.id), "inline": True},
            {"name": f"{EMOJIS['DOT']} –î–æ–±–∞–≤–ª–µ–Ω—ã —Ä–æ–ª–∏", "value": ", ".join([role.mention for role in added_roles]) or "–ù–µ—Ç", "inline": False},
            {"name": f"{EMOJIS['DOT']} –£–¥–∞–ª–µ–Ω—ã —Ä–æ–ª–∏", "value": ", ".join([role.mention for role in removed_roles]) or "–ù–µ—Ç", "inline": False}
        ]
        
        await self.log_event(
            title=f"{EMOJIS['INFO']} –ò–∑–º–µ–Ω–µ–Ω—ã —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            description=f"–û–±–Ω–æ–≤–ª–µ–Ω—ã —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ",
            color='BLUE',
            fields=fields,
            thumbnail_url=after.display_avatar.url
        )
        
    async def log_user_roles_add(self, member: discord.Member, role: discord.Role):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        fields = [
            {"name": f"{EMOJIS['DOT']} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "value": member.mention, "inline": True},
            {"name": f"{EMOJIS['DOT']} ID", "value": str(member.id), "inline": True},
            {"name": f"{EMOJIS['DOT']} –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ä–æ–ª—å", "value": role.mention, "inline": True}
        ]
        
        await self.log_event(
            title=f"{EMOJIS['SUCCESS']} –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é",
            description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞ –Ω–æ–≤–∞—è —Ä–æ–ª—å",
            color='GREEN',
            fields=fields,
            thumbnail_url=member.display_avatar.url
        )
        
    async def log_user_roles_remove(self, member: discord.Member, role: discord.Role):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Ä–æ–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        fields = [
            {"name": f"{EMOJIS['DOT']} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "value": member.mention, "inline": True},
            {"name": f"{EMOJIS['DOT']} ID", "value": str(member.id), "inline": True},
            {"name": f"{EMOJIS['DOT']} –£–¥–∞–ª–µ–Ω–∞ —Ä–æ–ª—å", "value": role.mention, "inline": True}
        ]
        
        await self.log_event(
            title=f"{EMOJIS['ERROR']} –£–¥–∞–ª–µ–Ω–∞ —Ä–æ–ª—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            description=f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞ —Ä–æ–ª—å",
            color='RED',
            fields=fields,
            thumbnail_url=member.display_avatar.url
        )
        
    async def log_user_avatar_update(self, before: discord.Member, after: discord.Member):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        fields = [
            {"name": f"{EMOJIS['DOT']} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "value": after.mention, "inline": True},
            {"name": f"{EMOJIS['DOT']} ID", "value": str(after.id), "inline": True}
        ]
        
        await self.log_event(
            title=f"{EMOJIS['INFO']} –ò–∑–º–µ–Ω–µ–Ω –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±–Ω–æ–≤–∏–ª —Å–≤–æ–π –∞–≤–∞—Ç–∞—Ä",
            color='BLUE',
            fields=fields,
            thumbnail_url=after.display_avatar.url,
            image_url=before.display_avatar.url
        )
        
    async def log_user_timeout(self, member: discord.Member, until: datetime, reason: Optional[str] = None):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∞–π–º-–∞—É—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        fields = [
            {"name": f"{EMOJIS['DOT']} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "value": member.mention, "inline": True},
            {"name": f"{EMOJIS['DOT']} ID", "value": str(member.id), "inline": True},
            {"name": f"{EMOJIS['DOT']} –î–æ", "value": f"<t:{int(until.timestamp())}:F>", "inline": True},
            {"name": f"{EMOJIS['DOT']} –ü—Ä–∏—á–∏–Ω–∞", "value": reason or "–ù–µ —É–∫–∞–∑–∞–Ω–∞", "inline": False}
        ]
        
        await self.log_event(
            title=f"{EMOJIS['ERROR']} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª —Ç–∞–π–º-–∞—É—Ç",
            description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –≤—Ä–µ–º–µ–Ω–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –≤ –ø—Ä–∞–≤–∞—Ö",
            color='RED',
            fields=fields,
            thumbnail_url=member.display_avatar.url
        )
        
    async def log_user_timeout_remove(self, member: discord.Member):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–Ω—è—Ç–∏—è —Ç–∞–π–º-–∞—É—Ç–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        fields = [
            {"name": f"{EMOJIS['DOT']} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "value": member.mention, "inline": True},
            {"name": f"{EMOJIS['DOT']} ID", "value": str(member.id), "inline": True}
        ]
        
        await self.log_event(
            title=f"{EMOJIS['SUCCESS']} –°–Ω—è—Ç —Ç–∞–π–º-–∞—É—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            description=f"–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—ã–ª–∏ —Å–Ω—è—Ç—ã –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è",
            color='GREEN',
            fields=fields,
            thumbnail_url=member.display_avatar.url
        )

    async def log_member_update(self, before, after):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        if before.status != after.status or before.activities != after.activities:
            return

        changes = []

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞
        if before.nick != after.nick:
            changes.append(f"**–ù–∏–∫–Ω–µ–π–º:** {before.nick or '–ù–µ—Ç'} ‚ûú {after.nick or '–ù–µ—Ç'}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–µ–π
        if before.roles != after.roles:
            removed_roles = set(before.roles) - set(after.roles)
            added_roles = set(after.roles) - set(before.roles)

            if removed_roles:
                roles_text = ", ".join(role.mention for role in removed_roles)
                changes.append(f"**–£–¥–∞–ª–µ–Ω—ã —Ä–æ–ª–∏:** {roles_text}")

            if added_roles:
                roles_text = ", ".join(role.mention for role in added_roles)
                changes.append(f"**–î–æ–±–∞–≤–ª–µ–Ω—ã —Ä–æ–ª–∏:** {roles_text}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–∞–π–º–∞—É—Ç–∞
        if before.timed_out_until != after.timed_out_until:
            if after.timed_out_until:
                changes.append(f"**–¢–∞–π–º–∞—É—Ç –¥–æ:** {after.timed_out_until.strftime('%d.%m.%Y %H:%M:%S')}")
            else:
                changes.append("**–¢–∞–π–º–∞—É—Ç —Å–Ω—è—Ç**")

        # –ï—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥
        if changes:
            await self.log_event(
                title="üë§ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞",
                description="\n".join(changes),
                color="BLUE",
                fields=[
                    {"name": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "value": after.mention, "inline": True},
                    {"name": "ID", "value": str(after.id), "inline": True}
                ],
                thumbnail_url=after.display_avatar.url
            ) 