from Niludetsu import BaseLogger, Emojis, LoggingState
import discord
from typing import Optional, List, Dict, Union
from discord.channel import TextChannel, VoiceChannel, CategoryChannel, ForumChannel
from datetime import datetime

class ChannelLogger(BaseLogger):
    """–õ–æ–≥–≥–µ—Ä –¥–ª—è –∫–∞–Ω–∞–ª–æ–≤ Discord."""
    
    def __init__(self, bot: discord.Client):
        super().__init__(bot)
        self.log_channel = None
        bot.loop.create_task(self._initialize())
    
    async def _initialize(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–≥–µ—Ä–∞"""
        await self.bot.wait_until_ready()
        await self.initialize_logs()
        self.log_channel = LoggingState.log_channel
    
    def _get_permission_changes(self, before: Dict[discord.Role, discord.PermissionOverwrite],
                              after: Dict[discord.Role, discord.PermissionOverwrite]) -> List[str]:
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø—Ä–∞–≤"""
        changes = []
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ä–æ–ª–∏
        all_roles = set(before.keys()) | set(after.keys())
        
        for role in all_roles:
            before_perms = before.get(role)
            after_perms = after.get(role)
            
            if not before_perms and after_perms:
                # –î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ –ø—Ä–∞–≤–∞
                allowed = [perm[0] for perm in after_perms if perm[1] is True]
                denied = [perm[0] for perm in after_perms if perm[1] is False]
                
                if allowed:
                    changes.append(f"‚úÖ {role.mention}: –†–∞–∑—Ä–µ—à–µ–Ω–æ: {', '.join(allowed)}")
                if denied:
                    changes.append(f"‚ùå {role.mention}: –ó–∞–ø—Ä–µ—â–µ–Ω–æ: {', '.join(denied)}")
                    
            elif before_perms and not after_perms:
                # –£–¥–∞–ª–µ–Ω—ã –ø—Ä–∞–≤–∞
                changes.append(f"üóëÔ∏è {role.mention}: –ü—Ä–∞–≤–∞ —É–¥–∞–ª–µ–Ω—ã")
                
            elif before_perms and after_perms:
                # –ò–∑–º–µ–Ω–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–∞–≤–∞
                changed_perms = []
                for perm, value in after_perms:
                    before_value = dict(before_perms).get(perm)
                    if before_value != value:
                        status = "‚úÖ" if value else "‚ùå"
                        changed_perms.append(f"{status} {perm}")
                        
                if changed_perms:
                    changes.append(f"üìù {role.mention}: {', '.join(changed_perms)}")
        
        return changes
    
    async def log_guild_channel_create(self, channel: discord.abc.GuildChannel):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞"""
        channel_type = {
            discord.TextChannel: "—Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª",
            discord.VoiceChannel: "–≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª",
            discord.CategoryChannel: "–∫–∞—Ç–µ–≥–æ—Ä–∏—è",
            discord.StageChannel: "—Ç—Ä–∏–±—É–Ω–∞",
            discord.ForumChannel: "—Ñ–æ—Ä—É–º"
        }.get(type(channel), "–∫–∞–Ω–∞–ª")
        
        fields = [
            {"name": f"{Emojis.DOT} –ù–∞–∑–≤–∞–Ω–∏–µ", "value": channel.name, "inline": True},
            {"name": f"{Emojis.DOT} ID", "value": str(channel.id), "inline": True},
            {"name": f"{Emojis.DOT} –¢–∏–ø", "value": channel_type, "inline": True}
        ]
        
        if isinstance(channel, discord.TextChannel):
            fields.extend([
                {"name": f"{Emojis.DOT} NSFW", "value": "–î–∞" if channel.is_nsfw() else "–ù–µ—Ç", "inline": True},
                {"name": f"{Emojis.DOT} –ú–µ–¥–ª–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º", "value": f"{channel.slowmode_delay} —Å–µ–∫.", "inline": True}
            ])
            
        if channel.category:
            fields.append({"name": f"{Emojis.DOT} –ö–∞—Ç–µ–≥–æ—Ä–∏—è", "value": channel.category.name, "inline": True})
        
        await self.log_event(
            title=f"{Emojis.SUCCESS} –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª",
            description=f"–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π {channel_type} {channel.mention}",
            color='GREEN',
            fields=fields
        )
        
    async def log_guild_channel_delete(self, channel: discord.abc.GuildChannel):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞"""
        channel_type = {
            discord.TextChannel: "—Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª",
            discord.VoiceChannel: "–≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª",
            discord.CategoryChannel: "–∫–∞—Ç–µ–≥–æ—Ä–∏—è",
            discord.StageChannel: "—Ç—Ä–∏–±—É–Ω–∞",
            discord.ForumChannel: "—Ñ–æ—Ä—É–º"
        }.get(type(channel), "–∫–∞–Ω–∞–ª")
        
        fields = [
            {"name": f"{Emojis.DOT} –ù–∞–∑–≤–∞–Ω–∏–µ", "value": channel.name, "inline": True},
            {"name": f"{Emojis.DOT} ID", "value": str(channel.id), "inline": True},
            {"name": f"{Emojis.DOT} –¢–∏–ø", "value": channel_type, "inline": True}
        ]
        
        if channel.category:
            fields.append({"name": f"{Emojis.DOT} –ö–∞—Ç–µ–≥–æ—Ä–∏—è", "value": channel.category.name, "inline": True})
        
        await self.log_event(
            title=f"{Emojis.ERROR} –ö–∞–Ω–∞–ª —É–¥–∞–ª–µ–Ω",
            description=f"–£–¥–∞–ª–µ–Ω {channel_type} {channel.name}",
            color='RED',
            fields=fields
        )
        
    async def log_guild_channel_update(self, before: discord.abc.GuildChannel, after: discord.abc.GuildChannel):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫–∞–Ω–∞–ª–∞"""
        changes = []
        fields = [
            {"name": f"{Emojis.DOT} –ö–∞–Ω–∞–ª", "value": after.mention, "inline": True},
            {"name": f"{Emojis.DOT} ID", "value": str(after.id), "inline": True}
        ]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è
        if before.name != after.name:
            changes.append(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {before.name} ‚ûú {after.name}")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        if before.category != after.category:
            old_category = before.category.name if before.category else "–ù–µ—Ç"
            new_category = after.category.name if after.category else "–ù–µ—Ç"
            changes.append(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {old_category} ‚ûú {new_category}")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
        if isinstance(after, discord.TextChannel):
            if before.topic != after.topic:
                changes.append(f"–û–ø–∏—Å–∞–Ω–∏–µ: {before.topic or '–ù–µ—Ç'} ‚ûú {after.topic or '–ù–µ—Ç'}")
            if before.slowmode_delay != after.slowmode_delay:
                changes.append(f"–ú–µ–¥–ª–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º: {before.slowmode_delay} —Å–µ–∫. ‚ûú {after.slowmode_delay} —Å–µ–∫.")
            if before.nsfw != after.nsfw:
                changes.append(f"NSFW: {'–î–∞' if before.nsfw else '–ù–µ—Ç'} ‚ûú {'–î–∞' if after.nsfw else '–ù–µ—Ç'}")
                
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
        permission_changes = self._get_permission_changes(before.overwrites, after.overwrites)
        if permission_changes:
            fields.append({
                "name": f"{Emojis.DOT} –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∞–≤",
                "value": "\n".join(permission_changes),
                "inline": False
            })
            
        if changes:
            fields.append({
                "name": f"{Emojis.DOT} –ò–∑–º–µ–Ω–µ–Ω–∏—è",
                "value": "\n".join(changes),
                "inline": False
            })
            
            await self.log_event(
                title=f"{Emojis.INFO} –ö–∞–Ω–∞–ª –∏–∑–º–µ–Ω–µ–Ω",
                description=f"–ò–∑–º–µ–Ω–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞ {after.mention}",
                color='BLUE',
                fields=fields
            )
        
    async def log_guild_channel_pins_update(self, channel: discord.TextChannel, last_pin):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        await self.log_event(
            title=f"{Emojis.INFO} –û–±–Ω–æ–≤–ª–µ–Ω—ã –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
            description=f"–í –∫–∞–Ω–∞–ª–µ {channel.mention} –æ–±–Ω–æ–≤–ª–µ–Ω—ã –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
            color='BLUE',
            fields=[
                {"name": f"{Emojis.DOT} –ö–∞–Ω–∞–ª", "value": channel.mention, "inline": True},
                {"name": f"{Emojis.DOT} –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ", "value": last_pin.strftime("%d.%m.%Y %H:%M:%S") if last_pin else "–ù–µ—Ç –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã—Ö", "inline": True}
            ]
        )
        
    async def log_guild_channel_nsfw_update(self, before: discord.TextChannel, after: discord.TextChannel):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è NSFW —Å—Ç–∞—Ç—É—Å–∞ –∫–∞–Ω–∞–ª–∞"""
        fields = [
            {"name": f"{Emojis.DOT} –ö–∞–Ω–∞–ª", "value": after.mention, "inline": True},
            {"name": f"{Emojis.DOT} ID", "value": str(after.id), "inline": True},
            {"name": f"{Emojis.DOT} –°—Ç–∞—Ä—ã–π —Å—Ç–∞—Ç—É—Å", "value": "18+" if before.nsfw else "–û–±—ã—á–Ω—ã–π", "inline": True},
            {"name": f"{Emojis.DOT} –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å", "value": "18+" if after.nsfw else "–û–±—ã—á–Ω—ã–π", "inline": True}
        ]
        
        await self.log_event(
            title=f"{Emojis.INFO} –ò–∑–º–µ–Ω–µ–Ω NSFW —Å—Ç–∞—Ç—É—Å –∫–∞–Ω–∞–ª–∞",
            description=f"–û–±–Ω–æ–≤–ª–µ–Ω —Å—Ç–∞—Ç—É—Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞ {after.mention}",
            color='BLUE',
            fields=fields
        )
        
    async def log_guild_channel_parent_update(self, before: discord.abc.GuildChannel, after: discord.abc.GuildChannel):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        await self.log_guild_channel_update(before, after)
        
    async def log_guild_channel_permissions_update(self, channel: discord.abc.GuildChannel, target: Union[discord.Role, discord.Member], before: discord.Permissions, after: discord.Permissions):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"""
        changes = []
        for perm, value in after:
            if getattr(before, perm) != value:
                changes.append(f"{perm}: {'‚úÖ' if value else '‚ùå'}")
                
        if changes:
            fields = [
                {"name": f"{Emojis.DOT} –ö–∞–Ω–∞–ª", "value": channel.mention, "inline": True},
                {"name": f"{Emojis.DOT} –¶–µ–ª—å", "value": target.mention, "inline": True},
                {"name": f"{Emojis.DOT} –ò–∑–º–µ–Ω–µ–Ω–∏—è", "value": "\n".join(changes), "inline": False}
            ]
            
            await self.log_event(
                title=f"{Emojis.INFO} –ò–∑–º–µ–Ω–µ–Ω—ã –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞",
                description=f"–í –∫–∞–Ω–∞–ª–µ {channel.mention} –∏–∑–º–µ–Ω–µ–Ω—ã –ø—Ä–∞–≤–∞ –¥–ª—è {target.mention}",
                color='BLUE',
                fields=fields
            )
            
    async def log_guild_channel_type_update(self, before: discord.abc.GuildChannel, after: discord.abc.GuildChannel):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∏–ø–∞ –∫–∞–Ω–∞–ª–∞"""
        await self.log_guild_channel_update(before, after)
        
    async def log_guild_voice_update(self, member: discord.Member, before: Optional[VoiceChannel], after: Optional[VoiceChannel]):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞"""
        if not before and after:  # –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è
            description = f"{member.mention} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ {after.mention}"
            title = f"{Emojis.SUCCESS} –£—á–∞—Å—Ç–Ω–∏–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É"
            color = 'GREEN'
        elif before and not after:  # –ü–æ–∫–∏–Ω—É–ª
            description = f"{member.mention} –ø–æ–∫–∏–Ω—É–ª {before.mention}"
            title = f"{Emojis.ERROR} –£—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª"
            color = 'RED'
        else:  # –ü–µ—Ä–µ—à–µ–ª
            description = f"{member.mention} –ø–µ—Ä–µ—à–µ–ª –∏–∑ {before.mention} –≤ {after.mention}"
            title = f"{Emojis.INFO} –£—á–∞—Å—Ç–Ω–∏–∫ —Å–º–µ–Ω–∏–ª –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª"
            color = 'BLUE'
            
        fields = [
            {"name": f"{Emojis.DOT} –£—á–∞—Å—Ç–Ω–∏–∫", "value": f"{member} ({member.id})", "inline": True},
            {"name": f"{Emojis.DOT} –ö–∞–Ω–∞–ª –¥–æ", "value": before.mention if before else "–ù–µ—Ç", "inline": True},
            {"name": f"{Emojis.DOT} –ö–∞–Ω–∞–ª –ø–æ—Å–ª–µ", "value": after.mention if after else "–ù–µ—Ç", "inline": True}
        ]
        
        await self.log_event(
            title=title,
            description=description,
            color=color,
            fields=fields
        )
        
    async def log_guild_stage_instance_create(self, stage_instance: discord.StageInstance):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–µ–π–¥–∂-—Å–æ–±—ã—Ç–∏—è"""
        fields = [
            {"name": f"{Emojis.DOT} –ù–∞–∑–≤–∞–Ω–∏–µ", "value": stage_instance.topic, "inline": True},
            {"name": f"{Emojis.DOT} –ö–∞–Ω–∞–ª", "value": stage_instance.channel.mention, "inline": True},
            {"name": f"{Emojis.DOT} –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å", "value": self._get_privacy_level(stage_instance.privacy_level), "inline": True}
        ]
        
        await self.log_event(
            title=f"{Emojis.SUCCESS} –°–æ–∑–¥–∞–Ω–æ —Å—Ç–µ–π–¥–∂-—Å–æ–±—ã—Ç–∏–µ",
            description=f"–í –∫–∞–Ω–∞–ª–µ {stage_instance.channel.mention} —Å–æ–∑–¥–∞–Ω–æ –Ω–æ–≤–æ–µ —Å—Ç–µ–π–¥–∂-—Å–æ–±—ã—Ç–∏–µ",
            color='GREEN',
            fields=fields
        )
        
    async def log_guild_stage_instance_delete(self, stage_instance: discord.StageInstance):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–µ–π–¥–∂-—Å–æ–±—ã—Ç–∏—è"""
        fields = [
            {"name": f"{Emojis.DOT} –ù–∞–∑–≤–∞–Ω–∏–µ", "value": stage_instance.topic, "inline": True},
            {"name": f"{Emojis.DOT} –ö–∞–Ω–∞–ª", "value": stage_instance.channel.mention, "inline": True}
        ]
        
        await self.log_event(
            title=f"{Emojis.ERROR} –£–¥–∞–ª–µ–Ω–æ —Å—Ç–µ–π–¥–∂-—Å–æ–±—ã—Ç–∏–µ",
            description=f"–í –∫–∞–Ω–∞–ª–µ {stage_instance.channel.mention} –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å—Ç–µ–π–¥–∂-—Å–æ–±—ã—Ç–∏–µ",
            color='RED',
            fields=fields
        )
        
    async def log_guild_stage_instance_update(self, before: discord.StageInstance, after: discord.StageInstance):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–µ–π–¥–∂-—Å–æ–±—ã—Ç–∏—è"""
        changes = []
        fields = [
            {"name": f"{Emojis.DOT} –ö–∞–Ω–∞–ª", "value": after.channel.mention, "inline": True}
        ]
        
        if before.topic != after.topic:
            changes.append(f"–¢–µ–º–∞: {before.topic} ‚ûú {after.topic}")
            
        if before.privacy_level != after.privacy_level:
            changes.append(f"–ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å: {self._get_privacy_level(before.privacy_level)} ‚ûú {self._get_privacy_level(after.privacy_level)}")
            
        if changes:
            fields.append({
                "name": f"{Emojis.DOT} –ò–∑–º–µ–Ω–µ–Ω–∏—è",
                "value": "\n".join(changes),
                "inline": False
            })
            
            await self.log_event(
                title=f"{Emojis.INFO} –ò–∑–º–µ–Ω–µ–Ω–æ —Å—Ç–µ–π–¥–∂-—Å–æ–±—ã—Ç–∏–µ",
                description=f"–í –∫–∞–Ω–∞–ª–µ {after.channel.mention} –æ–±–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç–µ–π–¥–∂-—Å–æ–±—ã—Ç–∏–µ",
                color='BLUE',
                fields=fields
            )
            
    def _get_privacy_level(self, level: discord.PrivacyLevel) -> str:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —á–∏—Ç–∞–µ–º–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è —É—Ä–æ–≤–Ω—è –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏"""
        return {
            discord.PrivacyLevel.public: "–ü—É–±–ª–∏—á–Ω—ã–π",
            discord.PrivacyLevel.guild_only: "–¢–æ–ª—å–∫–æ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞",
            discord.PrivacyLevel.closed: "–ó–∞–∫—Ä—ã—Ç—ã–π"
        }.get(level, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        
    async def log_channel_bitrate_update(self, before: VoiceChannel, after: VoiceChannel):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∏—Ç—Ä–µ–π—Ç–∞"""
        await self.log_guild_voice_update(before, after, "–ë–∏—Ç—Ä–µ–π—Ç", f"{before.bitrate//1000}kbps", f"{after.bitrate//1000}kbps")
        
    async def log_channel_user_limit_update(self, before: VoiceChannel, after: VoiceChannel):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        await self.log_guild_voice_update(before, after, "–õ–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", 
                                          before.user_limit or "–ë–µ–∑ –ª–∏–º–∏—Ç–∞", 
                                          after.user_limit or "–ë–µ–∑ –ª–∏–º–∏—Ç–∞")
        
    async def log_channel_slowmode_update(self, before: TextChannel, after: TextChannel):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞"""
        await self.log_guild_channel_update(before, after)
        
    async def log_channel_rtc_region_update(self, before: VoiceChannel, after: VoiceChannel):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–≥–∏–æ–Ω–∞ RTC"""
        await self.log_guild_voice_update(before, after, "–†–µ–≥–∏–æ–Ω", before.rtc_region or "–ê–≤—Ç–æ", after.rtc_region or "–ê–≤—Ç–æ")
        
    async def log_channel_video_quality_update(self, before: VoiceChannel, after: VoiceChannel):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –≤–∏–¥–µ–æ"""
        quality_map = {
            discord.VideoQualityMode.auto: "–ê–≤—Ç–æ",
            discord.VideoQualityMode.full: "720p",
        }
        await self.log_guild_voice_update(before, after, "–ö–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ", 
                                          quality_map.get(before.video_quality_mode, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"),
                                          quality_map.get(after.video_quality_mode, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"))
        
    async def log_forum_channel_update(self, before: ForumChannel, after: ForumChannel, change_type: str, old_value: any, new_value: any):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ñ–æ—Ä—É–º-–∫–∞–Ω–∞–ª–∞"""
        await self.log_guild_channel_update(before, after)
        
    async def log_channel_default_archive_update(self, before: TextChannel, after: TextChannel):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
        await self.log_guild_channel_update(before, after)
        
    async def log_channel_default_thread_slowmode_update(self, before: TextChannel, after: TextChannel):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ —Ç—Ä–µ–¥–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
        await self.log_guild_channel_update(before, after)
        
    async def log_forum_tags_update(self, before: ForumChannel, after: ForumChannel):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–≥–æ–≤ —Ñ–æ—Ä—É–º–∞"""
        old_tags = ", ".join([tag.name for tag in before.available_tags]) or "–ù–µ—Ç —Ç–µ–≥–æ–≤"
        new_tags = ", ".join([tag.name for tag in after.available_tags]) or "–ù–µ—Ç —Ç–µ–≥–æ–≤"
        await self.log_forum_channel_update(before, after, "–¢–µ–≥–∏", old_tags, new_tags)
        
    async def log_forum_layout_update(self, before: ForumChannel, after: ForumChannel):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–∞–∫–µ—Ç–∞ —Ñ–æ—Ä—É–º–∞"""
        layout_map = {
            discord.ForumLayoutType.not_set: "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω",
            discord.ForumLayoutType.list_view: "–°–ø–∏—Å–æ–∫",
            discord.ForumLayoutType.gallery_view: "–ì–∞–ª–µ—Ä–µ—è"
        }
        await self.log_forum_channel_update(before, after, "–ú–∞–∫–µ—Ç", 
                                          layout_map.get(before.default_layout, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"),
                                          layout_map.get(after.default_layout, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")) 