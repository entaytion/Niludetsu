import aiohttp
import yaml
from typing import Optional, Dict
from datetime import datetime

class WeatherAPI:
    def __init__(self):
        with open('config/config.yaml', 'r', encoding='utf-8') as f:
            config = yaml.safe_load(f)
            self.api_key = config['apis']['weather']['key']
        
        self.base_url = "http://api.openweathermap.org/data/2.5/weather"
        self.forecast_url = "http://api.openweathermap.org/data/2.5/forecast"
        
        self.weather_icons = {
            "01d": "‚òÄÔ∏è", "01n": "üåô",
            "02d": "üå§Ô∏è", "02n": "‚òÅÔ∏è",
            "03d": "‚òÅÔ∏è", "03n": "‚òÅÔ∏è",
            "04d": "‚òÅÔ∏è", "04n": "‚òÅÔ∏è",
            "09d": "üåßÔ∏è", "09n": "üåßÔ∏è",
            "10d": "üå¶Ô∏è", "10n": "üåßÔ∏è",
            "11d": "‚õàÔ∏è", "11n": "‚õàÔ∏è",
            "13d": "üå®Ô∏è", "13n": "üå®Ô∏è",
            "50d": "üå´Ô∏è", "50n": "üå´Ô∏è"
        }
        
        self.city_names = {
            '–∫–∏–µ–≤': 'Kyiv', '–∫–∏—ó–≤': 'Kyiv',
            '–º–æ—Å–∫–≤–∞': 'Moscow',
            '—Ö–∞—Ä—å–∫–æ–≤': 'Kharkiv', '—Ö–∞—Ä–∫—ñ–≤': 'Kharkiv',
            '–æ–¥–µ—Å—Å–∞': 'Odesa', '–æ–¥–µ—Å–∞': 'Odesa',
            '–ª—å–≤–æ–≤': 'Lviv', '–ª—å–≤—ñ–≤': 'Lviv',
            '–¥–Ω–µ–ø—Ä': 'Dnipro', '–¥–Ω—ñ–ø—Ä–æ': 'Dnipro',
            '–∑–∞–ø–æ—Ä–æ–∂—å–µ': 'Zaporizhzhia', '–∑–∞–ø–æ—Ä—ñ–∂–∂—è': 'Zaporizhzhia',
            '—Ö–º–µ–ª—å–Ω–∏—Ü–∫–∏–π': 'Khmelnytskyi', '—Ö–º–µ–ª—å–Ω–∏—Ü—å–∫–∏–π': 'Khmelnytskyi',
            '–≤–∏–Ω–Ω–∏—Ü–∞': 'Vinnytsia', '–≤—ñ–Ω–Ω–∏—Ü—è': 'Vinnytsia',
            '–∂–∏—Ç–æ–º–∏—Ä': 'Zhytomyr',
            '—á–µ—Ä–∫–∞—Å—Å—ã': 'Cherkasy', '—á–µ—Ä–∫–∞—Å–∏': 'Cherkasy',
            '—á–µ—Ä–Ω–∏–≥–æ–≤': 'Chernihiv', '—á–µ—Ä–Ω—ñ–≥—ñ–≤': 'Chernihiv',
            '—Ö–µ—Ä—Å–æ–Ω': 'Kherson',
            '–Ω–∏–∫–æ–ª–∞–µ–≤': 'Mykolaiv', '–º–∏–∫–æ–ª–∞—ó–≤': 'Mykolaiv',
            '–ø–æ–ª—Ç–∞–≤–∞': 'Poltava',
            '—Å—É–º—ã': 'Sumy', '—Å—É–º–∏': 'Sumy',
            '—Ä–æ–≤–Ω–æ': 'Rivne', '—Ä—ñ–≤–Ω–µ': 'Rivne',
            '–ª—É—Ü–∫': 'Lutsk', '–ª—É—Ü—å–∫': 'Lutsk',
            '—É–∂–≥–æ—Ä–æ–¥': 'Uzhhorod',
            '–∏–≤–∞–Ω–æ-—Ñ—Ä–∞–Ω–∫–æ–≤—Å–∫': 'Ivano-Frankivsk', '—ñ–≤–∞–Ω–æ-—Ñ—Ä–∞–Ω–∫—ñ–≤—Å—å–∫': 'Ivano-Frankivsk',
            '—Ç–µ—Ä–Ω–æ–ø–æ–ª—å': 'Ternopil', '—Ç–µ—Ä–Ω–æ–ø—ñ–ª—å': 'Ternopil',
            '—á–µ—Ä–Ω–æ–≤—Ü—ã': 'Chernivtsi', '—á–µ—Ä–Ω—ñ–≤—Ü—ñ': 'Chernivtsi',
            '–º–∞—Ä–∏—É–ø–æ–ª—å': 'Mariupol', '–º–∞—Ä—ñ—É–ø–æ–ª—å': 'Mariupol',
            '–∫—Ä–∏–≤–æ–π —Ä–æ–≥': 'Kryvyi Rih', '–∫—Ä–∏–≤–∏–π —Ä—ñ–≥': 'Kryvyi Rih'
        }

    @staticmethod
    def kelvin_to_celsius(kelvin: float) -> float:
        """–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∏–∑ –ö–µ–ª—å–≤–∏–Ω–æ–≤ –≤ –¶–µ–ª—å—Å–∏–∏"""
        return round(kelvin - 273.15, 1)

    @staticmethod
    def format_time(timestamp: int) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–∏ –≤ —á–∏—Ç–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç"""
        return datetime.fromtimestamp(timestamp).strftime('%H:%M')

    def get_weather_icon(self, icon_code: str) -> str:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏ –∏–∫–æ–Ω–∫–∏ –ø–æ–≥–æ–¥—ã –ø–æ –∫–æ–¥—É"""
        return self.weather_icons.get(icon_code, "‚ùì")

    def get_city_name(self, city: str) -> str:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞"""
        return self.city_names.get(city.lower(), city)

    async def get_weather(self, city: str) -> Optional[Dict]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã –¥–ª—è –≥–æ—Ä–æ–¥–∞"""
        city_name = self.get_city_name(city)
        params = {
            'q': city_name,
            'appid': self.api_key,
            'lang': 'ru'
        }
        
        async with aiohttp.ClientSession() as session:
            async with session.get(self.base_url, params=params) as response:
                if response.status == 200:
                    return await response.json()
                return None

    def format_weather_data(self, data: Dict) -> Dict:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –≤ —É–¥–æ–±–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç"""
        temp = self.kelvin_to_celsius(data['main']['temp'])
        feels_like = self.kelvin_to_celsius(data['main']['feels_like'])
        humidity = data['main']['humidity']
        wind_speed = data['wind']['speed']
        pressure = round(data['main']['pressure'] * 0.750062, 1)  # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ –º–º —Ä—Ç.—Å—Ç.
        visibility = data.get('visibility', 0) // 1000  # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ –∫–º
        description = data['weather'][0]['description']
        icon = self.get_weather_icon(data['weather'][0]['icon'])
        sunrise = self.format_time(data['sys']['sunrise'])
        sunset = self.format_time(data['sys']['sunset'])

        return {
            'temp': temp,
            'feels_like': feels_like,
            'humidity': humidity,
            'wind_speed': wind_speed,
            'pressure': pressure,
            'visibility': visibility,
            'description': description,
            'icon': icon,
            'sunrise': sunrise,
            'sunset': sunset,
            'city_name': data['name']
        } 