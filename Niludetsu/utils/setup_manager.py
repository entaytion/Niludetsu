import discord
from discord.ext import commands
import yaml
from typing import Optional, Dict, Any, List
from .embed import Embed

class SetupView(discord.ui.View):
    """View –¥–ª—è –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    
    def __init__(self):
        super().__init__(timeout=None)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –ø–µ—Ä–≤—ã–π —Ä—è–¥
        rules_btn = RulesButton()
        rules_btn.row = 0
        self.add_item(rules_btn)
        
        commands_btn = CommandsButton()
        commands_btn.row = 0
        self.add_item(commands_btn)
        
        partnership_btn = PartnershipButton()
        partnership_btn.row = 0
        self.add_item(partnership_btn)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤–æ –≤—Ç–æ—Ä–æ–π —Ä—è–¥
        color_btn = ColorRoleButton()
        color_btn.row = 1
        self.add_item(color_btn)
        
        gender_btn = GenderRoleButton()
        gender_btn.row = 1
        self.add_item(gender_btn)

class RulesButton(discord.ui.Button):
    def __init__(self):
        super().__init__(
            style=discord.ButtonStyle.secondary,
            label="–ü—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞",
            emoji="üìã",
            custom_id="rules"
        )
        
    async def callback(self, interaction: discord.Interaction):
        try:
            embed = Embed(
                title="üìã –ü—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞",
                description=(
                    "**[1]** –°–æ–±–ª—é–¥–∞–π—Ç–µ **–∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å** –ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n"
                    "**[2]** –ù–µ —Ä–∞–∑–º–µ—â–∞–π—Ç–µ **–≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã–µ —Å—Å—ã–ª–∫–∏, —Ñ–∏—à–∏–Ω–≥–æ–≤—ã–µ –ø–æ–ø—ã—Ç–∫–∏** –∏–ª–∏ **–≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã–µ —Ñ–∞–π–ª—ã**.\n"
                    "**[3]** –ù–µ –¥–æ–ø—É—Å–∫–∞–π—Ç–µ **—É–≥—Ä–æ–∑, –Ω–µ–Ω–∞–≤–∏—Å—Ç–∏, –¥–∏—Å–∫—Ä–∏–º–∏–Ω–∞—Ü–∏–∏, —Ä–∞—Å–∏–∑–º–∞** –∏–ª–∏ –¥—Ä—É–≥–∏—Ö —Ñ–æ—Ä–º –æ—Å–∫–æ—Ä–±–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è.\n"
                    "**[4]** –ù–µ —Ä–∞–∑–º–µ—â–∞–π—Ç–µ **–Ω–µ–∑–∞–∫–æ–Ω–Ω—ã–π, –æ—Å–∫–æ—Ä–±–∏—Ç–µ–ª—å–Ω—ã–π, –ø–æ—Ä–Ω–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π** –∏–ª–∏ **–Ω–µ–ø—Ä–∏–µ–º–ª–µ–º—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç** (–∏—Å–∫–ª—é—á–∞—è NSFW –∫–∞–Ω–∞–ª—ã).\n"
                    "**[5]** –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ **–±–∞–≥–∏** –∏–ª–∏ **–Ω–µ–¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏** Discord/–±–æ—Ç–æ–≤.\n"
                    "**[6]** –ù–µ –≤—ã–¥–∞–≤–∞–π—Ç–µ —Å–µ–±—è –∑–∞ **–¥—Ä—É–≥–∏—Ö –ª—é–¥–µ–π** –∏–ª–∏ **–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤** –∏ –Ω–µ –≤–≤–æ–¥–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ **–∑–∞–±–ª—É–∂–¥–µ–Ω–∏–µ**.\n"
                    "**[7]** –ò–∑–±–µ–≥–∞–π—Ç–µ –Ω–µ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è, —Ç–∞–∫–æ–≥–æ –∫–∞–∫ **—Ç—Ä–æ–ª–ª–∏–Ω–≥, —Ñ–ª–µ–π–º, –ø—Ä–æ–≤–æ–∫–∞—Ü–∏—è** –∏ —Ç–æ–º—É –ø–æ–¥–æ–±–Ω—ã–µ.\n"
                    "**[8]** –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–µ—Ä–≤–µ—Ä –¥–ª—è **—Å–∞–º–æ—Ä–µ–∫–ª–∞–º—ã** –∏–ª–∏ **–ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö —É—Å–ª—É–≥** –±–µ–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n"
                    "**[9]** –ù–µ —É—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ **—Å–ø–∞–º-–∞—Ç–∞–∫–∞—Ö**, **–∫—Ä–∞—à-–∞—Ç–∞–∫–∞—Ö** –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –ø–æ–ø—ã—Ç–∫–∞—Ö –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ–¥ —É–≥—Ä–æ–∑—É **—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å** –∏/–∏–ª–∏ **–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å** —Å–µ—Ä–≤–µ—Ä–∞.\n"
                    "**[10]** –ù–µ –Ω–∞—Ä—É—à–∞–π—Ç–µ **–ø—Ä–∞–≤–∏–ª–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã Discord** –∏ —Å–æ–±–ª—é–¥–∞–π—Ç–µ **—É—Å–ª–æ–≤–∏—è** –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ."
                ),
                color=0x2b2d31
            )
            if not interaction.response.is_done():
                await interaction.response.send_message(embed=embed, ephemeral=True)
            else:
                await interaction.followup.send(embed=embed, ephemeral=True)
        except discord.errors.NotFound:
            # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –∏—Å—Ç–µ–∫—à–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
            pass
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–Ω–æ–ø–∫–∏ –ø—Ä–∞–≤–∏–ª: {e}")

class CommandsButton(discord.ui.Button):
    def __init__(self):
        super().__init__(
            style=discord.ButtonStyle.secondary,
            label="–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–æ–≤",
            emoji="‚å®Ô∏è",
            custom_id="commands"
        )
        
    async def callback(self, interaction: discord.Interaction):
        try:
            embed = Embed(
                title="‚å®Ô∏è –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–æ–≤",
                description=(
                    "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
                    "‚Ä¢ `/help` - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ"
                ),
                color=0x2b2d31
            )
            if not interaction.response.is_done():
                await interaction.response.send_message(embed=embed, ephemeral=True)
            else:
                await interaction.followup.send(embed=embed, ephemeral=True)
        except discord.errors.NotFound:
            # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –∏—Å—Ç–µ–∫—à–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
            pass
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–Ω–æ–ø–∫–∏ –∫–æ–º–∞–Ω–¥: {e}")

class PartnershipButton(discord.ui.Button):
    def __init__(self):
        super().__init__(
            style=discord.ButtonStyle.secondary,
            label="–ü–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–æ —Å —Å–µ—Ä–≤–µ—Ä–æ–º",
            emoji="üíº",
            custom_id="partnership"
        )
        
    async def callback(self, interaction: discord.Interaction):
        try:
            embed = Embed(
                title="üíº –ü–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–æ —Å —Å–µ—Ä–≤–µ—Ä–æ–º",
                description=(
                    "**–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä–∞–º:**\n"
                    "‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏–π –ø—Ä–∞–≤–∏–ª Discord\n\n"
                    "**–î–ª—è –∑–∞—è–≤–∫–∏:**\n"
                    "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø–µ—Ä—Å–æ–Ω–∞–ª—É, –∫–æ—Ç–æ—Ä—ã–π –∏–º–µ–µ—Ç —Ä–æ–ª—å \"–ü–∞—Ä—Ç–Ω–µ—Ä-–º–µ–Ω–µ–¥–∂–µ—Ä\" –≤ —Å–µ—Ä–≤–µ—Ä–µ"
                ),
                color=0x2b2d31
            )
            if not interaction.response.is_done():
                await interaction.response.send_message(embed=embed, ephemeral=True)
            else:
                await interaction.followup.send(embed=embed, ephemeral=True)
        except discord.errors.NotFound:
            # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –∏—Å—Ç–µ–∫—à–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
            pass
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–Ω–æ–ø–∫–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞: {e}")

class ColorRoleButton(discord.ui.Button):
    def __init__(self):
        super().__init__(
            style=discord.ButtonStyle.secondary,
            label="–í—ã–±—Ä–∞—Ç—å —Ü–≤–µ—Ç —Ä–æ–ª–∏",
            emoji="üé®",
            custom_id="color_role"
        )
        
    async def callback(self, interaction: discord.Interaction):
        try:
            # –°–æ–∑–¥–∞–µ–º —ç–º–±–µ–¥ —Å –ø—Ä–µ–≤—å—é —Ü–≤–µ—Ç–æ–≤
            embed = Embed(
                title="üé® –í—ã–±–æ—Ä —Ü–≤–µ—Ç–∞ —Ä–æ–ª–∏",
                description="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Ü–≤–µ—Ç –≤–∞—à–µ–π —Ä–æ–ª–∏:",
                color=0x2b2d31
            )
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ü–≤–µ—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —ç–º–±–µ–¥–µ
            with open("data/config.yaml", "r", encoding="utf-8") as f:
                config = yaml.safe_load(f)
                colors = config.get("color_roles", {}).get("roles", [])
            
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–≤—å—é —Ü–≤–µ—Ç–æ–≤ —Å –ø–∏–Ω–≥–∞–º–∏ —Ä–æ–ª–µ–π
            preview = ""
            for color in colors:
                role_id = color.get("id")
                if role_id:
                    preview += f"{color['emoji']} <@&{role_id}>\n"
                else:
                    # –°–æ–∑–¥–∞–µ–º —Ä–æ–ª—å –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
                    role = await interaction.guild.create_role(
                        name=color["name"],
                        color=discord.Color(color["color"]),
                        reason="–°–æ–∑–¥–∞–Ω–∏–µ —Ü–≤–µ—Ç–Ω–æ–π —Ä–æ–ª–∏"
                    )
                    color["id"] = str(role.id)
                    preview += f"{color['emoji']} <@&{role.id}>\n"
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Ä–æ–ª–∏ –≤ –∫–æ–Ω—Ñ–∏–≥
                    with open("data/config.yaml", "w", encoding="utf-8") as f:
                        yaml.dump(config, f, indent=4, allow_unicode=True)
            
            embed.description = f"–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Ü–≤–µ—Ç –≤–∞—à–µ–π —Ä–æ–ª–∏:\n\n{preview}"
            
            await interaction.response.send_message(
                embed=embed,
                view=ColorRoleSelectView(),
                ephemeral=True
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–∞: {e}")
            await interaction.response.send_message(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Ü–≤–µ—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.",
                ephemeral=True
            )

class ColorRoleSelectView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=180)
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ü–≤–µ—Ç–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
        with open("data/config.yaml", "r", encoding="utf-8") as f:
            config = yaml.safe_load(f)
            colors = config.get("color_roles", {}).get("roles", [])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Ü–≤–µ—Ç–æ–≤ –≤ —Ç—Ä–∏ —Ä—è–¥–∞ –ø–æ 5 –∫–Ω–æ–ø–æ–∫
        for i, color_data in enumerate(colors):
            button = ColorButton(
                name=color_data["name"],
                emoji=color_data["emoji"],
                color_hex=color_data["color"]
            )
            # –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ —Ä—è–¥–∞–º: –ø–µ—Ä–≤—ã–µ 5 –≤ –ø–µ—Ä–≤—ã–π —Ä—è–¥, —Å–ª–µ–¥—É—é—â–∏–µ 5 –≤–æ –≤—Ç–æ—Ä–æ–π –∏ —Ç.–¥.
            row = i // 5
            button.row = row
            self.add_item(button)

class ColorButton(discord.ui.Button):
    def __init__(self, name: str, emoji: str, color_hex: int):
        super().__init__(
            style=discord.ButtonStyle.secondary,
            label="",  # –ü—É—Å—Ç–æ–π label –¥–ª—è —ç—Å—Ç–µ—Ç–∏–∫–∏
            emoji=emoji,
            custom_id=f"color_{name}"
        )
        self.role_name = name
        self.color_hex = color_hex
    
    def set_row(self, row: int) -> 'ColorButton':
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä—è–¥ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ—ë"""
        self.row = row
        return self
        
    async def callback(self, interaction: discord.Interaction):
        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID —Ä–æ–ª–µ–π
            with open("data/config.yaml", "r", encoding="utf-8") as f:
                config = yaml.safe_load(f)
                color_roles = config.get("color_roles", {}).get("roles", [])
                
            # –ù–∞—Ö–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –Ω–∞—à–µ–π —Ä–æ–ª–∏ –≤ –∫–æ–Ω—Ñ–∏–≥–µ
            role_data = next((role for role in color_roles if role["name"] == self.role_name), None)
            if not role_data:
                await interaction.response.send_message(
                    "–û—à–∏–±–∫–∞: —Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.",
                    ephemeral=True
                )
                return
                
            # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –ø–æ ID –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é
            role = None
            if role_data["id"]:
                role = interaction.guild.get_role(int(role_data["id"]))
                
            if not role:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ä–æ–ª—å
                role = await interaction.guild.create_role(
                    name=self.role_name,
                    color=discord.Color(self.color_hex),
                    reason="–°–æ–∑–¥–∞–Ω–∏–µ —Ü–≤–µ—Ç–Ω–æ–π —Ä–æ–ª–∏"
                )
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Ä–æ–ª–∏ –≤ –∫–æ–Ω—Ñ–∏–≥
                role_data["id"] = str(role.id)
                with open("data/config.yaml", "w", encoding="utf-8") as f:
                    yaml.dump(config, f, indent=4, allow_unicode=True)
            
            # –£–¥–∞–ª—è–µ–º –≤—Å–µ –¥—Ä—É–≥–∏–µ —Ü–≤–µ—Ç–Ω—ã–µ —Ä–æ–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_roles_to_remove = []
            for member_role in interaction.user.roles:
                for color_role in color_roles:
                    if color_role["id"] and str(member_role.id) == str(color_role["id"]):
                        user_roles_to_remove.append(member_role)
                        break
            
            if user_roles_to_remove:
                await interaction.user.remove_roles(*user_roles_to_remove)
            
            # –í—ã–¥–∞–µ–º –Ω–æ–≤—É—é —Ä–æ–ª—å
            await interaction.user.add_roles(role)
            
            embed = Embed(
                title="üé® –°–º–µ–Ω–∞ —Ü–≤–µ—Ç–∞",
                description=f"–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —Ü–≤–µ—Ç {self.role_name}",
                color=self.color_hex
            )
            
            await interaction.response.send_message(embed=embed, ephemeral=True)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ —Ü–≤–µ—Ç–Ω–æ–π —Ä–æ–ª–∏: {e}")
            await interaction.response.send_message(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ —Ä–æ–ª–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.",
                ephemeral=True
            )

class GenderRoleButton(discord.ui.Button):
    def __init__(self):
        super().__init__(
            style=discord.ButtonStyle.secondary,
            label="–í—ã–±—Ä–∞—Ç—å –ø–æ–ª",
            emoji="üë•",
            custom_id="gender_role"
        )
        
    async def callback(self, interaction: discord.Interaction):
        try:
            # –°–æ–∑–¥–∞–µ–º —ç–º–±–µ–¥ —Å –ø—Ä–µ–≤—å—é –≥–µ–Ω–¥–µ—Ä–Ω—ã—Ö —Ä–æ–ª–µ–π
            embed = Embed(
                title="üë• –í—ã–±–æ—Ä –ø–æ–ª–∞",
                description="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Å–≤–æ–π –ø–æ–ª:",
                color=0x2b2d31
            )
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–æ–ª–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —ç–º–±–µ–¥–µ
            with open("data/config.yaml", "r", encoding="utf-8") as f:
                config = yaml.safe_load(f)
                genders = config.get("gender_roles", {}).get("roles", [])
            
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–≤—å—é —Ä–æ–ª–µ–π —Å –ø–∏–Ω–≥–∞–º–∏
            preview = ""
            for gender in genders:
                role_id = gender.get("id")
                if role_id:
                    preview += f"{gender['emoji']} <@&{role_id}>\n"
            
            embed.description = f"–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Å–≤–æ–π –ø–æ–ª:\n\n{preview}"
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –≥–µ–Ω–¥–µ—Ä–æ–≤
            await interaction.response.send_message(
                embed=embed,
                view=GenderRoleSelectView(),
                ephemeral=True
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞: {e}")
            await interaction.response.send_message(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Ä–æ–ª–µ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.",
                ephemeral=True
            )

class GenderRoleSelectView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=180)
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≥–µ–Ω–¥–µ—Ä—ã –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
        with open("data/config.yaml", "r", encoding="utf-8") as f:
            config = yaml.safe_load(f)
            genders = config.get("gender_roles", {}).get("roles", [])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≥–µ–Ω–¥–µ—Ä–∞ –≤ –æ–¥–∏–Ω —Ä—è–¥
        for i, gender_data in enumerate(genders):
            button = GenderButton(
                name=gender_data["name"],
                emoji=gender_data["emoji"],
                role_id=gender_data["id"]
            )
            self.add_item(button.set_row(0))  # –û–¥–∏–Ω —Ä—è–¥

class GenderButton(discord.ui.Button):
    def __init__(self, name: str, emoji: str, role_id: str):
        super().__init__(
            style=discord.ButtonStyle.secondary,
            label="",  # –ü—É—Å—Ç–æ–π label –¥–ª—è —ç—Å—Ç–µ—Ç–∏–∫–∏
            emoji=emoji,
            custom_id=f"gender_{name}"
        )
        self.role_name = name
        self.role_id = role_id
    
    def set_row(self, row: int) -> 'GenderButton':
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä—è–¥ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ—ë"""
        self.row = row
        return self
        
    async def callback(self, interaction: discord.Interaction):
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –ø–æ ID
            role = interaction.guild.get_role(int(self.role_id))
            if not role:
                await interaction.response.send_message(
                    "–û—à–∏–±–∫–∞: —Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.",
                    ephemeral=True
                )
                return
                
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –≥–µ–Ω–¥–µ—Ä–Ω—ã—Ö —Ä–æ–ª–µ–π
            with open("data/config.yaml", "r", encoding="utf-8") as f:
                config = yaml.safe_load(f)
                gender_roles = config.get("gender_roles", {}).get("roles", [])
            
            # –£–¥–∞–ª—è–µ–º –≤—Å–µ –¥—Ä—É–≥–∏–µ –≥–µ–Ω–¥–µ—Ä–Ω—ã–µ —Ä–æ–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_roles_to_remove = []
            for member_role in interaction.user.roles:
                for gender_role in gender_roles:
                    if gender_role["id"] and str(member_role.id) == str(gender_role["id"]):
                        user_roles_to_remove.append(member_role)
                        break
            
            if user_roles_to_remove:
                await interaction.user.remove_roles(*user_roles_to_remove)
            
            # –í—ã–¥–∞–µ–º –Ω–æ–≤—É—é —Ä–æ–ª—å
            await interaction.user.add_roles(role)
            
            embed = Embed(
                title="üë• –í—ã–±–æ—Ä –ø–æ–ª–∞",
                description=f"–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ –ø–æ–ª {self.role_name}",
                color=0x2b2d31
            )
            
            await interaction.response.send_message(embed=embed, ephemeral=True)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –≥–µ–Ω–¥–µ—Ä–Ω–æ–π —Ä–æ–ª–∏: {e}")
            await interaction.response.send_message(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ —Ä–æ–ª–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.",
                ephemeral=True
            )

class SetupManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self.config: Dict[str, Any] = {}
        self.load_config()
        
    def load_config(self) -> None:
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ —Ñ–∞–π–ª–∞"""
        try:
            with open("data/config.yaml", "r", encoding="utf-8") as f:
                self.config = yaml.safe_load(f)
        except Exception as e:
            self.config = {}
            
    def save_config(self) -> None:
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ —Ñ–∞–π–ª"""
        try:
            with open("data/config.yaml", "w", encoding="utf-8") as f:
                yaml.dump(self.config, f, indent=4, allow_unicode=True)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥–∞: {e}")
            
    async def get_setup_message(self) -> Optional[discord.Message]:
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        channel_id = self.config.get("setup", {}).get("channel")
        message_id = self.config.get("setup", {}).get("message")
                
        if not channel_id:
            return None
            
        try:
            channel = self.bot.get_channel(int(channel_id))
            if not channel:
                return None
                
            if not message_id:
                return None
                
            message = await channel.fetch_message(int(message_id))
            return message
        except Exception as e:
            return None
            
    async def create_setup_message(self) -> Optional[discord.Message]:
        """–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        channel_id = self.config.get("setup", {}).get("channel")

        if not channel_id:
            return None
            
        try:
            channel = self.bot.get_channel(int(channel_id))
            if not channel:
                return None
                
            # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π —ç–º–±–µ–¥
            embed = Embed(
                title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", 
                description="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏,\n–∫–æ–º–∞–Ω–¥–∞–º–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞!",
                color=0x2b2d31
            )
            embed.set_image(url="https://cdn.discordapp.com/attachments/1332296613988794450/1335578470692163715/bgggg.png")
            
            # –°–æ–∑–¥–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é
            message = await channel.send(embed=embed, view=SetupView())
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–Ω—Ñ–∏–≥
            if "setup" not in self.config:
                self.config["setup"] = {}
            self.config["setup"]["message"] = str(message.id)
            self.save_config()
            
            return message
        except Exception as e:
            return None
            
    async def initialize_color_roles(self, guild: discord.Guild) -> None:
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ü–≤–µ—Ç–Ω—ã–µ —Ä–æ–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
        try:
            color_roles = self.config.get("color_roles", {}).get("roles", [])
            
            for role_data in color_roles:
                role_name = role_data["name"]
                role_color = role_data["color"]
                role_id = role_data.get("id")
                
                role = None
                if role_id:
                    role = guild.get_role(int(role_id))
                
                if not role:
                    # –°–æ–∑–¥–∞–µ–º —Ä–æ–ª—å –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                    role = await guild.create_role(
                        name=role_name,
                        color=discord.Color(role_color),
                        reason="–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ü–≤–µ—Ç–Ω–æ–π —Ä–æ–ª–∏"
                    )
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Ä–æ–ª–∏ –≤ –∫–æ–Ω—Ñ–∏–≥
                    role_data["id"] = str(role.id)
                    self.save_config()
                    print(f"–°–æ–∑–¥–∞–Ω–∞ —Ü–≤–µ—Ç–Ω–∞—è —Ä–æ–ª—å: {role_name} (ID: {role.id})")
                else:
                    # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–≤–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ä–æ–ª–∏ –µ—Å–ª–∏ –æ–Ω–∏ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è
                    if role.name != role_name or role.color.value != role_color:
                        await role.edit(
                            name=role_name,
                            color=discord.Color(role_color),
                            reason="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–Ω–æ–π —Ä–æ–ª–∏"
                        )
                        print(f"–û–±–Ω–æ–≤–ª–µ–Ω–∞ —Ä–æ–ª—å {role_name} (ID: {role.id})")
                        
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ü–≤–µ—Ç–Ω—ã—Ö —Ä–æ–ª–µ–π: {e}")
    
    async def initialize(self) -> None:
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ü–≤–µ—Ç–Ω—ã–µ —Ä–æ–ª–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
        for guild in self.bot.guilds:
            await self.initialize_color_roles(guild)
        
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = await self.get_setup_message()
        
        # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ
        if not message:
            await self.create_setup_message()
        else:
            # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ
            try:
                embed = Embed(
                    title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
                    description="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏,\n–∫–æ–º–∞–Ω–¥–∞–º–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞!",
                    color=0x2b2d31
                )
                embed.set_image(url="https://cdn.discordapp.com/attachments/1332296613988794450/1335578470692163715/bgggg.png")
                await message.edit(embed=embed, view=SetupView())
            except Exception as e:
                await self.create_setup_message() 