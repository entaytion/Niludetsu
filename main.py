from pypresence import Presence
import time
import discord
from discord.ext import commands
import os
import yaml
import asyncio
import hashlib

# Discord Bot setup
intents = discord.Intents.all()
bot = commands.Bot(command_prefix="!", intents=intents)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
with open('config/config.yaml', 'r', encoding='utf-8') as f:
    config = yaml.safe_load(f)

# RPC (Rich Presence) setup
client_id = config['bot']['client_id']
rpc = None

def load_command_hashes():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ö–µ—à–∏ –∫–æ–º–∞–Ω–¥ –∏–∑ —Ñ–∞–π–ª–∞"""
    try:
        with open('config/hash.yaml', 'r', encoding='utf-8') as f:
            return yaml.safe_load(f) or {}
    except FileNotFoundError:
        return {}

def save_command_hashes(hashes):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ö–µ—à–∏ –∫–æ–º–∞–Ω–¥ –≤ —Ñ–∞–π–ª"""
    with open('config/hash.yaml', 'w', encoding='utf-8') as f:
        yaml.dump(hashes, f, default_flow_style=False, allow_unicode=True)

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ö–µ—à–∏ –∫–æ–º–∞–Ω–¥
command_hashes = load_command_hashes()

def get_command_hash(command):
    """–°–æ–∑–¥–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Ö–µ—à –∫–æ–º–∞–Ω–¥—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –µ—ë —Å–≤–æ–π—Å—Ç–≤"""
    command_data = [
        command.name,
        command.description,
    ]
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    if hasattr(command, 'parameters'):
        params = []
        for param in command.parameters:
            params.append((param.name, str(param.type), getattr(param, 'description', '')))
        command_data.append(str(sorted(params)))
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ choices
    if hasattr(command, 'choices'):
        command_data.append(str(sorted([choice.name for choice in command.choices])))
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ permissions
    if hasattr(command, 'default_permissions'):
        command_data.append(str(command.default_permissions))
    
    return hashlib.md5(str(command_data).encode()).hexdigest()

async def sync_commands():
    """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏ –∏—Ö —Ö–µ—à–∏
        current_commands = {cmd.name: get_command_hash(cmd) for cmd in bot.tree.get_commands()}

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –∏–ª–∏ –Ω–æ–≤—ã–µ
        commands_to_sync = []
        for name, hash_value in current_commands.items():
            if name not in command_hashes or command_hashes[name] != hash_value:
                commands_to_sync.append(name)
                command_hashes[name] = hash_value

        # –£–¥–∞–ª—è–µ–º —Ö–µ—à–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
        removed_commands = []
        for name in list(command_hashes.keys()):
            if name not in current_commands:
                del command_hashes[name]
                removed_commands.append(name)

        # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        if commands_to_sync or removed_commands:
            print(f"üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥: {commands_to_sync}")
            await bot.tree.sync()
            save_command_hashes(command_hashes)
            print(f"‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ò–∑–º–µ–Ω–µ–Ω–æ: {len(commands_to_sync)} | –£–¥–∞–ª–µ–Ω–æ: {len(removed_commands)}")
        else:
            print("‚úÖ –í—Å–µ –∫–æ–º–∞–Ω–¥—ã –∞–∫—Ç—É–∞–ª—å–Ω—ã, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {e}")

async def update_presence():
    global rpc
    try:
        rpc = Presence(client_id)
        await asyncio.to_thread(rpc.connect)
        start_time = time.time()
        await asyncio.to_thread(
            rpc.update,
            state="Creating a Discord bot!",
            details="In development...",
            start=start_time,
            large_image="bot_icon",
            large_text="Bot in action!",
            buttons=[
                {"label": "Server", "url": "https://discord.gg/HxwZ6ceKKj"},
                {"label": "Site", "url": "https://niludetsu.vercel.app"},
            ],
        )
        print("‚úÖ Rich Presence –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ Rich Presence: {e}")

async def load_cogs():
    for folder in os.listdir("cogs"):
        if os.path.isdir(f"cogs/{folder}"):
            for filename in os.listdir(f"cogs/{folder}"):
                if filename.endswith(".py"):
                    try:
                        await bot.load_extension(f"cogs.{folder}.{filename[:-3]}")
                        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ cogs: {folder}/{filename[:-3]}")
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è: {folder}/{filename[:-3]}: {str(e)}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
@bot.tree.error
async def on_app_command_error(interaction: discord.Interaction, error: commands.CommandError):
    await interaction.response.send_message("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã!")

async def create_default_files():
    if not os.path.exists('config'):
        os.makedirs('config')
        
    if not os.path.exists('config/database.db'):
        open('config/database.db', 'w').close()
        
    if not os.path.exists('config/hash.yaml'):
        with open('config/hash.yaml', 'w', encoding='utf-8') as f:
            yaml.dump({}, f)

@bot.event
async def setup_hook():
    await create_default_files()
    await load_cogs()

@bot.event
async def on_ready():
    print(f"‚úÖ –ë–æ—Ç {bot.user} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
    await bot.change_presence(
        activity=discord.Activity(
            type=discord.ActivityType.listening,
            name="–°–æ–∑–¥–∞—ë–º –≤–∞–π–± –Ω–∞ Discord!"
        )
    )
    await sync_commands()
    await update_presence()

bot.run(config['bot']['token'])